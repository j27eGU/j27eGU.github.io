<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>【题解】洛谷P1379</title>
    <link href="/2025/10/06/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91%E6%B4%9B%E8%B0%B7P1379/"/>
    <url>/2025/10/06/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91%E6%B4%9B%E8%B0%B7P1379/</url>
    
    <content type="html"><![CDATA[<p>这道题有很多种方式</p><h1 id="A"><a href="#A" class="headerlink" title="A*"></a>A*</h1><p>A*的核心思想在于设置$k$，即搜索深度，若没有找到就继续向下找</p><p>A*的估价函数$\text{check}$，在这题中是统计与标准不同的个数$cnt$，若$cnt+step(已走的步数)&gt;k$，及时结束</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// Problem:Luogu P1379 八数码难题</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> ans[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>]=<br>&#123;<br>&#123;<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>&#125;,<br>&#123;<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>&#125;,<br>&#123;<span class="hljs-number">0</span>,<span class="hljs-number">8</span>,<span class="hljs-number">0</span>,<span class="hljs-number">4</span>&#125;,<br>&#123;<span class="hljs-number">0</span>,<span class="hljs-number">7</span>,<span class="hljs-number">6</span>,<span class="hljs-number">5</span>&#125;<br>&#125;;<br><span class="hljs-type">int</span> a[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>];<br><span class="hljs-type">bool</span> found=<span class="hljs-number">0</span>;<br><span class="hljs-type">int</span> dx[]=&#123;<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>&#125;,dy[]=&#123;<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>&#125;,k;<br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">same</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;<span class="hljs-number">4</span>;i++)<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;<span class="hljs-number">4</span>;j++)<br><span class="hljs-keyword">if</span>(a[i][j]!=ans[i][j])<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">check</span><span class="hljs-params">(<span class="hljs-type">int</span> step)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> cnt=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;<span class="hljs-number">4</span>;i++)<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;<span class="hljs-number">4</span>;j++)<br><span class="hljs-keyword">if</span>(a[i][j]!=ans[i][j])<br>&#123;<br><span class="hljs-keyword">if</span>(++cnt+step&gt;k)<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">A_star</span><span class="hljs-params">(<span class="hljs-type">int</span> x,<span class="hljs-type">int</span> y,<span class="hljs-type">int</span> step,<span class="hljs-type">int</span> pre)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span>(step==k)<br>&#123;<br><span class="hljs-keyword">if</span>(<span class="hljs-built_in">same</span>())found=<span class="hljs-number">1</span>;<br><span class="hljs-keyword">return</span> ;<br>&#125;<br><span class="hljs-keyword">if</span>(found)<span class="hljs-keyword">return</span> ;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">4</span>;i++)<br>&#123;<br><span class="hljs-type">int</span> nx=x+dx[i],ny=y+dy[i];<br><span class="hljs-keyword">if</span>(nx&lt;<span class="hljs-number">1</span>||ny&lt;<span class="hljs-number">1</span>||nx&gt;<span class="hljs-number">3</span>||ny&gt;<span class="hljs-number">3</span>||i+pre==<span class="hljs-number">3</span>)<span class="hljs-keyword">continue</span>;<br><span class="hljs-built_in">swap</span>(a[x][y],a[nx][ny]);<br><span class="hljs-built_in">A_star</span>(nx,ny,step<span class="hljs-number">+1</span>,i);<br><span class="hljs-built_in">swap</span>(a[x][y],a[nx][ny]);<br>&#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> sx,sy;<br>string s;<br>cin&gt;&gt;s;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">9</span>;i++)<br>&#123;<br>a[i/<span class="hljs-number">3</span><span class="hljs-number">+1</span>][i%<span class="hljs-number">3</span><span class="hljs-number">+1</span>]=s[i]-<span class="hljs-string">&#x27;0&#x27;</span>;<br><span class="hljs-keyword">if</span>(s[i]==<span class="hljs-string">&#x27;0&#x27;</span>)sx=i/<span class="hljs-number">3</span><span class="hljs-number">+1</span>,sy=i%<span class="hljs-number">3</span><span class="hljs-number">+1</span>;<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-built_in">same</span>())&#123;<span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;0&quot;</span>);<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;<br><span class="hljs-keyword">while</span>(++k)<br>&#123;<br><span class="hljs-built_in">A_star</span>(sx,sy,<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>);<br><span class="hljs-keyword">if</span>(found)<br>&#123;<br>cout&lt;&lt;k;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="双向BFS（双端队列BFS）"><a href="#双向BFS（双端队列BFS）" class="headerlink" title="双向BFS（双端队列BFS）"></a>双向BFS（双端队列BFS）</h1><p>不需要用整个方阵进行bfs，只要将情况（例如<code>123870456</code>）这样进行bfs</p><p>以起点和终点同时进行bfs，能尽快找到</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// Problem:Luogu P1379 八数码难题</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> tar=<span class="hljs-number">123804765</span>;<br><span class="hljs-type">int</span> sta;<br><span class="hljs-type">int</span> mp[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">read</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> x=<span class="hljs-number">0</span>,f=<span class="hljs-number">1</span>;<br><span class="hljs-type">char</span> c=<span class="hljs-built_in">getchar</span>();<br><span class="hljs-keyword">while</span>(!<span class="hljs-built_in">isdigit</span>(c))&#123;<span class="hljs-keyword">if</span>(c==<span class="hljs-string">&#x27;-&#x27;</span>)f=<span class="hljs-number">-1</span>;c=<span class="hljs-built_in">getchar</span>();&#125;<br><span class="hljs-keyword">while</span>(<span class="hljs-built_in">isdigit</span>(c))&#123;x=x*<span class="hljs-number">10</span>+c-<span class="hljs-string">&#x27;0&#x27;</span>;c=<span class="hljs-built_in">getchar</span>();&#125;<br><span class="hljs-keyword">return</span> x*f;<br>&#125;<br>queue &lt;<span class="hljs-type">int</span>&gt; q;<br>map &lt;<span class="hljs-type">int</span>,<span class="hljs-type">int</span>&gt; dis,vis;<br><span class="hljs-type">int</span> dx[]=&#123;<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">-1</span>&#125;,dy[]=&#123;<span class="hljs-number">1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>&#125;;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">bfs</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span>(sta==tar)<br>&#123;<br><span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;0&quot;</span>);<br><span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>&#125;<br>q.<span class="hljs-built_in">push</span>(sta);<br>dis[sta]=<span class="hljs-number">0</span>,vis[sta]=<span class="hljs-number">1</span>;<br>q.<span class="hljs-built_in">push</span>(tar);<br>dis[tar]=<span class="hljs-number">0</span>,vis[tar]=<span class="hljs-number">2</span>;<br><span class="hljs-keyword">while</span>(!q.<span class="hljs-built_in">empty</span>())<br>&#123;<br><span class="hljs-type">int</span> now=q.<span class="hljs-built_in">front</span>();<br>q.<span class="hljs-built_in">pop</span>();<br><span class="hljs-type">int</span> tmp=now,x,y;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">3</span>;i&gt;=<span class="hljs-number">1</span>;i--)<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">3</span>;j&gt;=<span class="hljs-number">1</span>;j--)<br>&#123;<br>mp[i][j]=tmp%<span class="hljs-number">10</span>;<br>tmp/=<span class="hljs-number">10</span>;<br><span class="hljs-keyword">if</span>(!mp[i][j])x=i,y=j;<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">4</span>;i++)<br>&#123;<br><span class="hljs-type">int</span> nx=x+dx[i],ny=y+dy[i];<br><span class="hljs-keyword">if</span>(nx&lt;<span class="hljs-number">1</span>||ny&lt;<span class="hljs-number">1</span>||nx&gt;<span class="hljs-number">3</span>||ny&gt;<span class="hljs-number">3</span>)<span class="hljs-keyword">continue</span>;<br><span class="hljs-type">int</span> nxt=<span class="hljs-number">0</span>;<br><span class="hljs-built_in">swap</span>(mp[x][y],mp[nx][ny]);<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=<span class="hljs-number">3</span>;i++)<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=<span class="hljs-number">3</span>;j++)<br>nxt=nxt*<span class="hljs-number">10</span>+mp[i][j];<br><span class="hljs-keyword">if</span>(vis[nxt]==vis[now])<br>&#123;<br><span class="hljs-built_in">swap</span>(mp[x][y],mp[nx][ny]);<br><span class="hljs-keyword">continue</span>;<br>&#125;<br><span class="hljs-keyword">if</span>(vis[now]+vis[nxt]==<span class="hljs-number">3</span>)<br>&#123;<br>cout&lt;&lt;dis[now]+dis[nxt]<span class="hljs-number">+1</span>;<br><span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>&#125;<br>dis[nxt]=dis[now]<span class="hljs-number">+1</span>;<br>vis[nxt]=vis[now];<br>q.<span class="hljs-built_in">push</span>(nxt);<br><span class="hljs-built_in">swap</span>(mp[x][y],mp[nx][ny]);<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>sta=<span class="hljs-built_in">read</span>();<br><span class="hljs-built_in">bfs</span>();<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="IDA"><a href="#IDA" class="headerlink" title="IDA*"></a>IDA*</h1><p>dfs的优化，大部分类似<del>懒得讲了</del></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// Problem:Luogu P1379 八数码难题</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> ans[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>]=<br>&#123;<br>&#123;<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>&#125;,<br>&#123;<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>&#125;,<br>&#123;<span class="hljs-number">0</span>,<span class="hljs-number">8</span>,<span class="hljs-number">0</span>,<span class="hljs-number">4</span>&#125;,<br>&#123;<span class="hljs-number">0</span>,<span class="hljs-number">7</span>,<span class="hljs-number">6</span>,<span class="hljs-number">5</span>&#125;<br>&#125;;<br><span class="hljs-type">int</span> a[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>],k;<br><span class="hljs-type">int</span> dx[]=&#123;<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>&#125;,dy[]=&#123;<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>&#125;;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">check</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> cnt=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=<span class="hljs-number">3</span>;i++)<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=<span class="hljs-number">3</span>;j++)<br>cnt+=(a[i][j]!=ans[i][j]);<br><span class="hljs-keyword">return</span> cnt;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-type">int</span> x,<span class="hljs-type">int</span> y,<span class="hljs-type">int</span> step,<span class="hljs-type">int</span> pre)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> res=<span class="hljs-built_in">check</span>();<br><span class="hljs-keyword">if</span>(!res)<br>&#123;<br>cout&lt;&lt;step;<br><span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>&#125;<br><span class="hljs-keyword">if</span>(res+step&gt;k)<span class="hljs-keyword">return</span> ;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">4</span>;i++)<br>&#123;<br><span class="hljs-type">int</span> nx=x+dx[i],ny=y+dy[i];<br><span class="hljs-keyword">if</span>(nx&lt;<span class="hljs-number">1</span>||ny&lt;<span class="hljs-number">1</span>||nx&gt;<span class="hljs-number">3</span>||ny&gt;<span class="hljs-number">3</span>||pre+i==<span class="hljs-number">3</span>)<span class="hljs-keyword">continue</span>;<br><span class="hljs-built_in">swap</span>(a[x][y],a[nx][ny]);<br><span class="hljs-built_in">dfs</span>(nx,ny,step<span class="hljs-number">+1</span>,i);<br><span class="hljs-built_in">swap</span>(a[x][y],a[nx][ny]);<br>&#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> x,y;<br>string s;<br>cin&gt;&gt;s;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;s.<span class="hljs-built_in">size</span>();i++)<br>&#123;<br>a[i/<span class="hljs-number">3</span><span class="hljs-number">+1</span>][i%<span class="hljs-number">3</span><span class="hljs-number">+1</span>]=s[i]-<span class="hljs-string">&#x27;0&#x27;</span>;<br><span class="hljs-keyword">if</span>(s[i]==<span class="hljs-string">&#x27;0&#x27;</span>)x=i/<span class="hljs-number">3</span><span class="hljs-number">+1</span>,y=i%<span class="hljs-number">3</span><span class="hljs-number">+1</span>;<br>&#125;<br><span class="hljs-keyword">while</span>(++k)<span class="hljs-built_in">dfs</span>(x,y,<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>);<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>题解</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【学习笔记】A*</title>
    <link href="/2025/10/06/%E3%80%90%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E3%80%91A/"/>
    <url>/2025/10/06/%E3%80%90%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E3%80%91A/</url>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>A*算法是一种在图形平面上，有多个路径中寻找一条从起点到终点的最短遍历路径，属于启发式搜索，因为它使用启发式的方法来计算图中的节点，从而减少实际的计算量，提高搜索效率。</p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>A*算法结合Dijkstra和Best-First-Search算法的特点 (<del>不是BFS</del>)。它用一个估价函数$f(n)&#x3D;g(n)+h(n)$，估算从起点到终点的总代价，$g(n)$表示起点到当前节点的代价，$h(n)$是当前节点到终点的启发式估价。</p><p>A*通过扩展路径代价最小的节点来寻找目标点，它保证如果$h(n)$的估计值是准确的，那么找到的路径也是最短的。相较于Dijkstra算法一直遍历距离较近的点，在A*的算法中增加启发式函数$h(n)$会减少收录的数量，加快算法到终点的速度。</p><h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><p><img src="https://i-blog.csdnimg.cn/direct/88d7713d92384955aabf4739e6349139.png"></p><h2 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h2><p><a href="https://www.luogu.com.cn/problem/P1379">八数码难题</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>学习笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【题解】10-5提高组模拟</title>
    <link href="/2025/10/06/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%9110-5%E6%8F%90%E9%AB%98%E7%BB%84%E6%A8%A1%E6%8B%9F/"/>
    <url>/2025/10/06/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%9110-5%E6%8F%90%E9%AB%98%E7%BB%84%E6%A8%A1%E6%8B%9F/</url>
    
    <content type="html"><![CDATA[<p>图论做爽了</p><h1 id="A-蓝桥杯-2024-省-B-第二场-狡兔-k-窟"><a href="#A-蓝桥杯-2024-省-B-第二场-狡兔-k-窟" class="headerlink" title="A. [蓝桥杯 2024 省 B 第二场] 狡兔 k 窟"></a>A. [蓝桥杯 2024 省 B 第二场] 狡兔 k 窟</h1><p><a href="https://www.luogu.com.cn/problem/P12126">lnk</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><code class="hljs cp">// Problem:Luogu P12126 [蓝桥杯 2024 省 B 第二场] 狡兔 k 窟<br><br>#include&lt;bits/stdc++.h&gt;<br>using namespace std;<br>#define int long long<br>const int MAXN=5010;<br>int n,q,c[MAXN];<br>vector &lt;int&gt; id[MAXN];<br>struct edge<br>&#123;<br>int v,w;<br>&#125;;<br>vector &lt;edge&gt; g[MAXN];<br>struct node<br>&#123;<br>int u,dis;<br>bool operator &lt;(const node a)const<br>&#123;<br>return dis&gt;a.dis;<br>&#125;<br>&#125;;<br>priority_queue &lt;node&gt; pq;<br>int dis[MAXN];<br>void dijkstra(int s)<br>&#123;<br>memset(dis,0x3f,sizeof(dis));<br>pq.push(&#123;s,0&#125;);<br>dis[s]=0;<br>while(!pq.empty())<br>&#123;<br>node front=pq.top();<br>pq.pop();<br>int u=front.u;<br>if(dis[u]!=front.dis)continue;<br>for(auto tmp:g[u])<br>&#123;<br>int v=tmp.v,w=tmp.w;<br>if(dis[v]&gt;dis[u]+w)<br>&#123;<br>dis[v]=dis[u]+w;<br>pq.push(&#123;v,dis[v]&#125;);<br>&#125;<br>&#125;<br>&#125;<br>&#125;<br>signed main()<br>&#123;<br>ios::sync_with_stdio(0);<br>cin.tie(0),cout.tie(0);<br>cin&gt;&gt;n&gt;&gt;q;<br>for(int i=1;i&lt;=n;i++)cin&gt;&gt;c[i];<br>for(int i=1;i&lt;n;i++)<br>&#123;<br>int u,v;<br>cin&gt;&gt;u&gt;&gt;v;<br>g[c[u]].push_back(&#123;c[v],1&#125;);<br>g[c[v]].push_back(&#123;c[u],1&#125;);<br>&#125;<br>for(int i=1;i&lt;=q;i++)<br>&#123;<br>int s,t;<br>cin&gt;&gt;s&gt;&gt;t;<br>dijkstra(c[s]);<br>cout&lt;&lt;dis[c[t]]&lt;&lt;&#x27;\n&#x27;;<br>&#125;<br>return 0;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="B-「Diligent-OI-R2-C」所谓伊人"><a href="#B-「Diligent-OI-R2-C」所谓伊人" class="headerlink" title="B.「Diligent-OI R2 C」所谓伊人"></a>B.「Diligent-OI R2 C」所谓伊人</h1><p><a href="https://www.luogu.com.cn/problem/P13823">lnk</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// Problem:Luogu P13823 「Diligent-OI R2 C」所谓伊人</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> MAXN=<span class="hljs-number">5e5</span><span class="hljs-number">+10</span>,MAXM=MAXN&lt;&lt;<span class="hljs-number">1</span>;<br><span class="hljs-type">int</span> n,m,p[MAXN];<br>vector &lt;<span class="hljs-type">int</span>&gt; g[MAXN];<br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">edge</span><br>&#123;<br><span class="hljs-type">int</span> v,w;<br>&#125;;<br>vector &lt;edge&gt; G[MAXM];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">read</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> x=<span class="hljs-number">0</span>,f=<span class="hljs-number">1</span>;<br><span class="hljs-type">char</span> c=<span class="hljs-built_in">getchar</span>();<br><span class="hljs-keyword">while</span>(!<span class="hljs-built_in">isdigit</span>(c))<br>&#123;<br><span class="hljs-keyword">if</span>(c==<span class="hljs-string">&#x27;-&#x27;</span>)f=<span class="hljs-number">-1</span>;<br>c=<span class="hljs-built_in">getchar</span>();<br>&#125;<br><span class="hljs-keyword">while</span>(<span class="hljs-built_in">isdigit</span>(c))<br>&#123;<br>x=x*<span class="hljs-number">10</span>+c-<span class="hljs-string">&#x27;0&#x27;</span>;<br>c=<span class="hljs-built_in">getchar</span>();<br>&#125;<br><span class="hljs-keyword">return</span> x*f;<br>&#125;<br><span class="hljs-type">int</span> wcc[MAXN],maxp[MAXN],wcnt;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">bfs</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++) <span class="hljs-keyword">if</span>(wcc[i]==<span class="hljs-number">0</span>)<br>&#123;<br>wcc[i]=++wcnt;<br>maxp[wcnt]=p[i];<br>queue &lt;<span class="hljs-type">int</span>&gt; q;<br>q.<span class="hljs-built_in">push</span>(i);<br><span class="hljs-keyword">while</span>(!q.<span class="hljs-built_in">empty</span>())<br>&#123;<br><span class="hljs-type">int</span> u=q.<span class="hljs-built_in">front</span>();<br>q.<span class="hljs-built_in">pop</span>();<br>maxp[wcnt]=<span class="hljs-built_in">max</span>(maxp[wcnt],p[u]);<br>wcc[u]=wcnt;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> v:g[u])<br><span class="hljs-keyword">if</span>(wcc[v]==<span class="hljs-number">0</span>)<br>&#123;<br>wcc[v]=wcnt;<br>q.<span class="hljs-built_in">push</span>(v);<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-type">bool</span> vis[MAXM];<br><span class="hljs-type">int</span> dis[MAXM];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">dijkstra</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>deque &lt;<span class="hljs-type">int</span>&gt; q;<br><span class="hljs-built_in">memset</span>(dis,<span class="hljs-number">0x3f</span>,<span class="hljs-built_in">sizeof</span>(dis));<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br><span class="hljs-keyword">if</span>(p[i]==maxp[wcc[i]])<br>q.<span class="hljs-built_in">push_back</span>(i),q.<span class="hljs-built_in">push_back</span>(i+n),<br>dis[i]=dis[i+n]=<span class="hljs-number">1</span>;<br><span class="hljs-keyword">while</span>(!q.<span class="hljs-built_in">empty</span>())<br>&#123;<br><span class="hljs-type">int</span> u=q.<span class="hljs-built_in">front</span>();<br>q.<span class="hljs-built_in">pop_front</span>();<br><span class="hljs-keyword">if</span>(vis[u])<span class="hljs-keyword">continue</span>;<br>vis[u]=<span class="hljs-number">1</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> tmp:G[u])<br>&#123;<br><span class="hljs-type">int</span> v=tmp.v,w=tmp.w;<br><span class="hljs-keyword">if</span>(dis[v]&gt;dis[u]+w)<br>&#123;<br>dis[v]=dis[u]+w;<br><span class="hljs-keyword">if</span>(w==<span class="hljs-number">0</span>)q.<span class="hljs-built_in">push_front</span>(v);<br><span class="hljs-keyword">else</span> q.<span class="hljs-built_in">push_back</span>(v);<br>&#125;<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>n=<span class="hljs-built_in">read</span>(),m=<span class="hljs-built_in">read</span>();<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>&#123;<br>p[i]=<span class="hljs-built_in">read</span>();<br>G[i].<span class="hljs-built_in">push_back</span>(&#123;i+n,<span class="hljs-number">1</span>&#125;);<br>G[i+n].<span class="hljs-built_in">push_back</span>(&#123;i,<span class="hljs-number">1</span>&#125;);<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)<br>&#123;<br><span class="hljs-type">int</span> u=<span class="hljs-built_in">read</span>(),v=<span class="hljs-built_in">read</span>();<br>G[u].<span class="hljs-built_in">push_back</span>(&#123;v,<span class="hljs-number">0</span>&#125;);<br>G[v+n].<span class="hljs-built_in">push_back</span>(&#123;u+n,<span class="hljs-number">0</span>&#125;);<br>g[u].<span class="hljs-built_in">push_back</span>(v);<br>g[v].<span class="hljs-built_in">push_back</span>(u);<br>&#125;<br><span class="hljs-built_in">bfs</span>();<br><span class="hljs-built_in">dijkstra</span>();<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>&#123;<br><span class="hljs-type">int</span> ans=<span class="hljs-built_in">min</span>(dis[i],dis[i+n]);<br><span class="hljs-keyword">if</span>(p[i]==maxp[wcc[i]])ans=<span class="hljs-number">0</span>;<br>cout&lt;&lt;ans&lt;&lt;<span class="hljs-string">&quot; &quot;</span>;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>其他还没订完，先咕着</p>]]></content>
    
    
    
    <tags>
      
      <tag>题解</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【题解】10-5入门组模拟</title>
    <link href="/2025/10/06/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%9110-5%E5%85%A5%E9%97%A8%E7%BB%84%E6%A8%A1%E6%8B%9F/"/>
    <url>/2025/10/06/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%9110-5%E5%85%A5%E9%97%A8%E7%BB%84%E6%A8%A1%E6%8B%9F/</url>
    
    <content type="html"><![CDATA[<p>这次考的倒挺均衡</p><h2 id="A-蓝桥杯-2013-国-C-危险系数"><a href="#A-蓝桥杯-2013-国-C-危险系数" class="headerlink" title="A.[蓝桥杯 2013 国 C] 危险系数"></a>A.[蓝桥杯 2013 国 C] 危险系数</h2><p><a href="https://www.luogu.com.cn/problem/P8604">lnk</a></p><p>这道题用DFS&#x2F;BFS都可以过，枚举$n$个节点被删除的情况，数据够小，$\text{MAXN}&#x3D;1000$。</p><p>由于同学DFS没调出来，我帮他写了一个栈模拟的DFS，顺便附上我的BFS。</p><h3 id="DFS（栈模拟）"><a href="#DFS（栈模拟）" class="headerlink" title="DFS（栈模拟）"></a>DFS（栈模拟）</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> MAXN=<span class="hljs-number">1010</span>; <br><span class="hljs-type">int</span> n,m;<br>vector &lt;<span class="hljs-type">int</span>&gt; g[MAXN];<br><span class="hljs-type">int</span> cnt[MAXN];<br><span class="hljs-type">bool</span> vis[MAXN];<br>stack &lt;<span class="hljs-type">int</span>&gt; stk; <br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">solve</span><span class="hljs-params">(<span class="hljs-type">int</span> s,<span class="hljs-type">int</span> t,<span class="hljs-type">int</span> ban)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-built_in">memset</span>(vis,<span class="hljs-number">0</span>,<span class="hljs-built_in">sizeof</span>(vis));<br><span class="hljs-keyword">while</span>(!stk.<span class="hljs-built_in">empty</span>())stk.<span class="hljs-built_in">pop</span>();<br>stk.<span class="hljs-built_in">push</span>(s);<br>vis[s]=<span class="hljs-number">1</span>;<br><span class="hljs-keyword">while</span>(!stk.<span class="hljs-built_in">empty</span>())<br>&#123;<br><span class="hljs-type">int</span> u=stk.<span class="hljs-built_in">top</span>();<br>stk.<span class="hljs-built_in">pop</span>();<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> v:g[u])<br><span class="hljs-keyword">if</span>(!vis[v]&amp;&amp;v!=ban)<br>&#123;<br><span class="hljs-keyword">if</span>(v==t)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>stk.<span class="hljs-built_in">push</span>(v);<br>vis[v]=<span class="hljs-number">1</span>;<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>cin&gt;&gt;n&gt;&gt;m;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)<br>&#123;<br><span class="hljs-type">int</span> u,v;<br>cin&gt;&gt;u&gt;&gt;v;<br>g[u].<span class="hljs-built_in">push_back</span>(v);<br>g[v].<span class="hljs-built_in">push_back</span>(u);<br>&#125;<br><span class="hljs-type">int</span> u,v,ans=<span class="hljs-number">0</span>;<br>cin&gt;&gt;u&gt;&gt;v;<br><span class="hljs-keyword">if</span>(<span class="hljs-built_in">solve</span>(u,v,<span class="hljs-number">-1</span>))<br>&#123;<br><span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;-1&quot;</span>);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>&#123;<br><span class="hljs-keyword">if</span>(i==u||i==v)<span class="hljs-keyword">continue</span>;<br>ans+=<span class="hljs-built_in">solve</span>(u,v,i);<br>&#125;<br>cout&lt;&lt;ans;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="BFS"><a href="#BFS" class="headerlink" title="BFS"></a>BFS</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> MAXN=<span class="hljs-number">1010</span>; <br><span class="hljs-type">int</span> n,m;<br>vector &lt;<span class="hljs-type">int</span>&gt; g[MAXN];<br><span class="hljs-type">int</span> cnt[MAXN];<br><span class="hljs-type">bool</span> vis[MAXN];<br>queue &lt;<span class="hljs-type">int</span>&gt; q;<br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">solve</span><span class="hljs-params">(<span class="hljs-type">int</span> s,<span class="hljs-type">int</span> t,<span class="hljs-type">int</span> ban)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-built_in">memset</span>(vis,<span class="hljs-number">0</span>,<span class="hljs-built_in">sizeof</span>(vis));<br><span class="hljs-keyword">while</span>(!q.<span class="hljs-built_in">empty</span>())q.<span class="hljs-built_in">pop</span>();<br>q.<span class="hljs-built_in">push</span>(s);<br>vis[s]=<span class="hljs-number">1</span>;<br><span class="hljs-keyword">while</span>(!q.<span class="hljs-built_in">empty</span>())<br>&#123;<br><span class="hljs-type">int</span> u=q.<span class="hljs-built_in">front</span>();<br>q.<span class="hljs-built_in">pop</span>();<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> v:g[u])<br>&#123;<br><span class="hljs-keyword">if</span>(!vis[v]&amp;&amp;v!=ban)<br>&#123;<br><span class="hljs-keyword">if</span>(v==t)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>q.<span class="hljs-built_in">push</span>(v);<br>vis[v]=<span class="hljs-number">1</span>;<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>cin&gt;&gt;n&gt;&gt;m;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)<br>&#123;<br><span class="hljs-type">int</span> u,v;<br>cin&gt;&gt;u&gt;&gt;v;<br>g[u].<span class="hljs-built_in">push_back</span>(v);<br>g[v].<span class="hljs-built_in">push_back</span>(u);<br>&#125;<br><span class="hljs-type">int</span> u,v,ans=<span class="hljs-number">0</span>;<br>cin&gt;&gt;u&gt;&gt;v;<br><span class="hljs-keyword">if</span>(<span class="hljs-built_in">solve</span>(u,v,<span class="hljs-number">-1</span>))<br>&#123;<br><span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;-1&quot;</span>);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>&#123;<br><span class="hljs-keyword">if</span>(i==u||i==v)<span class="hljs-keyword">continue</span>;<br>ans+=<span class="hljs-built_in">solve</span>(u,v,i);<br>&#125;<br>cout&lt;&lt;ans;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="B-【XR-3】小道消息"><a href="#B-【XR-3】小道消息" class="headerlink" title="B.【XR-3】小道消息"></a>B.【XR-3】小道消息</h2><p><a href="https://www.luogu.com.cn/problem/P5535">lnk</a></p><p>根据切比雪夫定理（虽然我没用到）：</p><ul><li>当$k+1$是质数时，且$1$ 到$ n$没有$k$的倍数，就能在$\bf 1$天内传播完</li><li>否则就只能在$\bf 2$天内传播完</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">is_prime</span><span class="hljs-params">(<span class="hljs-type">int</span> n)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span>(n==<span class="hljs-number">2</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<span class="hljs-comment">//! </span><br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">2</span>;i*i&lt;=n;i++)<br><span class="hljs-keyword">if</span>(n%i==<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> n,k;<br>cin&gt;&gt;n&gt;&gt;k;<br><span class="hljs-keyword">if</span>(<span class="hljs-built_in">is_prime</span>(k<span class="hljs-number">+1</span>)&amp;&amp;(k&lt;&lt;<span class="hljs-number">1</span>)&gt;=n)cout&lt;&lt;<span class="hljs-number">1</span>;<br><span class="hljs-keyword">else</span> cout&lt;&lt;<span class="hljs-number">2</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="C-ICPC-2013-WF-Low-Power"><a href="#C-ICPC-2013-WF-Low-Power" class="headerlink" title="C.[ICPC 2013 WF] Low Power"></a>C.[ICPC 2013 WF] Low Power</h2><p>二分</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> MAXN=<span class="hljs-number">1010</span>; <br><span class="hljs-type">int</span> n,m;<br>vector &lt;<span class="hljs-type">int</span>&gt; g[MAXN];<br><span class="hljs-type">int</span> cnt[MAXN];<br><span class="hljs-type">bool</span> vis[MAXN];<br>stack &lt;<span class="hljs-type">int</span>&gt; stk; <br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">solve</span><span class="hljs-params">(<span class="hljs-type">int</span> s,<span class="hljs-type">int</span> t,<span class="hljs-type">int</span> ban)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-built_in">memset</span>(vis,<span class="hljs-number">0</span>,<span class="hljs-built_in">sizeof</span>(vis));<br><span class="hljs-keyword">while</span>(!stk.<span class="hljs-built_in">empty</span>())stk.<span class="hljs-built_in">pop</span>();<br>stk.<span class="hljs-built_in">push</span>(s);<br>vis[s]=<span class="hljs-number">1</span>;<br><span class="hljs-keyword">while</span>(!stk.<span class="hljs-built_in">empty</span>())<br>&#123;<br><span class="hljs-type">int</span> u=stk.<span class="hljs-built_in">top</span>();<br>stk.<span class="hljs-built_in">pop</span>();<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> v:g[u])<br><span class="hljs-keyword">if</span>(!vis[v]&amp;&amp;v!=ban)<br>&#123;<br><span class="hljs-keyword">if</span>(v==t)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>stk.<span class="hljs-built_in">push</span>(v);<br>vis[v]=<span class="hljs-number">1</span>;<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>cin&gt;&gt;n&gt;&gt;m;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)<br>&#123;<br><span class="hljs-type">int</span> u,v;<br>cin&gt;&gt;u&gt;&gt;v;<br>g[u].<span class="hljs-built_in">push_back</span>(v);<br>g[v].<span class="hljs-built_in">push_back</span>(u);<br>&#125;<br><span class="hljs-type">int</span> u,v,ans=<span class="hljs-number">0</span>;<br>cin&gt;&gt;u&gt;&gt;v;<br><span class="hljs-keyword">if</span>(<span class="hljs-built_in">solve</span>(u,v,<span class="hljs-number">-1</span>))<br>&#123;<br><span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;-1&quot;</span>);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>&#123;<br><span class="hljs-keyword">if</span>(i==u||i==v)<span class="hljs-keyword">continue</span>;<br>ans+=<span class="hljs-built_in">solve</span>(u,v,i);<br>&#125;<br>cout&lt;&lt;ans;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="D-APIO2009-采油区域"><a href="#D-APIO2009-采油区域" class="headerlink" title="D.[APIO2009] 采油区域"></a>D.[APIO2009] 采油区域</h2><p>前缀和+暴力</p><p>dalao说这题很水……</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> mp[<span class="hljs-number">2000</span>][<span class="hljs-number">2000</span>];<br><span class="hljs-type">int</span> a[<span class="hljs-number">2000</span>][<span class="hljs-number">2000</span>],b[<span class="hljs-number">2000</span>][<span class="hljs-number">2000</span>],c[<span class="hljs-number">2000</span>][<span class="hljs-number">2000</span>],d[<span class="hljs-number">2000</span>][<span class="hljs-number">2000</span>];<br><span class="hljs-type">int</span> n,m,k;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d%d&quot;</span>,&amp;n,&amp;m,&amp;k);<br><span class="hljs-type">int</span> x;<br><span class="hljs-type">int</span> cnt=<span class="hljs-number">1</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=m;j++)<br>&#123;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;x);<br>mp[i][j]=mp[i<span class="hljs-number">-1</span>][j]+mp[i][j<span class="hljs-number">-1</span>]-mp[i<span class="hljs-number">-1</span>][j<span class="hljs-number">-1</span>]+x;<br>&#125;<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=n;i&gt;=k;i--)<br>&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=m;j&gt;=k;j--)<br>&#123;<br>mp[i][j]-=mp[i-k][j]+mp[i][j-k]-mp[i-k][j-k];<br>&#125;<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=k;i&lt;=n;i++)<br>&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=k;j&lt;=m;j++)<br>&#123;<br>a[i][j]=<span class="hljs-built_in">max</span>(mp[i][j],<span class="hljs-built_in">max</span>(a[i<span class="hljs-number">-1</span>][j],a[i][j<span class="hljs-number">-1</span>]));<br>&#125;<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=k;i&lt;=n;i++)<br>&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=m;j&gt;=k;j--)<br>&#123;<br>b[i][j]=<span class="hljs-built_in">max</span>(mp[i][j],<span class="hljs-built_in">max</span>(b[i<span class="hljs-number">-1</span>][j],b[i][j<span class="hljs-number">+1</span>]));<br>&#125;<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=n;i&gt;=k;i--)<br>&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=k;j&lt;=m;j++)<br>&#123;<br>c[i][j]=<span class="hljs-built_in">max</span>(mp[i][j],<span class="hljs-built_in">max</span>(c[i<span class="hljs-number">+1</span>][j],c[i][j<span class="hljs-number">-1</span>]));<br>&#125;<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=n;i&gt;=k;i--)<br>&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=m;j&gt;=k;j--)<br>&#123;<br>d[i][j]=<span class="hljs-built_in">max</span>(mp[i][j],<span class="hljs-built_in">max</span>(d[i<span class="hljs-number">+1</span>][j],d[i][j<span class="hljs-number">+1</span>]));<br>&#125;<br>&#125;<br><span class="hljs-type">int</span> ans=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=k;i&lt;=n-k;i++)<br>&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=k;j&lt;=m-k;j++)<br>&#123;<br>ans=<span class="hljs-built_in">max</span>(ans,a[i][j]+b[i][j+k]+c[i+k][m]);<br>&#125;<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=k;i&lt;=n-k;i++)<br>&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=k;j&lt;=m-k;j++)<br>&#123;<br>ans=<span class="hljs-built_in">max</span>(ans,a[i][m]+c[i+k][j]+d[i+k][j+k]);<br>&#125;<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=k;i&lt;=n-k;i++)<br>&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=k;j&lt;=m-k;j++)<br>&#123;<br>ans=<span class="hljs-built_in">max</span>(ans,a[i][j]+b[n][j+k]+c[i+k][j]);<br>&#125;<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=k;i&lt;=n-k;i++)<br>&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=k;j&lt;=m-k;j++)<br>&#123;<br>ans=<span class="hljs-built_in">max</span>(ans,a[n][j]+b[i][j+k]+d[i+k][j+k]);<br>&#125;<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=k;i&lt;=n-k;i++)<br>&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=k+k;j&lt;=m-k;j++)<br>&#123;<br>ans=<span class="hljs-built_in">max</span>(ans,a[n][j-k]+b[n][j+k]+mp[i][j]);<br>&#125;<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=k+k;i&lt;=n-k;i++)<br>&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=k;j&lt;=m-k;j++)<br>&#123;<br>ans=<span class="hljs-built_in">max</span>(ans,a[i-k][m]+c[i+k][m]+mp[i][j]);<br>&#125;<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,ans);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>题解</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【题解】10-4提高组模拟</title>
    <link href="/2025/10/06/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%9110-4%E6%8F%90%E9%AB%98%E7%BB%84%E6%A8%A1%E6%8B%9F/"/>
    <url>/2025/10/06/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%9110-4%E6%8F%90%E9%AB%98%E7%BB%84%E6%A8%A1%E6%8B%9F/</url>
    
    <content type="html"><![CDATA[<p>图论题做爽了（还说考的知识点要均匀……）</p><h2 id="A-『MGOI』Simple-Round-I-C-魔法禁林"><a href="#A-『MGOI』Simple-Round-I-C-魔法禁林" class="headerlink" title="A.『MGOI』Simple Round I | C. 魔法禁林"></a>A.『MGOI』Simple Round I | C. 魔法禁林</h2><p><a href="https://www.luogu.com.cn/problem/P9504">lnk</a></p><p>纯纯最短路。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// Problem:Luogu P9504 『MGOI』Simple Round I | C. 魔法禁林</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> MAXN=<span class="hljs-number">2e4</span><span class="hljs-number">+10</span>;<br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">edge</span><br>&#123;<br><span class="hljs-type">int</span> v,w;<br>&#125;;<br>vector &lt;edge&gt; g[MAXN];<br><span class="hljs-type">int</span> n,m,s,t;<br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">node</span><br>&#123;<br><span class="hljs-type">int</span> u,mag,sur;<br><span class="hljs-type">bool</span> <span class="hljs-keyword">operator</span> &lt;(<span class="hljs-type">const</span> node a)<span class="hljs-type">const</span><br>&#123;<br><span class="hljs-keyword">if</span>(mag==a.mag)<span class="hljs-keyword">return</span> sur&gt;a.sur;<br><span class="hljs-keyword">return</span> mag&gt;a.mag;<br>&#125;<br>&#125;;<br>priority_queue &lt;node&gt; q;<br><span class="hljs-type">int</span> dis[MAXN][<span class="hljs-number">510</span>];<br><span class="hljs-type">bool</span> vis[MAXN][<span class="hljs-number">510</span>];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>q.<span class="hljs-built_in">push</span>(&#123;t,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>&#125;);<br><span class="hljs-built_in">memset</span>(dis,<span class="hljs-number">0x3f</span>,<span class="hljs-built_in">sizeof</span>(dis));<br>dis[t][<span class="hljs-number">0</span>]=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">while</span>(!q.<span class="hljs-built_in">empty</span>())<br>&#123;<br>node front=q.<span class="hljs-built_in">top</span>();<br>q.<span class="hljs-built_in">pop</span>();<br><span class="hljs-type">int</span> u=front.u,sur=front.sur;<br>vis[u][sur]=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">if</span>(sur&gt;<span class="hljs-number">100</span>)<span class="hljs-keyword">continue</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> tmp:g[u])<br>&#123;<br><span class="hljs-type">int</span> v=tmp.v,w=tmp.w;<br><span class="hljs-keyword">if</span>(dis[v][sur<span class="hljs-number">+1</span>]&gt;dis[u][sur]+w/(sur<span class="hljs-number">+1</span>))<br>&#123;<br><span class="hljs-keyword">if</span>(!vis[v][sur<span class="hljs-number">+1</span>])<br>vis[v][sur<span class="hljs-number">+1</span>]=<span class="hljs-number">1</span>,q.<span class="hljs-built_in">push</span>(&#123;v,dis[v][sur<span class="hljs-number">+1</span>],sur<span class="hljs-number">+1</span>&#125;);<br>dis[v][sur<span class="hljs-number">+1</span>]=dis[u][sur]+w/(sur<span class="hljs-number">+1</span>);<br>&#125;<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>cin&gt;&gt;n&gt;&gt;m&gt;&gt;s&gt;&gt;t;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)<br>&#123;<br><span class="hljs-type">int</span> u,v,w;<br>cin&gt;&gt;u&gt;&gt;v&gt;&gt;w;<br>g[u].<span class="hljs-built_in">push_back</span>(&#123;v,w&#125;);<br>g[v].<span class="hljs-built_in">push_back</span>(&#123;u,w&#125;);<br>&#125;<br><span class="hljs-built_in">solve</span>();<br><span class="hljs-type">int</span> ans=<span class="hljs-number">0x3f3f3f3f</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;=<span class="hljs-number">100</span>;i++)ans=<span class="hljs-built_in">min</span>(ans,dis[s][i]);<br>cout&lt;&lt;ans;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="B-USACO22FEB-Email-Filing-S"><a href="#B-USACO22FEB-Email-Filing-S" class="headerlink" title="B. [USACO22FEB] Email Filing S"></a>B. [USACO22FEB] Email Filing S</h2><p><a href="https://www.luogu.com.cn/problem/P8188">lnk</a></p><p>这道题是模拟和贪心，根据题目所说就能做出来了（感觉还是有点难度）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// Problem:Luogu P8188 [USACO22FEB] Email Filing S</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N=<span class="hljs-number">100010</span>,M=<span class="hljs-number">10010</span>;<br>set&lt;<span class="hljs-type">int</span>&gt;sce;<br>queue&lt;<span class="hljs-type">int</span>&gt;q[M];<br><span class="hljs-type">int</span> T,n,m,K,f[N],c[N],top,st[N];<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">read</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> x=<span class="hljs-number">0</span>,f=<span class="hljs-number">1</span>;<br><span class="hljs-type">char</span> ch=<span class="hljs-built_in">getchar</span>();<br><span class="hljs-keyword">while</span>(ch&lt;<span class="hljs-string">&#x27;0&#x27;</span>||ch&gt;<span class="hljs-string">&#x27;9&#x27;</span>)<br>&#123;<br><span class="hljs-keyword">if</span>(ch==<span class="hljs-string">&#x27;-&#x27;</span>)f=<span class="hljs-number">-1</span>;<br>ch=<span class="hljs-built_in">getchar</span>();<br>&#125;<br><span class="hljs-keyword">while</span>(ch&gt;=<span class="hljs-string">&#x27;0&#x27;</span>&amp;&amp;ch&lt;=<span class="hljs-string">&#x27;9&#x27;</span>)<br>&#123;<br>x=x*<span class="hljs-number">10</span>+ch-<span class="hljs-string">&#x27;0&#x27;</span>;<br>ch=<span class="hljs-built_in">getchar</span>();<br>&#125;<br><span class="hljs-keyword">return</span> x*f;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">init</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>top=<span class="hljs-number">0</span>;<br>sce.<span class="hljs-built_in">clear</span>();<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)<br><span class="hljs-keyword">while</span>(!q[i].<span class="hljs-built_in">empty</span>())q[i].<span class="hljs-built_in">pop</span>();<br><span class="hljs-built_in">memset</span>(c,<span class="hljs-number">0</span>,<span class="hljs-built_in">sizeof</span>(c));<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">check</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> j=<span class="hljs-number">1</span>,t;<br>set&lt;<span class="hljs-type">int</span>&gt;::iterator it;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)<br>&#123;<br>t=i+K<span class="hljs-number">-1</span>;<br><span class="hljs-keyword">if</span>(t&lt;=m)<br>&#123;<br>c[t]-=q[t].<span class="hljs-built_in">size</span>();<br><span class="hljs-keyword">while</span>(!q[t].<span class="hljs-built_in">empty</span>())<br>&#123;<br><span class="hljs-type">int</span> x=q[t].<span class="hljs-built_in">front</span>();<br>q[t].<span class="hljs-built_in">pop</span>();<br>sce.<span class="hljs-built_in">erase</span>(x);<br>&#125;<br>&#125;<br><span class="hljs-keyword">while</span>(c[i])<br>&#123;<br><span class="hljs-type">int</span> x=(j&lt;=n)?j:st[top--];<br><span class="hljs-keyword">if</span>(sce.<span class="hljs-built_in">size</span>()==K)<br>&#123;<br><span class="hljs-keyword">if</span>(j&lt;=n)<br>&#123;<br>it=sce.<span class="hljs-built_in">begin</span>();<br>st[++top]=*it;<br>q[f[*it]].<span class="hljs-built_in">pop</span>();<br>sce.<span class="hljs-built_in">erase</span>(*it);<br>&#125;<br><span class="hljs-keyword">else</span><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-keyword">if</span>(f[x]&lt;=t)<br>c[f[x]]--;<br><span class="hljs-keyword">else</span><br>&#123;<br>sce.<span class="hljs-built_in">insert</span>(x);<br>q[f[x]].<span class="hljs-built_in">push</span>(x);<br>&#125;<br><span class="hljs-keyword">if</span>(j&lt;=n)j++;<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>T=<span class="hljs-built_in">read</span>();<br><span class="hljs-keyword">while</span>(T--)<br>&#123;<br>m=<span class="hljs-built_in">read</span>();<br>n=<span class="hljs-built_in">read</span>();<br>K=<span class="hljs-built_in">read</span>();<br><span class="hljs-built_in">init</span>();<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>&#123;<br>f[i]=<span class="hljs-built_in">read</span>();<br>c[f[i]]++;<br>&#125;<br><span class="hljs-built_in">check</span>()?<span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;YES&quot;</span>):<span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;NO&quot;</span>);<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="C-POI-2012-RAN-Rendezvous"><a href="#C-POI-2012-RAN-Rendezvous" class="headerlink" title="C. [POI 2012] RAN-Rendezvous"></a>C. [POI 2012] RAN-Rendezvous</h2><p>听<a href="https://www.luogu.com.cn/user/631544">li_cat</a>大佬说是基环树（？）分成三种情况</p><ul><li>在同一个基环树上且在同一个节点的子树下，答案是LCA（用倍增）</li><li>在同一个基环树但是在不同节点的子树下，答案是两点所在树的根节点其中的一个</li><li>不在同一个基环树上，答案$-1$</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-type">const</span> <span class="hljs-type">int</span> MAXN=<span class="hljs-number">500010</span>;<br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> indeg[MAXN],n,m,wcc[MAXN],anc[MAXN][<span class="hljs-number">21</span>],dep[MAXN],cirlen[MAXN],cirid[MAXN],cirpos[MAXN],tot;<br>vector &lt;<span class="hljs-type">int</span>&gt; g[MAXN];<br>queue &lt;<span class="hljs-type">int</span>&gt; q;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-type">int</span> u,<span class="hljs-type">int</span> f,<span class="hljs-type">int</span> rt,<span class="hljs-type">int</span> d)</span></span><br><span class="hljs-function"></span>&#123;<br>dep[u]=d;wcc[u]=rt;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;g[u].<span class="hljs-built_in">size</span>();i++)<br>&#123;<br><span class="hljs-type">int</span> v=g[u][i];<br><span class="hljs-keyword">if</span>(indeg[v]||v==f)<span class="hljs-keyword">continue</span>;<br><span class="hljs-built_in">dfs</span>(v,u,rt,d<span class="hljs-number">+1</span>);<br>&#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">pre</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> p=<span class="hljs-number">1</span>;p&lt;=<span class="hljs-number">19</span>;p++)<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>anc[i][p]=anc[anc[i][p<span class="hljs-number">-1</span>]][p<span class="hljs-number">-1</span>];<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">lca</span><span class="hljs-params">(<span class="hljs-type">int</span> x,<span class="hljs-type">int</span> y)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span>(dep[x]&lt;dep[y])<span class="hljs-built_in">swap</span>(x,y);<br><span class="hljs-type">int</span> tmp=dep[x]-dep[y];<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">19</span>;i&gt;=<span class="hljs-number">0</span>;i--)<span class="hljs-keyword">if</span>(tmp&gt;&gt;i&amp;<span class="hljs-number">1</span>)x=anc[x][i];<br><span class="hljs-keyword">if</span>(x==y)<span class="hljs-keyword">return</span> y;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">19</span>;i&gt;=<span class="hljs-number">0</span>;i--)<br>&#123;<br><span class="hljs-keyword">if</span>(anc[x][i]!=anc[y][i])x=anc[x][i],y=anc[y][i];<br>&#125;<br><span class="hljs-keyword">return</span> anc[x][<span class="hljs-number">0</span>];<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">circle</span><span class="hljs-params">(<span class="hljs-type">int</span> u,<span class="hljs-type">int</span> id,<span class="hljs-type">int</span> az)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span>(cirpos[u])<span class="hljs-keyword">return</span>;<br>cirid[u]=id;cirlen[id]++;cirpos[u]=az;<br><span class="hljs-built_in">circle</span>(anc[u][<span class="hljs-number">0</span>],id,az<span class="hljs-number">+1</span>);<br>&#125;<br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">check</span><span class="hljs-params">(<span class="hljs-type">int</span> a,<span class="hljs-type">int</span> b,<span class="hljs-type">int</span> c,<span class="hljs-type">int</span> d)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span>(<span class="hljs-built_in">max</span>(a,b)!=<span class="hljs-built_in">max</span>(c,d))<span class="hljs-keyword">return</span> <span class="hljs-built_in">max</span>(a,b)&lt;<span class="hljs-built_in">max</span>(c,d);<br><span class="hljs-keyword">if</span>(<span class="hljs-built_in">min</span>(a,b)!=<span class="hljs-built_in">min</span>(c,d))<span class="hljs-keyword">return</span> <span class="hljs-built_in">min</span>(a,b)&lt;<span class="hljs-built_in">min</span>(c,d);<br><span class="hljs-keyword">return</span> a&gt;=b;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>&#123;<br><span class="hljs-type">int</span> u;<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;u);<br>g[u].<span class="hljs-built_in">push_back</span>(i);<br>anc[i][<span class="hljs-number">0</span>]=u;<br>indeg[u]++;<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<span class="hljs-keyword">if</span>(!indeg[i])q.<span class="hljs-built_in">push</span>(i);<br><span class="hljs-keyword">while</span>(!q.<span class="hljs-built_in">empty</span>())<br>&#123;<br><span class="hljs-type">int</span> u=q.<span class="hljs-built_in">front</span>();q.<span class="hljs-built_in">pop</span>();<br><span class="hljs-type">int</span> v=anc[u][<span class="hljs-number">0</span>];<br>indeg[v]--;<br><span class="hljs-keyword">if</span>(!indeg[v])q.<span class="hljs-built_in">push</span>(v);<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>&#123;<br><span class="hljs-keyword">if</span>(indeg[i])<br>&#123;<br><span class="hljs-built_in">dfs</span>(i,<span class="hljs-number">0</span>,i,<span class="hljs-number">0</span>);<br><span class="hljs-keyword">if</span>(!cirpos[i])<span class="hljs-built_in">circle</span>(i,++tot,<span class="hljs-number">1</span>);<br>&#125;<br>&#125;<br><span class="hljs-built_in">pre</span>();<br><span class="hljs-keyword">while</span>(m--)<br>&#123;<br><span class="hljs-type">int</span> u,v;<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d&quot;</span>,&amp;u,&amp;v);<br><span class="hljs-keyword">if</span>(cirid[wcc[u]]!=cirid[wcc[v]])<br>&#123;<br>cout&lt;&lt;<span class="hljs-number">-1</span>&lt;&lt;<span class="hljs-string">&#x27; &#x27;</span>&lt;&lt;<span class="hljs-number">-1</span>&lt;&lt;endl;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(wcc[u]==wcc[v])<br>&#123;<br><span class="hljs-type">int</span> LCA=<span class="hljs-built_in">lca</span>(u,v);<br>cout&lt;&lt;dep[u]-dep[LCA]&lt;&lt;<span class="hljs-string">&#x27; &#x27;</span>&lt;&lt;dep[v]-dep[LCA]&lt;&lt;endl;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br><span class="hljs-type">int</span> t1=wcc[u],t2=wcc[v];<br><span class="hljs-type">int</span> ans1=dep[u]+(cirpos[t2]-cirpos[t1]+cirlen[cirid[t1]])%cirlen[cirid[t1]];<br><span class="hljs-type">int</span> ans2=dep[v]+(cirpos[t1]-cirpos[t2]+cirlen[cirid[t1]])%cirlen[cirid[t1]];<br><span class="hljs-keyword">if</span>(<span class="hljs-built_in">check</span>(dep[u],ans2,ans1,dep[v]))cout&lt;&lt;dep[u]&lt;&lt;<span class="hljs-string">&#x27; &#x27;</span>&lt;&lt;ans2&lt;&lt;endl;<br><span class="hljs-keyword">else</span> cout&lt;&lt;ans1&lt;&lt;<span class="hljs-string">&#x27; &#x27;</span>&lt;&lt;dep[v]&lt;&lt;endl;<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="D-蓝桥杯-2024-省研究生组-植物生命力"><a href="#D-蓝桥杯-2024-省研究生组-植物生命力" class="headerlink" title="D.[蓝桥杯 2024 省研究生组] 植物生命力"></a>D.[蓝桥杯 2024 省研究生组] 植物生命力</h2><p><a href="http://luogu.com.cn/problem/P13875">lnk</a></p><p>由于线段树&#x2F;树状数组，先搁这</p>]]></content>
    
    
    
    <tags>
      
      <tag>题解</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【题解】10-4入门组模拟</title>
    <link href="/2025/10/06/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%9110-4%E5%85%A5%E9%97%A8%E7%BB%84%E6%A8%A1%E6%8B%9F/"/>
    <url>/2025/10/06/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%9110-4%E5%85%A5%E9%97%A8%E7%BB%84%E6%A8%A1%E6%8B%9F/</url>
    
    <content type="html"><![CDATA[<p>数学题做爽了</p><h2 id="A-台阶问题"><a href="#A-台阶问题" class="headerlink" title="A.台阶问题"></a>A.台阶问题</h2><p><a href="https://www.luogu.com.cn/problem/P1192">lnk</a></p><p>简单记搜，但是忘记取模……赛时没过</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// Problem:Luogu P1192 台阶问题</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-meta">#<span class="hljs-keyword">define</span> mod 100003</span><br><span class="hljs-type">int</span> f[<span class="hljs-number">100010</span>],n,k;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-type">int</span> n)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span>(n&lt;<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br><span class="hljs-keyword">if</span>(f[n])<span class="hljs-keyword">return</span> f[n];<br><span class="hljs-type">int</span> res=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=k;i++)<br>res+=<span class="hljs-built_in">dfs</span>(n-i);<br><span class="hljs-keyword">return</span> f[n]=res%mod;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>cin&gt;&gt;n&gt;&gt;k;<br>f[<span class="hljs-number">0</span>]=<span class="hljs-number">1</span>;<br>f[<span class="hljs-number">1</span>]=<span class="hljs-number">1</span>;<br>cout&lt;&lt;<span class="hljs-built_in">dfs</span>(n);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="B-USACO17OPEN-Bovine-Genomics-S"><a href="#B-USACO17OPEN-Bovine-Genomics-S" class="headerlink" title="B.[USACO17OPEN] Bovine Genomics S"></a>B.[USACO17OPEN] Bovine Genomics S</h2><p><a href="https://www.luogu.com.cn/problem/P3670">lnk</a></p><p>666，这题是暴力，我以为是什么高端做法，后面想到暴力但是暴力没打出来🤦，有救吗？</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> MAXN=<span class="hljs-number">510</span>;<br><span class="hljs-type">int</span> n,m,ans;<br>string dot[MAXN],nor[MAXN];<br>map&lt;<span class="hljs-type">char</span>,<span class="hljs-type">int</span>&gt; p&#123;&#123;<span class="hljs-string">&#x27;A&#x27;</span>,<span class="hljs-number">1</span>&#125;,&#123;<span class="hljs-string">&#x27;C&#x27;</span>,<span class="hljs-number">2</span>&#125;,&#123;<span class="hljs-string">&#x27;G&#x27;</span>,<span class="hljs-number">3</span>&#125;,&#123;<span class="hljs-string">&#x27;T&#x27;</span>,<span class="hljs-number">4</span>&#125;&#125;;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>cin&gt;&gt;n&gt;&gt;m;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)<br>cin&gt;&gt;dot[i];<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)<br>cin&gt;&gt;nor[i];<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;m<span class="hljs-number">-2</span>;i++)<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=i<span class="hljs-number">+1</span>;j&lt;m<span class="hljs-number">-1</span>;j++)<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> k=j<span class="hljs-number">+1</span>;k&lt;m;k++)<br>&#123;<br><span class="hljs-type">bool</span> flag=<span class="hljs-number">1</span>;<br><span class="hljs-type">bool</span> vis[<span class="hljs-number">64</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> l=<span class="hljs-number">0</span>;l&lt;n;l++)<br>&#123;<br><span class="hljs-type">int</span> a=p[dot[l][i]]<span class="hljs-number">-1</span>;<br><span class="hljs-type">int</span> b=p[dot[l][j]]<span class="hljs-number">-1</span>;<br><span class="hljs-type">int</span> c=p[dot[l][k]]<span class="hljs-number">-1</span>;<br><span class="hljs-type">int</span> key=(a&lt;&lt;<span class="hljs-number">4</span>)|(b&lt;&lt;<span class="hljs-number">2</span>)|c;<br>vis[key]=<span class="hljs-literal">true</span>;<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> l=<span class="hljs-number">0</span>;l&lt;n;l++)<br>&#123;<br><span class="hljs-type">int</span> a=p[nor[l][i]]<span class="hljs-number">-1</span>;<br><span class="hljs-type">int</span> b=p[nor[l][j]]<span class="hljs-number">-1</span>;<br><span class="hljs-type">int</span> c=p[nor[l][k]]<span class="hljs-number">-1</span>;<br><span class="hljs-type">int</span> key=(a&lt;&lt;<span class="hljs-number">4</span>)|(b&lt;&lt;<span class="hljs-number">2</span>)|c;<br><span class="hljs-keyword">if</span>(vis[key])<br>&#123;<br>flag=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">break</span>;<br>&#125;<br>&#125;<br>ans+=flag;<br>&#125;<br>cout&lt;&lt;ans;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="D-Cnoi2019-数学作业"><a href="#D-Cnoi2019-数学作业" class="headerlink" title="D. [Cnoi2019] 数学作业"></a>D. [Cnoi2019] 数学作业</h2><p><a href="https://www.luogu.com.cn/problem/P5390">lnk</a></p><p>还是不会，数学题太难了</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> mod=<span class="hljs-number">998244353</span>;<br><span class="hljs-function"><span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> <span class="hljs-title">qpow</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> a,<span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> b)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> ans=<span class="hljs-number">1</span>;<br>a%=mod;<br><span class="hljs-keyword">while</span>(b)<br>&#123;<br><span class="hljs-keyword">if</span>(b&amp;<span class="hljs-number">1</span>)<br>ans=(ans*a)%mod;<br>a=(a*a)%mod;<br>b&gt;&gt;=<span class="hljs-number">1</span>;<br>&#125;<br><span class="hljs-keyword">return</span> ans;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>cin.<span class="hljs-built_in">tie</span>(<span class="hljs-literal">nullptr</span>);<br><span class="hljs-type">int</span> t;<br>cin&gt;&gt;t;<br><span class="hljs-keyword">while</span>(t--)<br>&#123;<br><span class="hljs-type">int</span> n;<br>cin&gt;&gt;n;<br><span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> sum=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)<br>&#123;<br><span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> tmp;<br>cin&gt;&gt;tmp;<br>sum|=tmp;<br>&#125;<br><span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> result=(sum%mod)*<span class="hljs-built_in">qpow</span>(<span class="hljs-number">2</span>,n<span class="hljs-number">-1</span>)%mod;<br>cout&lt;&lt;result&lt;&lt;<span class="hljs-string">&#x27;\n&#x27;</span>;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="D-USACO17JAN-Building-a-Tall-Barn-P"><a href="#D-USACO17JAN-Building-a-Tall-Barn-P" class="headerlink" title="D.[USACO17JAN] Building a Tall Barn P"></a>D.[USACO17JAN] Building a Tall Barn P</h2><p>仍然数学题，虽然看上去很程序，标签是<code>二分</code>，但是二分的是柿子，是真的不会啊</p><p>不知道为啥是87分，没找到问题……</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-type">const</span> <span class="hljs-type">int</span> MAXN=<span class="hljs-number">1e5</span><span class="hljs-number">+10</span>;<br><span class="hljs-type">double</span> a[MAXN],ans;<br><span class="hljs-type">int</span> n,k;<br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">check</span><span class="hljs-params">(<span class="hljs-type">double</span> t)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> cnt=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>&#123;<br><span class="hljs-type">double</span> x=<span class="hljs-built_in">sqrt</span>(<span class="hljs-number">1</span><span class="hljs-number">+4</span>*a[i]/t);<br>cnt+=(<span class="hljs-type">double</span>)(<span class="hljs-built_in">ceil</span>((x<span class="hljs-number">-1</span>)/<span class="hljs-number">2</span>));<br>&#125;<br><span class="hljs-keyword">return</span> cnt&lt;=k;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>cin&gt;&gt;n&gt;&gt;k;<br><span class="hljs-type">double</span> mx=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>&#123;<br>cin&gt;&gt;a[i];<br>mx=<span class="hljs-built_in">max</span>(mx,a[i]);<br>&#125;<br><span class="hljs-type">double</span> l=<span class="hljs-number">1e-12</span>,r=<span class="hljs-number">2</span>*mx;<br><span class="hljs-keyword">while</span>(r-l&gt;<span class="hljs-number">1e-12</span>)<br>&#123;<br><span class="hljs-type">double</span> mid=(l+r)/<span class="hljs-number">2</span>;<br><span class="hljs-keyword">if</span>(<span class="hljs-built_in">check</span>(mid))r=mid;<br><span class="hljs-keyword">else</span> l=mid;<br>&#125;<br><span class="hljs-type">int</span> sum=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>&#123;<br><span class="hljs-type">double</span> x=<span class="hljs-built_in">sqrt</span>(<span class="hljs-number">1</span><span class="hljs-number">+4</span>*a[i]/r);<br><span class="hljs-type">int</span> v=<span class="hljs-built_in">ceil</span>((x<span class="hljs-number">-1</span>)/<span class="hljs-number">2</span>);<br>ans+=a[i]/v;<br>sum+=v;<br>&#125;<br><span class="hljs-keyword">if</span>(sum&lt;k)<br>&#123;<br><span class="hljs-type">double</span> diff=k-sum;<br>ans-=diff*r;<br>&#125;<br>cout&lt;&lt;<span class="hljs-built_in">round</span>(ans);<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>题解</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【题解】10-3提高组模拟</title>
    <link href="/2025/10/04/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%9110-3%E6%8F%90%E9%AB%98%E7%BB%84%E6%A8%A1%E6%8B%9F/"/>
    <url>/2025/10/04/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%9110-3%E6%8F%90%E9%AB%98%E7%BB%84%E6%A8%A1%E6%8B%9F/</url>
    
    <content type="html"><![CDATA[<p>握草，这四题我都不会，可以重开了</p><h2 id="A-蓝桥杯-2020-国-ABC-皮亚诺曲线距离"><a href="#A-蓝桥杯-2020-国-ABC-皮亚诺曲线距离" class="headerlink" title="A.[蓝桥杯 2020 国 ABC] 皮亚诺曲线距离"></a>A.[蓝桥杯 2020 国 ABC] 皮亚诺曲线距离</h2><p><a href="https://www.luogu.com.cn/problem/P8730">lnk</a></p><p>（🏀🍵最质量的一集）</p><p>这个是分治，然后把两点到原点的距离相减就得到了</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// Problem:Luogu P8730 [蓝桥杯 2020 国 ABC] 皮亚诺曲线距离</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">qpow</span><span class="hljs-params">(<span class="hljs-type">int</span> a,<span class="hljs-type">int</span> b)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span>(b==<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br><span class="hljs-type">int</span> t=<span class="hljs-built_in">qpow</span>(a,b/<span class="hljs-number">2</span>);<br><span class="hljs-keyword">if</span>(b%<span class="hljs-number">2</span>==<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> t*t;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> t*t*a;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">dis</span><span class="hljs-params">(<span class="hljs-type">int</span> k,<span class="hljs-type">int</span> x,<span class="hljs-type">int</span> y)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span>(k==<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br><span class="hljs-type">int</span> len=<span class="hljs-built_in">qpow</span>(<span class="hljs-number">3</span>,k);<br><span class="hljs-type">int</span> step=<span class="hljs-built_in">qpow</span>(<span class="hljs-number">3</span>,<span class="hljs-number">2</span>*k<span class="hljs-number">-2</span>);<br><br><span class="hljs-keyword">if</span>(x&lt;len/<span class="hljs-number">3</span>)<br>&#123;<br><span class="hljs-keyword">if</span>(y&lt;len/<span class="hljs-number">3</span>)<span class="hljs-keyword">return</span> <span class="hljs-built_in">dis</span>(k<span class="hljs-number">-1</span>,x,y);<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(y&lt;<span class="hljs-number">2</span>*len/<span class="hljs-number">3</span>)<span class="hljs-keyword">return</span> step+<span class="hljs-built_in">dis</span>(k<span class="hljs-number">-1</span>,len/<span class="hljs-number">3</span><span class="hljs-number">-1</span>-x,y-len/<span class="hljs-number">3</span>);<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-number">2</span>*step+<span class="hljs-built_in">dis</span>(k<span class="hljs-number">-1</span>,x,y<span class="hljs-number">-2</span>*len/<span class="hljs-number">3</span>);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(x&lt;<span class="hljs-number">2</span>*len/<span class="hljs-number">3</span>)<br>&#123;<br><span class="hljs-keyword">if</span>(y&lt;len/<span class="hljs-number">3</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">5</span>*step+<span class="hljs-built_in">dis</span>(k<span class="hljs-number">-1</span>,x-len/<span class="hljs-number">3</span>,len/<span class="hljs-number">3</span><span class="hljs-number">-1</span>-y);<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(y&lt;<span class="hljs-number">2</span>*len/<span class="hljs-number">3</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">4</span>*step+<span class="hljs-built_in">dis</span>(k<span class="hljs-number">-1</span>,<span class="hljs-number">2</span>*len/<span class="hljs-number">3</span><span class="hljs-number">-1</span>-x,<span class="hljs-number">2</span>*len/<span class="hljs-number">3</span><span class="hljs-number">-1</span>-y);<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-number">3</span>*step+<span class="hljs-built_in">dis</span>(k<span class="hljs-number">-1</span>,x-len/<span class="hljs-number">3</span>,len<span class="hljs-number">-1</span>-y);<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br><span class="hljs-keyword">if</span>(y&lt;len/<span class="hljs-number">3</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">6</span>*step+<span class="hljs-built_in">dis</span>(k<span class="hljs-number">-1</span>,x<span class="hljs-number">-2</span>*len/<span class="hljs-number">3</span>,y);<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(y&lt;<span class="hljs-number">2</span>*len/<span class="hljs-number">3</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">7</span>*step+<span class="hljs-built_in">dis</span>(k<span class="hljs-number">-1</span>,len<span class="hljs-number">-1</span>-x,y-len/<span class="hljs-number">3</span>);<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> <span class="hljs-number">8</span>*step+<span class="hljs-built_in">dis</span>(k<span class="hljs-number">-1</span>,x<span class="hljs-number">-2</span>*len/<span class="hljs-number">3</span>,y<span class="hljs-number">-2</span>*len/<span class="hljs-number">3</span>);<br>&#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> k,x1,Y1,x2,y2;<br>cin&gt;&gt;k&gt;&gt;x1&gt;&gt;Y1&gt;&gt;x2&gt;&gt;y2;<br><span class="hljs-keyword">if</span>(k&gt;=<span class="hljs-number">40</span>)k=<span class="hljs-number">39</span>;<br>cout&lt;&lt;<span class="hljs-built_in">abs</span>(<span class="hljs-built_in">dis</span>(k,x1,Y1)-<span class="hljs-built_in">dis</span>(k,x2,y2));<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="B-USACO03FALL-Milking-Grid（数据加强版）"><a href="#B-USACO03FALL-Milking-Grid（数据加强版）" class="headerlink" title="B.[USACO03FALL] Milking Grid（数据加强版）"></a>B.[USACO03FALL] Milking Grid（数据加强版）</h2><p><a href="https://www.luogu.com.cn/problem/P10475">lnk</a></p><p>这道题是KMP，我还没学，题解还没看懂，就先搁这</p><h2 id="C-Code-4-最短路"><a href="#C-Code-4-最短路" class="headerlink" title="C. [Code+#4] 最短路"></a>C. [Code+#4] 最短路</h2><p><a href="https://www.luogu.com.cn/problem/P4366">lnk</a></p><p>这是dijkstra的最短路，就是加了一点料（黑暗料理），要找到异或的规律</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> MAXN=<span class="hljs-number">100010</span>;<br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">edge</span><br>&#123;<br><span class="hljs-type">int</span> v,w;<br>&#125;;<br>vector &lt;edge&gt; g[MAXN];<br><span class="hljs-type">int</span> n,m,c,s,t;<br><span class="hljs-type">int</span> dis[MAXN];<br><span class="hljs-type">bool</span> vis[MAXN];<br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">node</span><br>&#123;<br><span class="hljs-type">int</span> u,dis;<br><span class="hljs-type">bool</span> <span class="hljs-keyword">operator</span> &lt;(<span class="hljs-type">const</span> node a)<span class="hljs-type">const</span><br>&#123;<br><span class="hljs-keyword">return</span> dis&gt;a.dis;<br>&#125;<br>&#125;;<br>priority_queue &lt;node&gt; q;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">dijkstra</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-built_in">memset</span>(dis,<span class="hljs-number">0x3f</span>,<span class="hljs-built_in">sizeof</span>(dis));<br>dis[s]=<span class="hljs-number">0</span>;<br>q.<span class="hljs-built_in">push</span>(&#123;s,<span class="hljs-number">0</span>&#125;);<br><span class="hljs-keyword">while</span>(!q.<span class="hljs-built_in">empty</span>())<br>&#123;<br>node front=q.<span class="hljs-built_in">top</span>();<br>q.<span class="hljs-built_in">pop</span>();<br><span class="hljs-type">int</span> u=front.u;<br><span class="hljs-keyword">if</span>(vis[u])<span class="hljs-keyword">continue</span>;<br><span class="hljs-keyword">if</span>(u==t)<span class="hljs-keyword">return</span> ;<br>vis[u]=<span class="hljs-number">1</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> tmp:g[u])<br>&#123;<br><span class="hljs-type">int</span> v=tmp.v,w=tmp.w;<br><span class="hljs-keyword">if</span>(dis[v]&gt;dis[u]+w)<br>&#123;<br>dis[v]=dis[u]+w;<br>q.<span class="hljs-built_in">push</span>(&#123;v,dis[v]&#125;);<br>&#125;<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-number">0</span>);<br>cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>),cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>cin&gt;&gt;n&gt;&gt;m&gt;&gt;c;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)<br>&#123;<br><span class="hljs-type">int</span> u,v,w;<br>cin&gt;&gt;u&gt;&gt;v&gt;&gt;w;<br>g[u].<span class="hljs-built_in">push_back</span>(&#123;v,w&#125;);<br>&#125;<br>cin&gt;&gt;s&gt;&gt;t;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;=n;i++)<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=n;j&lt;&lt;=<span class="hljs-number">1</span>)<br><span class="hljs-keyword">if</span>((i^j)&lt;=n)<br>g[i].<span class="hljs-built_in">push_back</span>(&#123;i^j,c*j&#125;);<br><span class="hljs-built_in">dijkstra</span>();<br>cout&lt;&lt;dis[t];<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="D-LnOI2019-加特林轮盘赌"><a href="#D-LnOI2019-加特林轮盘赌" class="headerlink" title="D.[LnOI2019] 加特林轮盘赌"></a>D.[LnOI2019] 加特林轮盘赌</h2><p>这名字看起来就细思鼻孔（谁家用加特林啊）</p><p>由于这个是概率DP，比较猎奇，也是先搁这（听说这是NOIP的……放在CSP-S的模拟赛里干啥啊？）</p><p>名言：</p><blockquote><p>$\Huge 加特林轮盘赌是一个养生游戏$</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// Problem:Luogu P5249 [LnOI2019] 加特林轮盘赌</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">double</span> f[<span class="hljs-number">10010</span>],d[<span class="hljs-number">10010</span>],tmp,sum,p,a,b;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">calc</span><span class="hljs-params">(<span class="hljs-type">int</span> x)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span>(x==<span class="hljs-number">1</span>)&#123;a=<span class="hljs-number">1</span>,tmp=<span class="hljs-number">1</span>,b=<span class="hljs-number">0</span>;<span class="hljs-keyword">return</span> ;&#125;<br><span class="hljs-built_in">calc</span>(x<span class="hljs-number">-1</span>);<br>tmp+=(<span class="hljs-number">1</span>-p)*a;<br>sum+=p*d[x]+(<span class="hljs-number">1</span>-p)*b;<br>a=(<span class="hljs-number">1</span>-p)*a;<br>b=p*d[x]+(<span class="hljs-number">1</span>-p)*b;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> n,m;<br>cin&gt;&gt;p&gt;&gt;n&gt;&gt;m;<br><span class="hljs-keyword">if</span>(p==<span class="hljs-number">0</span>)<br>&#123;<br><span class="hljs-keyword">if</span>(n&gt;<span class="hljs-number">1</span>)cout&lt;&lt;<span class="hljs-number">0</span>;<br><span class="hljs-keyword">else</span> cout&lt;&lt;<span class="hljs-number">1</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br>f[<span class="hljs-number">1</span>]=<span class="hljs-number">1</span>;<br>d[<span class="hljs-number">2</span>]=<span class="hljs-number">1</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">2</span>;i&lt;=n;i++)<br>&#123;<br>tmp=<span class="hljs-number">0.0</span>,sum=<span class="hljs-number">0.0</span>;<br><span class="hljs-built_in">calc</span>(i);<br>f[<span class="hljs-number">1</span>]=(<span class="hljs-number">1</span>-sum)/tmp;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">2</span>;j&lt;=i;j++)<br>f[j]=p*d[j]+(<span class="hljs-number">1</span>-p)*f[j<span class="hljs-number">-1</span>];<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">2</span>;j&lt;=i<span class="hljs-number">+1</span>;j++)<br>d[j]=f[j<span class="hljs-number">-1</span>];<br>&#125;<br>cout&lt;&lt;fixed&lt;&lt;<span class="hljs-built_in">setprecision</span>(<span class="hljs-number">8</span>)&lt;&lt;f[m];<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>题解</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【题解】10-3入门组模拟</title>
    <link href="/2025/10/04/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%9110-3%E5%85%A5%E9%97%A8%E7%BB%84%E6%A8%A1%E6%8B%9F/"/>
    <url>/2025/10/04/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%9110-3%E5%85%A5%E9%97%A8%E7%BB%84%E6%A8%A1%E6%8B%9F/</url>
    
    <content type="html"><![CDATA[<p>（由于没多少空闲时间了，所以只能草草贴一下代码了）</p><h2 id="A-八百标兵奔北坡"><a href="#A-八百标兵奔北坡" class="headerlink" title="A.八百标兵奔北坡"></a>A.八百标兵奔北坡</h2><p><a href="https://www.luogu.com.cn/problem/P4771">lnk</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// Problem:Luogu P4771 八百标兵奔北坡</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> inf=<span class="hljs-number">0x3f3f3f3f</span>;<br><span class="hljs-type">int</span> a[<span class="hljs-number">1010</span>][<span class="hljs-number">1010</span>],dp[<span class="hljs-number">1010</span>][<span class="hljs-number">1010</span>];<br><span class="hljs-type">int</span> n,m,q;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-number">0</span>);<br>cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>),cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br><span class="hljs-built_in">memset</span>(dp,<span class="hljs-number">0x3f</span>,<span class="hljs-built_in">sizeof</span>(dp));<br>cin&gt;&gt;n&gt;&gt;m&gt;&gt;q;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=m;j++)<br>cin&gt;&gt;a[i][j],dp[i][j]=inf;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=m;j++)<br><span class="hljs-keyword">if</span>(a[i][j]&gt;=a[i<span class="hljs-number">+1</span>][j]&amp;&amp;<br>   a[i][j]&gt;=a[i<span class="hljs-number">-1</span>][j]&amp;&amp;<br>   a[i][j]&gt;=a[i][j<span class="hljs-number">-1</span>]&amp;&amp;<br>   a[i][j]&gt;=a[i][j<span class="hljs-number">+1</span>])<br>dp[i][j]=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=m;j++)<br>&#123;<br><span class="hljs-keyword">if</span>(dp[i<span class="hljs-number">-1</span>][j<span class="hljs-number">+1</span>]!=inf)dp[i][j]=<span class="hljs-built_in">min</span>(dp[i][j],dp[i<span class="hljs-number">-1</span>][j<span class="hljs-number">+1</span>]<span class="hljs-number">+1</span>);<br><span class="hljs-keyword">if</span>(dp[i<span class="hljs-number">-1</span>][j]!=inf)dp[i][j]=<span class="hljs-built_in">min</span>(dp[i][j],dp[i<span class="hljs-number">-1</span>][j]<span class="hljs-number">+1</span>);<br><span class="hljs-keyword">if</span>(dp[i<span class="hljs-number">-1</span>][j<span class="hljs-number">-1</span>]!=inf)dp[i][j]=<span class="hljs-built_in">min</span>(dp[i][j],dp[i<span class="hljs-number">-1</span>][j<span class="hljs-number">-1</span>]<span class="hljs-number">+1</span>);<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=q;i++)<br>&#123;<br><span class="hljs-type">int</span> x,y;<br>cin&gt;&gt;x&gt;&gt;y;<br><span class="hljs-keyword">if</span>(dp[x][y]!=inf)cout&lt;&lt;dp[x][y]&lt;&lt;<span class="hljs-string">&#x27;\n&#x27;</span>;<br><span class="hljs-keyword">else</span> cout&lt;&lt;<span class="hljs-string">&quot;Pool Babingbaboom!\n&quot;</span>;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="B-IOI-1996-USACO3-3-游戏-A-Game"><a href="#B-IOI-1996-USACO3-3-游戏-A-Game" class="headerlink" title="B.[IOI 1996 &#x2F; USACO3.3] 游戏 A Game"></a>B.[IOI 1996 &#x2F; USACO3.3] 游戏 A Game</h2><p><a href="https://www.luogu.com.cn/problem/P2734">lnk</a></p><p>博弈论，感觉很有趣……（但是想不出来啊）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// Problem:Luogu P2734 [IOI 1996 / USACO3.3] 游戏 A Game</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> n,dp[<span class="hljs-number">110</span>][<span class="hljs-number">110</span>],sum[<span class="hljs-number">110</span>];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>cin&gt;&gt;n;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>&#123;<br>cin&gt;&gt;dp[i][i];<br>sum[i]=sum[i<span class="hljs-number">-1</span>]+dp[i][i];<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> len=<span class="hljs-number">2</span>;len&lt;=n;len++)<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n-len<span class="hljs-number">+1</span>;i++)<br>&#123;<br><span class="hljs-type">int</span> j=i+len<span class="hljs-number">-1</span>;<br><span class="hljs-type">int</span> s=sum[j]-sum[i<span class="hljs-number">-1</span>];<br>dp[i][j]=<span class="hljs-built_in">max</span>(s-dp[i<span class="hljs-number">+1</span>][j],s-dp[i][j<span class="hljs-number">-1</span>]);<br>&#125;<br>cout&lt;&lt;dp[<span class="hljs-number">1</span>][n]&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;sum[n]-dp[<span class="hljs-number">1</span>][n];<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="C-角色属性树"><a href="#C-角色属性树" class="headerlink" title="C.角色属性树"></a>C.角色属性树</h2><p><a href="https://www.luogu.com.cn/problem/P2441">lnk</a></p><p>真的没想到这题硬膜拟能过，而且$\color{green} 绿题$</p><p>当时没做出来看到正解是模拟$\Huge \color{red} 红温$</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// Problem:Luogu P2441 角色属性树</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> MAXN=<span class="hljs-number">200010</span>;<br><span class="hljs-type">int</span> n,k,fa[MAXN],m[MAXN];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-type">int</span> u,<span class="hljs-type">int</span> v)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span>(u==<span class="hljs-number">0</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br><span class="hljs-keyword">if</span>(__gcd(m[u],m[v])&gt;<span class="hljs-number">1</span>)<span class="hljs-keyword">return</span> u;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">dfs</span>(fa[u],v);<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>cin&gt;&gt;n&gt;&gt;k;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)cin&gt;&gt;m[i];<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;n;i++)<br>&#123;<br><span class="hljs-type">int</span> u,v;<br>cin&gt;&gt;u&gt;&gt;v;<br>fa[v]=u;<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=k;i++)<br>&#123;<br><span class="hljs-type">int</span> opt,u;<br>cin&gt;&gt;opt&gt;&gt;u;<br><span class="hljs-keyword">if</span>(opt==<span class="hljs-number">1</span>)<br>cout&lt;&lt;<span class="hljs-built_in">dfs</span>(fa[u],u)&lt;&lt;<span class="hljs-string">&#x27;\n&#x27;</span>;<br><span class="hljs-keyword">else</span> <br>&#123;<br><span class="hljs-type">int</span> val;<br>cin&gt;&gt;val;<br>m[u]=val;<br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="D-USACO17DEC-Greedy-Gift-Takers-P"><a href="#D-USACO17DEC-Greedy-Gift-Takers-P" class="headerlink" title="D. [USACO17DEC] Greedy Gift Takers P"></a>D. [USACO17DEC] Greedy Gift Takers P</h2><p>因为如果有一头牛拿不到礼物，它后面的牛也拿不到，所以这题可以二分</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// Problem:Luogu P4090 [USACO17DEC] Greedy Gift Takers P</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-type">const</span> <span class="hljs-type">int</span> MAXN=<span class="hljs-number">100010</span>;<br><span class="hljs-type">int</span> a[MAXN],b[MAXN],n;<br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">check</span><span class="hljs-params">(<span class="hljs-type">int</span> x)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;x;i++)b[i]=a[i];<br><span class="hljs-built_in">sort</span>(b<span class="hljs-number">+1</span>,b+x);<br><span class="hljs-type">int</span> tmp=n-x;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;x;i++)<br>&#123;<br><span class="hljs-keyword">if</span>(b[i]&gt;tmp)<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>tmp++;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>cin&gt;&gt;n;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)cin&gt;&gt;a[i];<br><span class="hljs-type">int</span> l=<span class="hljs-number">1</span>,r=n;<br><span class="hljs-keyword">while</span>(l&lt;=r)<br>&#123;<br><span class="hljs-type">int</span> mid=(l+r)&gt;&gt;<span class="hljs-number">1</span>;<br><span class="hljs-keyword">if</span>(<span class="hljs-built_in">check</span>(mid))l=mid<span class="hljs-number">+1</span>;<br><span class="hljs-keyword">else</span> r=mid<span class="hljs-number">-1</span>;<br>&#125;<br>cout&lt;&lt;n-r;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>题解</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【题解】10-2提高组模拟</title>
    <link href="/2025/10/02/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%9110-2%E6%8F%90%E9%AB%98%E7%BB%84%E6%A8%A1%E6%8B%9F/"/>
    <url>/2025/10/02/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%9110-2%E6%8F%90%E9%AB%98%E7%BB%84%E6%A8%A1%E6%8B%9F/</url>
    
    <content type="html"><![CDATA[<p>还好第一题的记忆化搜索做出来了，不然就废了</p><h2 id="A-跑步"><a href="#A-跑步" class="headerlink" title="A.跑步"></a>A.跑步</h2><p><a href="http://luogu.com.cn/problem/P1806">link</a></p><p>这道题使用记忆化搜索就可以过了，记得开<code>long long</code></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// Problem:Luogu P1806 跑步</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-type">int</span> n,f[<span class="hljs-number">1010</span>][<span class="hljs-number">1010</span>];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-type">int</span> sum,<span class="hljs-type">int</span> lst)</span><span class="hljs-comment">//sum表示总和，lst表示当前选择的圈数</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span>(f[sum][lst]!=<span class="hljs-number">-1</span>)<span class="hljs-keyword">return</span> f[sum][lst];<br><span class="hljs-keyword">if</span>(sum==n)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br><span class="hljs-type">int</span> p=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=lst<span class="hljs-number">+1</span>;i&lt;=n-sum;i++)<br>p+=<span class="hljs-built_in">dfs</span>(i+sum,i);<br><span class="hljs-keyword">return</span> f[sum][lst]=p;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-built_in">memset</span>(f,<span class="hljs-number">-1</span>,<span class="hljs-built_in">sizeof</span>(f));<br>cin&gt;&gt;n;<br>cout&lt;&lt;<span class="hljs-built_in">dfs</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>)<span class="hljs-number">-1</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="B-POI-2018-R2-自行车道-Bike-paths"><a href="#B-POI-2018-R2-自行车道-Bike-paths" class="headerlink" title="B. [POI 2018 R2] 自行车道 Bike paths"></a>B. [POI 2018 R2] 自行车道 Bike paths</h2><p><a href="http://luogu.com.cn/problem/P12760">link</a></p><p>这道题考的是tarjan缩点</p><p>缩点完这个图就成了一个DAG（有向无环图），然后就可以打记忆化搜索了</p><p>转移方程就是：<br>$$<br>dp_u&#x3D;\sum dp_v\<br>v是u的儿子<br>$$<br>初始化就是：<br>$$<br>dp_u&#x3D;scc_u\<br>scc_u就是u所属的强连通分量的大小<br>$$<br>注意的是节点本身并不计入答案</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// Problem:Luogu P12760 [POI 2018 R2] 自行车道 Bike paths</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> MAXN=<span class="hljs-number">50010</span>;<br><span class="hljs-type">int</span> n,m;<br>vector &lt;<span class="hljs-type">int</span>&gt; g1[MAXN],g2[MAXN];<br><span class="hljs-type">int</span> dfn[MAXN],low[MAXN],idx;<br><span class="hljs-type">int</span> stk[MAXN],top;<br><span class="hljs-type">bool</span> ins[MAXN];<br><span class="hljs-type">int</span> scc[MAXN],scccnt;<br>vector &lt;vector&lt;<span class="hljs-type">int</span>&gt; &gt; _scc;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">tarjan</span><span class="hljs-params">(<span class="hljs-type">int</span> u,<span class="hljs-type">int</span> fa)</span></span><br><span class="hljs-function"></span>&#123;<br>dfn[u]=low[u]=++idx;<br>stk[++top]=u;<br>ins[u]=<span class="hljs-number">1</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> v:g1[u])<br><span class="hljs-keyword">if</span>(!dfn[v])<br>&#123;<br><span class="hljs-built_in">tarjan</span>(v,u);<br>low[u]=<span class="hljs-built_in">min</span>(low[u],low[v]);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(ins[v])<br>low[u]=<span class="hljs-built_in">min</span>(low[u],dfn[v]);<br><span class="hljs-keyword">if</span>(low[u]==dfn[u])<br>&#123;<br>vector &lt;<span class="hljs-type">int</span>&gt; v;<br><span class="hljs-keyword">while</span>(top&gt;<span class="hljs-number">0</span>&amp;&amp;stk[top]!=u)<br>&#123;<br>v.<span class="hljs-built_in">push_back</span>(stk[top]);<br>ins[stk[top]]=<span class="hljs-number">0</span>;<br>scc[stk[top]]=scccnt;<br>top--;<br>&#125;<br>v.<span class="hljs-built_in">push_back</span>(stk[top]);<br>ins[u]=<span class="hljs-number">0</span>;<br>scc[u]=scccnt;<br>top--;<br>_scc.<span class="hljs-built_in">push_back</span>(v);<br>scccnt++;<br>&#125;<br>&#125;<br><span class="hljs-type">int</span> dp[MAXN];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-type">int</span> u)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span>(dp[u])<span class="hljs-keyword">return</span> ;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> v:g2[u])<br><span class="hljs-built_in">dfs</span>(v),dp[u]+=dp[v];<br>dp[u]+=_scc[u].<span class="hljs-built_in">size</span>();<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>cin&gt;&gt;n&gt;&gt;m;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)<br>&#123;<br><span class="hljs-type">int</span> u,v;<br>cin&gt;&gt;u&gt;&gt;v;<br>g1[u].<span class="hljs-built_in">push_back</span>(v);<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br><span class="hljs-keyword">if</span>(!dfn[i])<span class="hljs-built_in">tarjan</span>(i,<span class="hljs-number">0</span>);<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;scccnt;i++)<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> v:_scc[i])<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> j:g1[v])<br><span class="hljs-keyword">if</span>(scc[j]!=i)<br>g2[i].<span class="hljs-built_in">push_back</span>(scc[j]);<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;scccnt;i++)<br><span class="hljs-keyword">if</span>(!dp[i])<span class="hljs-built_in">dfs</span>(i);<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>cout&lt;&lt;dp[scc[i]]<span class="hljs-number">-1</span>&lt;&lt;endl;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="C-HNOI2013-比赛"><a href="#C-HNOI2013-比赛" class="headerlink" title="C.[HNOI2013] 比赛"></a>C.[HNOI2013] 比赛</h2><p><a href="http://luogu.com.cn/problem/P3230">link</a></p><p>直接暴力dfs，但是需要加一些剪枝</p><ol><li>考虑到最后再来判断太浪费，在搜索时就限制每人的得分不得超过总分</li><li>如果对于第$u$个人来说，它赢下所有以后的比赛也打不出自己的总分（最后的分数也需要等于总分）</li><li>考虑$sx$表示分出胜负的总场数，$sy$表示所有队的总得分。那么显然有$sx+sy&#x3D;\frac{n(n-1)}{2}$，且$3sx+2sy&#x3D;su$，由此可以截除$sx$和$sy$。在搜索时，可利用其限制胜利场次</li><li>利用人数为$X$，分数集合为$A的比赛方案数一定，它与某人具体的得分是无关的。因此可以利用记忆化索索，把最后剩余的几个人的分数哈希存储起来（这可能并不算是剪枝）</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// Problem:Luogu P3230 [HNOI2013] 比赛</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-type">const</span> <span class="hljs-type">int</span> MAXN=<span class="hljs-number">1010</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> B=<span class="hljs-number">78</span>,mod=<span class="hljs-number">1000000007</span>;<br><span class="hljs-type">int</span> n,sum[MAXN],a[MAXN],b[MAXN],su,sx,sy;<br>map &lt;<span class="hljs-type">int</span>,<span class="hljs-type">int</span>&gt; ha;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-type">int</span> u,<span class="hljs-type">int</span> v)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span>(u==n)<span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br><span class="hljs-keyword">if</span>(a[u]<span class="hljs-number">+3</span>*(n-v<span class="hljs-number">+1</span>)&lt;sum[u])<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br><span class="hljs-type">int</span> ret=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">if</span>(v&gt;n)<br>&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=u<span class="hljs-number">+1</span>;i&lt;=n;i++)b[i]=sum[i]-a[i];<br><span class="hljs-built_in">sort</span>(b+u<span class="hljs-number">+1</span>,b+n<span class="hljs-number">+1</span>,<span class="hljs-built_in">less</span>&lt;<span class="hljs-type">int</span>&gt;());<br><span class="hljs-type">int</span> h=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=u<span class="hljs-number">+1</span>;i&lt;=n;i++)h=h*B+b[i];<br><span class="hljs-keyword">if</span>(ha.<span class="hljs-built_in">find</span>(h)!=ha.<span class="hljs-built_in">end</span>())<span class="hljs-keyword">return</span> ha[h];<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> ha[h]=<span class="hljs-built_in">dfs</span>(u<span class="hljs-number">+1</span>,u<span class="hljs-number">+2</span>);<br>&#125;<br><span class="hljs-keyword">if</span>(a[u]<span class="hljs-number">+3</span>&lt;=sum[u]&amp;&amp;sx)<br>a[u]+=<span class="hljs-number">3</span>,sx--,ret+=<span class="hljs-built_in">dfs</span>(u,v<span class="hljs-number">+1</span>),a[u]-=<span class="hljs-number">3</span>,sx++;<br><span class="hljs-keyword">if</span>(a[u]<span class="hljs-number">+1</span>&lt;=sum[u]&amp;&amp;a[v]<span class="hljs-number">+1</span>&lt;=sum[v]&amp;&amp;sy)<br>a[u]++,a[v]++,sy--,ret+=<span class="hljs-built_in">dfs</span>(u,v<span class="hljs-number">+1</span>),a[u]--,a[v]--,sy++;<br><span class="hljs-keyword">if</span>(a[v]<span class="hljs-number">+3</span>&lt;=sum[v]&amp;&amp;sx)<br>a[v]+=<span class="hljs-number">3</span>,sx--,ret+=<span class="hljs-built_in">dfs</span>(u,v<span class="hljs-number">+1</span>),a[v]-=<span class="hljs-number">3</span>,sx++;<br><span class="hljs-keyword">return</span> ret%mod;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>cin&gt;&gt;n;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)cin&gt;&gt;sum[i],su+=sum[i];<br>sx=su-n*n+n;<br>sy=(su<span class="hljs-number">-3</span>*sx)&gt;&gt;<span class="hljs-number">1</span>;<br><span class="hljs-built_in">sort</span>(sum<span class="hljs-number">+1</span>,sum+n<span class="hljs-number">+1</span>,<span class="hljs-built_in">less</span>&lt;<span class="hljs-type">int</span>&gt;());<br>cout&lt;&lt;<span class="hljs-built_in">dfs</span>(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="D-MtOI2018-衣服？身外之物！"><a href="#D-MtOI2018-衣服？身外之物！" class="headerlink" title="D.[MtOI2018] 衣服？身外之物！"></a>D.[MtOI2018] 衣服？身外之物！</h2><p><a href="http://luogu.com.cn/problem/P4928">link</a></p><p>用7进制做状压dp，然后7788搞下就可以了</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// Problem:Luogu P4928 [MtOI2018] 衣服？身外之物！</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-type">const</span> <span class="hljs-type">int</span> MAXN=<span class="hljs-number">10</span>,MAXM=<span class="hljs-number">2010</span>;<br><span class="hljs-type">int</span> n,m,x[MAXN],y[MAXN],z[MAXM],ans=LLONG_MIN;<br><span class="hljs-type">int</span> f[<span class="hljs-number">2</span>][<span class="hljs-number">120010</span>];<br><span class="hljs-type">int</span> p[]=&#123;<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">7</span>,<span class="hljs-number">49</span>,<span class="hljs-number">343</span>&#125;;<br><span class="hljs-type">bool</span> vis[<span class="hljs-number">120010</span>];<br>vector &lt;<span class="hljs-type">int</span>&gt; a[<span class="hljs-number">2</span>];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">read</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> x=<span class="hljs-number">0</span>,f=<span class="hljs-number">1</span>;<br><span class="hljs-type">char</span> c=<span class="hljs-built_in">getchar</span>();<br><span class="hljs-keyword">while</span>(!<span class="hljs-built_in">isdigit</span>(c))&#123;<span class="hljs-keyword">if</span>(c==<span class="hljs-string">&#x27;-&#x27;</span>)f=<span class="hljs-number">-1</span>;c=<span class="hljs-built_in">getchar</span>();&#125;<br><span class="hljs-keyword">while</span>(<span class="hljs-built_in">isdigit</span>(c))&#123;x=x*<span class="hljs-number">10</span>+c-<span class="hljs-string">&#x27;0&#x27;</span>;c=<span class="hljs-built_in">getchar</span>();&#125;<br><span class="hljs-keyword">return</span> x*f;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">nxt</span><span class="hljs-params">(<span class="hljs-type">int</span> zt,<span class="hljs-type">int</span> now)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> res=zt;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br><span class="hljs-keyword">if</span>(i==now)res+=y[i]*p[i];<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(zt/p[i]%<span class="hljs-number">7</span>!=<span class="hljs-number">0</span>)res-=p[i];<br><span class="hljs-keyword">return</span> res;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>n=<span class="hljs-built_in">read</span>(),m=<span class="hljs-built_in">read</span>();<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)x[i]=<span class="hljs-built_in">read</span>();<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)y[i]=<span class="hljs-built_in">read</span>();<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)z[i]=<span class="hljs-built_in">read</span>();<br>a[<span class="hljs-number">0</span>].<span class="hljs-built_in">push_back</span>(<span class="hljs-number">0</span>);<br><span class="hljs-type">bool</span> op=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)<br>&#123;<br><span class="hljs-built_in">memset</span>(f[op^<span class="hljs-number">1</span>],<span class="hljs-number">-63</span>,<span class="hljs-built_in">sizeof</span>(f[op^<span class="hljs-number">1</span>]));<br>a[op^<span class="hljs-number">1</span>].<span class="hljs-built_in">clear</span>();<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;a[op].<span class="hljs-built_in">size</span>();j++)vis[a[op][j]]=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;a[op].<span class="hljs-built_in">size</span>();j++)<br>&#123;<br><span class="hljs-type">int</span> zt=a[op][j];<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> k=<span class="hljs-number">1</span>;k&lt;=n;k++)<br><span class="hljs-keyword">if</span>(zt/p[k]%<span class="hljs-number">7</span>==<span class="hljs-number">0</span>)<br>&#123;<br><span class="hljs-type">int</span> now=<span class="hljs-built_in">nxt</span>(zt,k);<br><span class="hljs-keyword">if</span>(!vis[now])a[op^<span class="hljs-number">1</span>].<span class="hljs-built_in">push_back</span>(now),vis[now]=<span class="hljs-number">1</span>;<br>f[op^<span class="hljs-number">1</span>][now]=<span class="hljs-built_in">max</span>(f[op^<span class="hljs-number">1</span>][now],f[op][zt]+z[i]*x[k]);<br>&#125;<br>&#125;<br>op^=<span class="hljs-number">1</span>;<br><span class="hljs-keyword">if</span>(!a[op].<span class="hljs-built_in">size</span>())<br>&#123;<br><span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;gcd loves her clothes!&quot;</span>);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;a[op].<span class="hljs-built_in">size</span>();i++)<br>ans=<span class="hljs-built_in">max</span>(ans,f[op][a[op][i]]);<br>cout&lt;&lt;ans;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>题解</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【题解】10-2入门组模拟</title>
    <link href="/2025/10/02/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%9110-2%E5%85%A5%E9%97%A8%E7%BB%84%E6%A8%A1%E6%8B%9F/"/>
    <url>/2025/10/02/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%9110-2%E5%85%A5%E9%97%A8%E7%BB%84%E6%A8%A1%E6%8B%9F/</url>
    
    <content type="html"><![CDATA[<p>谁能有我tang，我T2循环次数开小了，只拿了8分，调大就过了，真tm服了啊</p><h2 id="A-【MX-J1-T2】『FLA-III』Ilumina"><a href="#A-【MX-J1-T2】『FLA-III』Ilumina" class="headerlink" title="A.【MX-J1-T2】『FLA - III』Ilumina"></a>A.【MX-J1-T2】『FLA - III』Ilumina</h2><p><a href="http://luogu.com.cn/problem/P10782">link</a></p><p>这道是数学题，给我整sha了，我数学题贼不好。</p><p>我么们可以将问题转化成判断是否存在正整数$m$使得$c&#x3D;\left \lfloor \frac{a}{m} \right \rfloor$。</p><p>如果存在这样的$m$，因为构造中$n&#x3D;1$，直接输出$a$即可。<br>$$<br>\left \lfloor \frac{a}{\left \lfloor \frac{a}{c}\right \rfloor}\right \rfloor \geq \left \lfloor \frac{a}{\frac{a}{c}}\right \rfloor&#x3D;\lfloor c\rfloor &#x3D;c&#x3D;\left \lfloor \frac{a}{m}\right \rfloor<br>$$</p><p>存在合法的$m$当且仅当存在区间$[l,r]$满足$l \leq r$且对于$i \in [l,r] \cap \Z$有$\left \lfloor \frac{a}{i}\right \rfloor&#x3D;c$。</p><p>很显然，最大的满足条件的$i$（使用$i_0$表示）满足$i_0 \times c \leq a$并且$(i_0+1)\times c&gt;a$，容易得到$i_0&#x3D;\lfloor  \frac{a}{c}\rfloor$，计算$i_0$的值并且检验$\lfloor \frac{a}{i_0}\rfloor$是否等于$c$即可判断是否存在合法的$m$。</p><p>单组数据时间复杂度$O(1)$。</p><p><a href="https://www.luogu.com.cn/article/1lq7t03h">借鉴这篇题解</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// Problem:Luogu P10782 【MX-J1-T2】『FLA - III』Ilumina</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> t;<br>cin&gt;&gt;t;<br><span class="hljs-keyword">while</span>(t--)<br>&#123;<br><span class="hljs-type">int</span> a,c;<br>cin&gt;&gt;a&gt;&gt;c;<br><span class="hljs-keyword">if</span>(a&lt;c)<span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;-1&quot;</span>);<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(a/(a/c)==c)cout&lt;&lt;a&lt;&lt;endl;<br>        <span class="hljs-keyword">else</span> <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;-1&quot;</span>);<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="B-USACO3-1-邮票-Stamps"><a href="#B-USACO3-1-邮票-Stamps" class="headerlink" title="B.[USACO3.1] 邮票 Stamps"></a>B.[USACO3.1] 邮票 Stamps</h2><p><a href="http://luogu.com.cn/problem/P2725">link</a></p><p>这题就是纯纯正正的dp，感觉和<a href="https://www.luogu.com.cn/problem/B3635">这题</a>很像</p><p>只需要把dp数组开的足够大，暴力寻找的次数足够大，就能ac了</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// Problem:Luogu P2725 [USACO3.1] 邮票 Stamps</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> f[<span class="hljs-number">10000010</span>],a[<span class="hljs-number">1000010</span>],n,k;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>cin&gt;&gt;k&gt;&gt;n;<br><span class="hljs-built_in">memset</span>(f,<span class="hljs-number">0x3f</span>,<span class="hljs-built_in">sizeof</span>(f));<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)cin&gt;&gt;a[i],f[a[i]]=<span class="hljs-number">1</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=<span class="hljs-number">9999999</span>;i++)<br>&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=n;j++)<br><span class="hljs-keyword">if</span>(i-a[j]&gt;=<span class="hljs-number">0</span>)<br>f[i]=<span class="hljs-built_in">min</span>(f[i],f[i-a[j]]<span class="hljs-number">+1</span>);<br><span class="hljs-keyword">if</span>(f[i]&gt;k)<br>&#123;<br>cout&lt;&lt;i<span class="hljs-number">-1</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="C-JOI-2020-Final-JJOOII-2"><a href="#C-JOI-2020-Final-JJOOII-2" class="headerlink" title="C.[JOI 2020 Final] JJOOII 2"></a>C.[JOI 2020 Final] JJOOII 2</h2><p><a href="http://luogu.com.cn/problem/P6878">link</a></p><p>这道题就是贪心+前缀和+二分（<code>lower_bound</code>）</p><p>用前缀和统计每个字母出现的位置，然后接下来往后找$k$个<code>O</code>和<code>I</code></p><p>然后答案就是找出来最短的<code>JOI</code>串的长度减去$3 \times k$。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// Problem:Luogu P6878 [JOI 2020 Final] JJOOII 2</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> MAXN=<span class="hljs-number">200010</span>;<br><span class="hljs-type">int</span> J[MAXN],O[MAXN],I[MAXN],n,k;<br>string s;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>cin&gt;&gt;n&gt;&gt;k&gt;&gt;s;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>&#123;<br>J[i]=J[i<span class="hljs-number">-1</span>];<br>O[i]=O[i<span class="hljs-number">-1</span>];<br>I[i]=I[i<span class="hljs-number">-1</span>];<br><span class="hljs-keyword">if</span>(s[i<span class="hljs-number">-1</span>]==<span class="hljs-string">&#x27;J&#x27;</span>)J[i]++;<br><span class="hljs-keyword">if</span>(s[i<span class="hljs-number">-1</span>]==<span class="hljs-string">&#x27;O&#x27;</span>)O[i]++;<br><span class="hljs-keyword">if</span>(s[i<span class="hljs-number">-1</span>]==<span class="hljs-string">&#x27;I&#x27;</span>)I[i]++;<br>&#125;<br><span class="hljs-type">int</span> ans=INT_MAX;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>&#123;<br>        <span class="hljs-comment">//其实并不需要把J、O、I全部都找到，只需要找到一个J就可以了</span><br><span class="hljs-keyword">if</span>(s[i<span class="hljs-number">-1</span>]!=<span class="hljs-string">&#x27;J&#x27;</span>)<span class="hljs-keyword">continue</span>;<br><span class="hljs-type">int</span> x=<span class="hljs-built_in">lower_bound</span>(J<span class="hljs-number">+1</span>,J<span class="hljs-number">+1</span>+n,J[i<span class="hljs-number">-1</span>]+k)-J;<br><span class="hljs-type">int</span> y=<span class="hljs-built_in">lower_bound</span>(O<span class="hljs-number">+1</span>,O<span class="hljs-number">+1</span>+n,O[x<span class="hljs-number">-1</span>]+k)-O;<br><span class="hljs-type">int</span> z=<span class="hljs-built_in">lower_bound</span>(I<span class="hljs-number">+1</span>,I<span class="hljs-number">+1</span>+n,I[y<span class="hljs-number">-1</span>]+k)-I;<br><span class="hljs-keyword">if</span>(x&gt;n||y&gt;n||z&gt;n)<span class="hljs-keyword">break</span>;<br>ans=<span class="hljs-built_in">min</span>(ans,z-i<span class="hljs-number">+1</span>);<br>&#125;<br><span class="hljs-keyword">if</span>(ans==INT_MAX)<span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;-1&quot;</span>);<br><span class="hljs-keyword">else</span> cout&lt;&lt;ans-k*<span class="hljs-number">3</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="D-USACO20FEB-Clock-Tree-S"><a href="#D-USACO20FEB-Clock-Tree-S" class="headerlink" title="D.[USACO20FEB] Clock Tree S"></a>D.[USACO20FEB] Clock Tree S</h2><p><a href="http://luogu.com.cn/problem/P6150">link</a></p><p>这道题是dfs</p><p>因为找起点的数量，就依次遍历</p><p>当奶牛从$u$走到$v$的时候，$u$和$v$的时钟都会往后拨一格，所以父子之间的差是固定的</p><p>那我们在$u$和$v$之间不断走动，使$v$变成$12$，然后让$u$与$u$的父亲进行操作。</p><p>最后到根节点为$12$就说明这个起点可行，根节点为$1$也是可以的，只要我们从根到它的儿子使它的儿子为$12$，然后不返回也可以满足条件。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// Problem:Luogu P6150 [USACO20FEB] Clock Tree S</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> MAXN=<span class="hljs-number">50010</span>;<br>vector &lt;<span class="hljs-type">int</span>&gt; g[MAXN];<br><span class="hljs-type">int</span> a[MAXN],b[MAXN],ans;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-type">int</span> u,<span class="hljs-type">int</span> fa)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> v:g[u])<br>&#123;<br><span class="hljs-keyword">if</span>(v==fa)<span class="hljs-keyword">continue</span>;<br><span class="hljs-built_in">dfs</span>(v,u);<br>b[u]=(b[u]<span class="hljs-number">+12</span>-b[v])%<span class="hljs-number">12</span>;<br>        <span class="hljs-comment">//用模数代表钟的状态</span><br>&#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> n;<br>cin&gt;&gt;n;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)cin&gt;&gt;a[i];<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;n;i++)<br>&#123;<br><span class="hljs-type">int</span> u,v;<br>cin&gt;&gt;u&gt;&gt;v;<br>g[u].<span class="hljs-built_in">push_back</span>(v);<br>g[v].<span class="hljs-built_in">push_back</span>(u);<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>&#123;<br><span class="hljs-built_in">memcpy</span>(b,a,<span class="hljs-built_in">sizeof</span>(b));<br><span class="hljs-built_in">dfs</span>(i,<span class="hljs-number">0</span>);<br><span class="hljs-keyword">if</span>(b[i]==<span class="hljs-number">0</span>||b[i]==<span class="hljs-number">1</span>)ans++;<br>       <span class="hljs-comment">//0和1都是可以的</span><br>&#125;<br>cout&lt;&lt;ans;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>题解</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【题解】10-1提高组模拟</title>
    <link href="/2025/10/01/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%9110-1%E6%8F%90%E9%AB%98%E7%BB%84%E6%A8%A1%E6%8B%9F/"/>
    <url>/2025/10/01/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%9110-1%E6%8F%90%E9%AB%98%E7%BB%84%E6%A8%A1%E6%8B%9F/</url>
    
    <content type="html"><![CDATA[<p>图论啥的都不会了，还有救吗？</p><p>USACO的第一个测试点是样例，可以骗分的……</p><h2 id="A-公路通行税"><a href="#A-公路通行税" class="headerlink" title="A.公路通行税"></a>A.公路通行税</h2><p><a href="http://luogu.com.cn/problem/P2185">link</a></p><p>这题就是找出图中的最长不重复的道路</p><p>在注意到$1 \leq n \leq 10^3$，想也不用想就可以排除掉Floyd</p><p>由于每个道路的长度都是$1$，所以就可以直接bfs。</p><p><strong>注意多测清空</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// Problem:Luogu P2185 公路通行税</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> MAXN=<span class="hljs-number">1010</span>;<br>vector &lt;<span class="hljs-type">int</span>&gt; g[MAXN];<br><span class="hljs-type">int</span> n,m,ans;<br><span class="hljs-type">bool</span> vis[MAXN];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">bfs</span><span class="hljs-params">(<span class="hljs-type">int</span> s)</span></span><br><span class="hljs-function"></span>&#123;<br>queue &lt;pair&lt;<span class="hljs-type">int</span>,<span class="hljs-type">int</span>&gt;&gt; q;<br>q.<span class="hljs-built_in">push</span>(&#123;s,<span class="hljs-number">0</span>&#125;);<br>vis[s]=<span class="hljs-number">1</span>;<br><span class="hljs-keyword">while</span>(!q.<span class="hljs-built_in">empty</span>())<br>&#123;<br><span class="hljs-type">int</span> u=q.<span class="hljs-built_in">front</span>().first,dis=q.<span class="hljs-built_in">front</span>().second;<br>ans=<span class="hljs-built_in">max</span>(ans,dis);<br>q.<span class="hljs-built_in">pop</span>();<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> v:g[u])<br><span class="hljs-keyword">if</span>(!vis[v])<br>vis[v]=<span class="hljs-number">1</span>,q.<span class="hljs-built_in">push</span>(&#123;v,dis<span class="hljs-number">+1</span>&#125;);<br>&#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>ans=<span class="hljs-number">-1</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)g[i].<span class="hljs-built_in">clear</span>();<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)<br>&#123;<br><span class="hljs-type">int</span> u,v;<br>cin&gt;&gt;u&gt;&gt;v;<br>g[u].<span class="hljs-built_in">push_back</span>(v);<br>g[v].<span class="hljs-built_in">push_back</span>(u);<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>&#123;<br><span class="hljs-built_in">memset</span>(vis,<span class="hljs-number">0</span>,<span class="hljs-built_in">sizeof</span>(vis));<br><span class="hljs-built_in">bfs</span>(i);<br>&#125;<br>cout&lt;&lt;ans*<span class="hljs-number">100</span>&lt;&lt;<span class="hljs-string">&#x27;\n&#x27;</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)<br>&#123;<br>cin&gt;&gt;n&gt;&gt;m;<br><span class="hljs-keyword">if</span>(n&amp;&amp;m)<span class="hljs-built_in">solve</span>();<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="B-USACO22OPEN-Visits-S"><a href="#B-USACO22OPEN-Visits-S" class="headerlink" title="B. [USACO22OPEN] Visits S"></a>B. [USACO22OPEN] Visits S</h2><p><a href="http://luogu.com.cn/problem/P8269">link</a></p><p>这题想亻乙想就知道这题的答案就是非环部分的叫声总和加上环上部分总和减去环上部分的最小值（因为绕一圈回来肯定有一个去朋友家了，所以贪心舍弃最小值）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// Problem:Luogu P8269 [USACO22OPEN] Visits S</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> MAXN=<span class="hljs-number">200010</span>;<br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-type">int</span> a[MAXN],v[MAXN],indeg[MAXN],n,ans,minn=LLONG_MAX;<br><span class="hljs-type">bool</span> vis[MAXN];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">topo</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>queue &lt;<span class="hljs-type">int</span>&gt; q;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br><span class="hljs-keyword">if</span>(!indeg[i])q.<span class="hljs-built_in">push</span>(i);<br><span class="hljs-keyword">while</span>(!q.<span class="hljs-built_in">empty</span>())<br>&#123;<br><span class="hljs-type">int</span> u=q.<span class="hljs-built_in">front</span>();<br>q.<span class="hljs-built_in">pop</span>();<br>ans+=v[u];<br>vis[u]=<span class="hljs-number">1</span>;<br>indeg[a[u]]--;<br><span class="hljs-keyword">if</span>(!indeg[a[u]])q.<span class="hljs-built_in">push</span>(a[u]);<br>&#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-type">int</span> u)</span></span><br><span class="hljs-function"></span>&#123;<br>vis[u]=<span class="hljs-number">1</span>;<br>minn=<span class="hljs-built_in">min</span>(minn,v[u]);<br><span class="hljs-keyword">if</span>(!vis[a[u]])<span class="hljs-built_in">dfs</span>(a[u]);<br>&#125;<br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>cin&gt;&gt;n;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>&#123;<br>cin&gt;&gt;a[i]&gt;&gt;v[i];<br>indeg[a[i]]++;<br>&#125;<br><span class="hljs-built_in">topo</span>();<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br><span class="hljs-keyword">if</span>(!vis[i])ans+=v[i];<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br><span class="hljs-keyword">if</span>(!vis[i])<br>&#123;<br>minn=LLONG_MAX;<br><span class="hljs-built_in">dfs</span>(i);<br>ans-=minn;<br>&#125;<br>cout&lt;&lt;ans;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="C-USACO3-1-丑数-Humble-Numbers"><a href="#C-USACO3-1-丑数-Humble-Numbers" class="headerlink" title="C. [USACO3.1] 丑数 Humble Numbers"></a>C. [USACO3.1] 丑数 Humble Numbers</h2><p>这题一看就是一种恶心人的数学</p><p>可以用多次乘来得到第$n$小的丑数</p><p>怎么做呢？</p><p>先假设$1$是丑数，然后再用指针记录，分别乘$S$中的数，接下来对指针进行更新</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// Problem:Luogu P2723 [USACO3.1] 丑数 Humble Numbers</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-type">int</span> a[<span class="hljs-number">110</span>],f[<span class="hljs-number">114514</span>],idx[<span class="hljs-number">110</span>];<br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> k,n;<br>cin&gt;&gt;k&gt;&gt;n;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=k;i++)cin&gt;&gt;a[i];<br>f[<span class="hljs-number">0</span>]=<span class="hljs-number">1</span>;<span class="hljs-comment">//假设1也是丑数</span><br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>&#123;<br><span class="hljs-type">int</span> minn=LLONG_MAX;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=k;j++)<br>minn=<span class="hljs-built_in">min</span>(minn,f[idx[j]]*a[j]);<span class="hljs-comment">//分别相乘找到最小的乘积</span><br>f[i]=minn;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=k;j++)<br><span class="hljs-keyword">if</span>(f[idx[j]]*a[j]==minn)<span class="hljs-comment">//如果有多个相同的质因数相乘等于最小值，就将指针累加</span><br>idx[j]++;<br>&#125;<br>cout&lt;&lt;f[n];<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>原先用stl做的超时了……</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// Problem:Luogu P2723 [USACO3.1] 丑数 Humble Numbers</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br>set &lt;<span class="hljs-type">int</span>&gt; st;<br>priority_queue &lt;<span class="hljs-type">int</span>,vector &lt;<span class="hljs-type">int</span>&gt;,greater&lt;<span class="hljs-type">int</span>&gt; &gt; q;<br><span class="hljs-type">int</span> a[<span class="hljs-number">100010</span>];<br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> k,n;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%lld%lld&quot;</span>,&amp;k,&amp;n);<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=k;i++)<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%lld&quot;</span>,&amp;a[i]);<br>q.<span class="hljs-built_in">push</span>(<span class="hljs-number">1</span>);<br>st.<span class="hljs-built_in">insert</span>(<span class="hljs-number">1</span>);<br><span class="hljs-type">int</span> cnt=<span class="hljs-number">0</span>,front;<br><span class="hljs-keyword">while</span>(cnt&lt;=n)<br>&#123;<br>cnt++;<br>front=q.<span class="hljs-built_in">top</span>();<br>q.<span class="hljs-built_in">pop</span>();<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=k;j++)<br>&#123;<br><span class="hljs-type">int</span> num=front*a[j];<br><span class="hljs-keyword">if</span>(!st.<span class="hljs-built_in">count</span>(num))<br>&#123;<br>q.<span class="hljs-built_in">push</span>(num);<br>st.<span class="hljs-built_in">insert</span>(num);<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,front);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="D-TJOI2013-黄金矿工"><a href="#D-TJOI2013-黄金矿工" class="headerlink" title="D. [TJOI2013] 黄金矿工"></a>D. [TJOI2013] 黄金矿工</h2><p><a href="http://luogu.com.cn/problem/P3961">link</a></p><p>这题的数据非常💧，导致01背包的模板都能过</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// Problem:Luogu P3961 [TJOI2013] 黄金矿工</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> MAXN=<span class="hljs-number">210</span>;<br><span class="hljs-type">int</span> v[MAXN],w[MAXN],dp[<span class="hljs-number">40010</span>],t,n;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>cin&gt;&gt;n&gt;&gt;t;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>&#123;<br><span class="hljs-type">int</span> tmp;<br>cin&gt;&gt;tmp&gt;&gt;tmp&gt;&gt;v[i]&gt;&gt;w[i];<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=t;j&gt;=v[i];j--)<br>dp[j]=<span class="hljs-built_in">max</span>(dp[j],dp[j-v[i]]+w[i]);<br>cout&lt;&lt;dp[t];<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>《天津省选》</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// Problem:Luogu P3961 [TJOI2013] 黄金矿工</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">node</span><br>&#123;<br><span class="hljs-type">int</span> x,y,t,v;<br><span class="hljs-type">double</span> b;<span class="hljs-comment">//斜率</span><br>&#125;pos[<span class="hljs-number">2010</span>];<br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">cmp</span><span class="hljs-params">(node a,node b)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span>(a.b==b.b)<span class="hljs-keyword">return</span> a.y&lt;b.y;<br><span class="hljs-keyword">return</span> a.b&lt;b.b;<br>&#125;<br><span class="hljs-type">int</span> n,T,gold[<span class="hljs-number">2010</span>],t[<span class="hljs-number">2010</span>][<span class="hljs-number">2010</span>],v[<span class="hljs-number">2010</span>][<span class="hljs-number">2010</span>],f[<span class="hljs-number">40010</span>],cnt;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>cnt=<span class="hljs-number">0</span>;<br>cin&gt;&gt;n&gt;&gt;T;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>&#123;<br>cin&gt;&gt;pos[i].x&gt;&gt;pos[i].y&gt;&gt;pos[i].t&gt;&gt;pos[i].v;<br>pos[i].b=pos[i].y*<span class="hljs-number">1.0</span>/pos[i].x;<span class="hljs-comment">//求斜率</span><br>&#125;<br><span class="hljs-built_in">sort</span>(pos<span class="hljs-number">+1</span>,pos<span class="hljs-number">+1</span>+n,cmp);<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>&#123;<br><span class="hljs-keyword">if</span>(i==<span class="hljs-number">1</span>||pos[i].b!=pos[i<span class="hljs-number">-1</span>].b)cnt++;<br><span class="hljs-keyword">if</span>(gold[cnt]==<span class="hljs-number">0</span>)<br>&#123;<br>gold[cnt]=<span class="hljs-number">1</span>;<br>t[cnt][<span class="hljs-number">1</span>]=pos[i].t;<span class="hljs-comment">//第cnt组1个金子的时间</span><br>v[cnt][<span class="hljs-number">1</span>]=pos[i].v;<span class="hljs-comment">//第cnt组1个金子的价值</span><br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>gold[cnt]++;<br>t[cnt][gold[cnt]]=t[cnt][gold[cnt]<span class="hljs-number">-1</span>]+pos[i].t;<br>v[cnt][gold[cnt]]=v[cnt][gold[cnt]<span class="hljs-number">-1</span>]+pos[i].v;<br>&#125;<br>&#125;<br><span class="hljs-built_in">memset</span>(f,<span class="hljs-number">0</span>,<span class="hljs-built_in">sizeof</span>(f));<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=cnt;i++)<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=T;j&gt;=t[i][<span class="hljs-number">1</span>];j--)<br>&#123;<br><span class="hljs-type">int</span> maxn=f[j];<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> k=<span class="hljs-number">1</span>;k&lt;=gold[i];k++)<br><span class="hljs-keyword">if</span>(j&gt;=t[i][k])<br>maxn=<span class="hljs-built_in">max</span>(maxn,f[j-t[i][k]]+v[i][k]);<br>f[j]=maxn;<br>&#125;<br>cout&lt;&lt;f[T];<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>题解</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【题解】10-1入门组模拟</title>
    <link href="/2025/10/01/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%9110-1%E5%85%A5%E9%97%A8%E7%BB%84%E6%A8%A1%E6%8B%9F/"/>
    <url>/2025/10/01/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%9110-1%E5%85%A5%E9%97%A8%E7%BB%84%E6%A8%A1%E6%8B%9F/</url>
    
    <content type="html"><![CDATA[<p>666，OI给我当ccf整，这个<code>memset</code>太吃操作了</p><h2 id="A-EC-Final-2021-DFS-Order"><a href="#A-EC-Final-2021-DFS-Order" class="headerlink" title="A.[EC Final 2021] DFS Order"></a>A.[EC Final 2021] DFS Order</h2><p><a href="http://luogu.com.cn/problem/P9872">link</a></p><p>这题很简单，观察样例就可以得出结论<del>（这是我第一次自己想出来）</del>：</p><ul><li>最小的位置就是节点的深度</li><li>最大的位置就是所有节点减掉自己节点子树和</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// Problem:Luogu P9872 [EC Final 2021] DFS Order</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> MAXN=<span class="hljs-number">100010</span>;<br>vector &lt;<span class="hljs-type">int</span>&gt; g[MAXN];<br><span class="hljs-type">int</span> tsize[MAXN],dep[MAXN],n;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-type">int</span> u,<span class="hljs-type">int</span> fa)</span></span><br><span class="hljs-function"></span>&#123;<br>dep[u]=dep[fa]<span class="hljs-number">+1</span>;<br>tsize[u]=<span class="hljs-number">1</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> v:g[u])<br>&#123;<br><span class="hljs-built_in">dfs</span>(v,u);<br>tsize[u]+=tsize[v];<br>&#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> t;<br>cin&gt;&gt;t;<br><span class="hljs-keyword">while</span>(t--)<br>&#123;<br>cin&gt;&gt;n;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)g[i].<span class="hljs-built_in">clear</span>();<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;n;i++)<br>&#123;<br><span class="hljs-type">int</span> u,v;<br>cin&gt;&gt;u&gt;&gt;v;<br>g[u].<span class="hljs-built_in">push_back</span>(v);<br>&#125;<br><span class="hljs-built_in">dfs</span>(<span class="hljs-number">1</span>,<span class="hljs-number">0</span>);<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>&#123;<br>cout&lt;&lt;dep[i]&lt;&lt;<span class="hljs-string">&quot; &quot;</span>&lt;&lt;tsize[<span class="hljs-number">1</span>]-tsize[i]<span class="hljs-number">+1</span>&lt;&lt;<span class="hljs-string">&#x27;\n&#x27;</span>;<br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>666，原先我在这里加了一个<code>memset</code>清空<code>dep</code>和<code>tsize</code>，然后提交完以为这题过了，实则被这个猎奇玩意儿搞tle了</p><h2 id="B-COCI-2011-2012-1-MATRIX"><a href="#B-COCI-2011-2012-1-MATRIX" class="headerlink" title="B.[COCI 2011&#x2F;2012 #1] MATRIX"></a>B.[COCI 2011&#x2F;2012 #1] MATRIX</h2><p><a href="http://luogu.com.cn/problem/P7626">link</a></p><p>这题通过简简单单的模拟就可以过了……</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> n,a[<span class="hljs-number">410</span>][<span class="hljs-number">410</span>],ans=<span class="hljs-number">-0x3f3f3f3f</span>;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-number">0</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>),cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    cin&gt;&gt;n;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=n;j++)<br>            cin&gt;&gt;a[i][j];<br>            <br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> len=<span class="hljs-number">1</span>;len&lt;=n;len++)<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n-len<span class="hljs-number">+1</span>;i++)<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=n-len<span class="hljs-number">+1</span>;j++)<br>            &#123;<br>                <span class="hljs-type">int</span> suma=<span class="hljs-number">0</span>,sumb=<span class="hljs-number">0</span>;<br>                <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> k=<span class="hljs-number">0</span>;k&lt;len;k++)<br>                    suma += a[i+k][j+k];<br>                <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> k=<span class="hljs-number">0</span>;k&lt;len;k++)<br>                    sumb += a[i+k][j+len<span class="hljs-number">-1</span>-k];<br>                ans=<span class="hljs-built_in">max</span>(ans,suma-sumb);<br>            &#125;<br>    cout&lt;&lt;ans;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>（吗？）</strong></p><p>很显然，这个黄题肯定不会让我们这么随便就过了，肯定会tle的</p><p>所以，就要用上前缀和啦！</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// Problem:Luogu P7626 [COCI 2011/2012 #1] MATRIX</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> n,a[<span class="hljs-number">410</span>][<span class="hljs-number">410</span>],ans=<span class="hljs-number">-0x3f3f3f3f</span>;<br><span class="hljs-type">int</span> sum1[<span class="hljs-number">410</span>][<span class="hljs-number">410</span>],sum2[<span class="hljs-number">410</span>][<span class="hljs-number">410</span>];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>cin&gt;&gt;n;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=n;j++)<br>cin&gt;&gt;a[i][j];<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=n;j++)<br>sum1[i][j]=sum1[i<span class="hljs-number">-1</span>][j<span class="hljs-number">-1</span>]+a[i][j],<br>sum2[i][j]=sum2[i<span class="hljs-number">-1</span>][j<span class="hljs-number">+1</span>]+a[i][j];<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> len=<span class="hljs-number">1</span>;len&lt;=n;len++)<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n-len<span class="hljs-number">+1</span>;i++)<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=n-len<span class="hljs-number">+1</span>;j++)<br>&#123;<br><span class="hljs-type">int</span> ii=i+len<span class="hljs-number">-1</span>,jj=j+len<span class="hljs-number">-1</span>;<br><span class="hljs-type">int</span> a=sum1[ii][jj]-sum1[i<span class="hljs-number">-1</span>][j<span class="hljs-number">-1</span>];<br><span class="hljs-type">int</span> b=sum2[ii][j]-sum2[i<span class="hljs-number">-1</span>][jj<span class="hljs-number">+1</span>];<br>ans=<span class="hljs-built_in">max</span>(ans,a-b);<br>&#125;<br>cout&lt;&lt;ans;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p><del>为什么这题满分是80分呢</del></p><h2 id="C-CCC-2016-合并饭团"><a href="#C-CCC-2016-合并饭团" class="headerlink" title="C. [CCC 2016] 合并饭团"></a>C. [CCC 2016] 合并饭团</h2><p><a href="http://luogu.com.cn/problem/P4805">link</a></p><p><del>第一眼CCF</del></p><p>这一题是一个区间dp再加点料的（黑暗料理）</p><p>关键在于它要将饭团合并（这对于你们这些神犇估计不是什么关键吧）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// Problem:Luogu P4805 [CCC 2016] 合并饭团</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> n,a[<span class="hljs-number">410</span>],dp[<span class="hljs-number">410</span>][<span class="hljs-number">410</span>],f[<span class="hljs-number">410</span>][<span class="hljs-number">410</span>];<br><span class="hljs-comment">//f表示i,j这个区间可以合并成一个饭团</span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>cin&gt;&gt;n;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)cin&gt;&gt;a[i],dp[i][i]=a[i],f[i][i]=<span class="hljs-number">1</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> len=<span class="hljs-number">1</span>;len&lt;=n;len++)<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n-len<span class="hljs-number">+1</span>;i++)<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> mid=i;mid&lt;i+len<span class="hljs-number">-1</span>;mid++)<br>&#123;<br><span class="hljs-type">int</span> j=i+len<span class="hljs-number">-1</span>;<br><span class="hljs-keyword">if</span>(dp[i][j]&lt;dp[i][mid])dp[i][j]=dp[i][mid];<br><span class="hljs-keyword">if</span>(dp[i][j]&lt;dp[mid<span class="hljs-number">+1</span>][j])dp[i][j]=dp[mid<span class="hljs-number">+1</span>][j];<br>                <span class="hljs-comment">//设置初值</span><br><span class="hljs-keyword">if</span>(f[i][mid]&amp;&amp;f[mid<span class="hljs-number">+1</span>][j]&amp;&amp;dp[i][mid]==dp[mid<span class="hljs-number">+1</span>][j]) <br>&#123;<br>dp[i][j]=dp[i][mid]+dp[mid<span class="hljs-number">+1</span>][j];<br>                    <span class="hljs-comment">//更新</span><br>f[i][j]=<span class="hljs-number">1</span>;<br><span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-keyword">else</span> <br>&#123;<br><span class="hljs-type">bool</span> flag=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> midd=mid<span class="hljs-number">+1</span>;midd&lt;=j;midd++)<br>&#123;<br><span class="hljs-keyword">if</span>(f[i][mid]&amp;&amp;f[mid<span class="hljs-number">+1</span>][midd]&amp;&amp;f[midd<span class="hljs-number">+1</span>][j]&amp;&amp;dp[i][mid]==dp[midd<span class="hljs-number">+1</span>][j])<br>&#123;<br>dp[i][j]=dp[i][mid]+dp[mid<span class="hljs-number">+1</span>][midd]+dp[midd<span class="hljs-number">+1</span>][j];<br>f[i][j]=<span class="hljs-number">1</span>;<br>flag=<span class="hljs-number">1</span>;<br><span class="hljs-keyword">break</span>;<br>&#125;<br>&#125;<br><span class="hljs-keyword">if</span>(flag)<span class="hljs-keyword">break</span>;<br>&#125;<br>&#125;<br>cout&lt;&lt;dp[<span class="hljs-number">1</span>][n];<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="D-【MX-J8-T3】水星湖"><a href="#D-【MX-J8-T3】水星湖" class="headerlink" title="D.【MX-J8-T3】水星湖"></a>D.【MX-J8-T3】水星湖</h2><p><a href="http://luogu.com.cn/problem/P11215">link</a></p><p>这题我在比赛的时候看过，但是因为当时太🥬了，所以没做。</p><p>这题需要用一个优先队列记录事件的要素：</p><ol><li>事件</li><li>类型（树生长&#x2F;种下 or 死亡）</li><li>发生的地点</li></ol><p>然后就可以快乐的打磨你了</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// Problem:Luogu P11215 【MX-J8-T3】水星湖</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N = <span class="hljs-number">3010</span>;<br><span class="hljs-type">int</span> n,m,qq,r,k;<br><span class="hljs-type">int</span> mp[N][N];<br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">happening</span><br>&#123;<br>    <span class="hljs-type">int</span> t;<span class="hljs-comment">//时间</span><br>    <span class="hljs-type">int</span> thing;<span class="hljs-comment">//类型</span><br>    <span class="hljs-type">int</span> x,y;<span class="hljs-comment">//坐标</span><br>    <span class="hljs-type">bool</span> <span class="hljs-keyword">operator</span> &lt;(<span class="hljs-type">const</span> happening&amp; xx) <span class="hljs-type">const</span> &#123; <span class="hljs-keyword">return</span> t &gt; xx.t; &#125;<span class="hljs-comment">//按照时间进行排序</span><br>    <span class="hljs-comment">//运算符重载</span><br>&#125;;<br>priority_queue &lt;happening&gt; q;<br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">check_grow</span><span class="hljs-params">(<span class="hljs-type">int</span> x,<span class="hljs-type">int</span> y)</span> </span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">return</span> x&gt;=<span class="hljs-number">1</span>&amp;&amp;x&lt;=n&amp;&amp;y&gt;=<span class="hljs-number">1</span>&amp;&amp;y&lt;=m&amp;&amp;mp[x][y]==<span class="hljs-number">0</span>&amp;&amp;<br>    (mp[x<span class="hljs-number">-1</span>][y]==<span class="hljs-number">1</span>||mp[x<span class="hljs-number">+1</span>][y]==<span class="hljs-number">1</span>||mp[x][y<span class="hljs-number">-1</span>]==<span class="hljs-number">1</span>||mp[x][y<span class="hljs-number">+1</span>]==<span class="hljs-number">1</span>);<br>    <span class="hljs-comment">//判断这个地点能不能生长树木</span><br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    cin&gt;&gt;n&gt;&gt;m&gt;&gt;qq&gt;&gt;r&gt;&gt;k;<br>    k*=<span class="hljs-number">2</span>;<span class="hljs-comment">//因为0.5是浮点数，所以乘一个2</span><br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> _=<span class="hljs-number">1</span>;_&lt;=qq;_++)<br>    &#123;<br>        <span class="hljs-type">int</span> xa,xb,ya,yb;<br>        cin&gt;&gt;xa&gt;&gt;ya&gt;&gt;xb&gt;&gt;yb;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> x=xa;x&lt;=xb;x++)<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> y=ya;y&lt;=yb;y++)<br>                mp[x][y]=<span class="hljs-number">1</span>;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> _=<span class="hljs-number">1</span>;_&lt;=r;_++)<br>    &#123;<br>        <span class="hljs-type">int</span> t,x,y;<br>        cin&gt;&gt;t&gt;&gt;x&gt;&gt;y;<br>        q.<span class="hljs-built_in">push</span>(&#123;t*<span class="hljs-number">2</span>,<span class="hljs-number">0</span>,x,y&#125;);<br>    &#125;<br>    <span class="hljs-type">int</span> ans=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span>(!q.<span class="hljs-built_in">empty</span>())<br>    &#123;<br>        happening tmp=q.<span class="hljs-built_in">top</span>();<br>        q.<span class="hljs-built_in">pop</span>();<br>        <span class="hljs-keyword">if</span>(tmp.thing==<span class="hljs-number">0</span>)<br>        &#123;<br>            <span class="hljs-keyword">if</span>(mp[tmp.x][tmp.y]==<span class="hljs-number">0</span>)<br>            &#123;<br>                mp[tmp.x][tmp.y]=<span class="hljs-number">2</span>;<br>                <span class="hljs-keyword">if</span>(mp[tmp.x<span class="hljs-number">-1</span>][tmp.y]==<span class="hljs-number">0</span>&amp;&amp;<br>                   mp[tmp.x<span class="hljs-number">+1</span>][tmp.y]==<span class="hljs-number">0</span>&amp;&amp;<br>                   mp[tmp.x][tmp.y<span class="hljs-number">-1</span>]==<span class="hljs-number">0</span>&amp;&amp;<br>                   mp[tmp.x][tmp.y<span class="hljs-number">+1</span>]==<span class="hljs-number">0</span>)<br>                    q.<span class="hljs-built_in">push</span>(&#123;tmp.t+k<span class="hljs-number">+1</span>,<span class="hljs-number">1</span>,tmp.x,tmp.y&#125;);<span class="hljs-comment">//是否满足树的死亡条件</span><br>                <span class="hljs-comment">//向四周扩散</span><br>                <span class="hljs-keyword">if</span>(<span class="hljs-built_in">check_grow</span>(tmp.x<span class="hljs-number">-1</span>,tmp.y))q.<span class="hljs-built_in">push</span>(&#123;tmp.t<span class="hljs-number">+2</span>,<span class="hljs-number">0</span>,tmp.x<span class="hljs-number">-1</span>,tmp.y&#125;);<br>                <span class="hljs-keyword">if</span>(<span class="hljs-built_in">check_grow</span>(tmp.x<span class="hljs-number">+1</span>,tmp.y))q.<span class="hljs-built_in">push</span>(&#123;tmp.t<span class="hljs-number">+2</span>,<span class="hljs-number">0</span>,tmp.x<span class="hljs-number">+1</span>,tmp.y&#125;);<br>                <span class="hljs-keyword">if</span>(<span class="hljs-built_in">check_grow</span>(tmp.x,tmp.y<span class="hljs-number">-1</span>))q.<span class="hljs-built_in">push</span>(&#123;tmp.t<span class="hljs-number">+2</span>,<span class="hljs-number">0</span>,tmp.x,tmp.y<span class="hljs-number">-1</span>&#125;);<br>                <span class="hljs-keyword">if</span>(<span class="hljs-built_in">check_grow</span>(tmp.x,tmp.y<span class="hljs-number">+1</span>))q.<span class="hljs-built_in">push</span>(&#123;tmp.t<span class="hljs-number">+2</span>,<span class="hljs-number">0</span>,tmp.x,tmp.y<span class="hljs-number">+1</span>&#125;);<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(tmp.thing==<span class="hljs-number">1</span>)<br>        &#123;<br>            <span class="hljs-keyword">if</span>(mp[tmp.x<span class="hljs-number">-1</span>][tmp.y]==<span class="hljs-number">0</span>&amp;&amp;<br>               mp[tmp.x<span class="hljs-number">+1</span>][tmp.y]==<span class="hljs-number">0</span>&amp;&amp;<br>               mp[tmp.x][tmp.y<span class="hljs-number">-1</span>]==<span class="hljs-number">0</span>&amp;&amp;<br>               mp[tmp.x][tmp.y<span class="hljs-number">+1</span>]==<span class="hljs-number">0</span>)<br>                mp[tmp.x][tmp.y]=<span class="hljs-number">0</span>;<span class="hljs-comment">//树死亡</span><br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=m;j++)<br>            <span class="hljs-keyword">if</span>(mp[i][j]==<span class="hljs-number">2</span>)ans++;<br>    cout&lt;&lt;ans&lt;&lt;endl;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-number">0</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>),cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-built_in">solve</span>();<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>题解</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【题解】9/27提高组模拟</title>
    <link href="/2025/09/27/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%919-27%E6%8F%90%E9%AB%98%E7%BB%84%E6%A8%A1%E6%8B%9F/"/>
    <url>/2025/09/27/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%919-27%E6%8F%90%E9%AB%98%E7%BB%84%E6%A8%A1%E6%8B%9F/</url>
    
    <content type="html"><![CDATA[<h2 id="A-USACO2-3-零的数列-Zero-Sum"><a href="#A-USACO2-3-零的数列-Zero-Sum" class="headerlink" title="A.[USACO2.3] 零的数列 Zero Sum"></a>A.[USACO2.3] 零的数列 Zero Sum</h2><p><a href="http://luogu.com.cn/problem/P1473">link</a></p><h3 id="正解"><a href="#正解" class="headerlink" title="正解"></a>正解</h3><p>这道题就是DFS为主，搜索每个数中间符号的情况。</p><p>在check中计算表达式的值，若为0就输出串。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// Problem:Luogu P1473 [USACO2.3] 零的数列 Zero Sum</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> n;<br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">check</span><span class="hljs-params">(string s)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">char</span> p=<span class="hljs-string">&#x27;+&#x27;</span>;<br>    <span class="hljs-type">int</span> sum=<span class="hljs-number">0</span>,tmp=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;s.<span class="hljs-built_in">size</span>();i++)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(s[i]==<span class="hljs-string">&#x27; &#x27;</span>)<span class="hljs-keyword">continue</span>;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(s[i]&gt;=<span class="hljs-string">&#x27;0&#x27;</span>&amp;&amp;s[i]&lt;=<span class="hljs-string">&#x27;9&#x27;</span>)tmp=tmp*<span class="hljs-number">10</span>+s[i]-<span class="hljs-string">&#x27;0&#x27;</span>;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(s[i]==<span class="hljs-string">&#x27;+&#x27;</span>)<br>        &#123;<br>            <span class="hljs-keyword">if</span>(p==<span class="hljs-string">&#x27;+&#x27;</span>)sum+=tmp;<br>            <span class="hljs-keyword">else</span> sum-=tmp;<br>            tmp=<span class="hljs-number">0</span>;<br>            p=<span class="hljs-string">&#x27;+&#x27;</span>;<br>        &#125;<br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            <span class="hljs-keyword">if</span>(p==<span class="hljs-string">&#x27;+&#x27;</span>)sum+=tmp;<br>            <span class="hljs-keyword">else</span> sum-=tmp;<br>            tmp=<span class="hljs-number">0</span>;<br>            p=<span class="hljs-string">&#x27;-&#x27;</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">if</span>(p==<span class="hljs-string">&#x27;+&#x27;</span>)sum+=tmp;<br>    <span class="hljs-keyword">else</span> sum-=tmp;<br>    <span class="hljs-keyword">return</span> (sum==<span class="hljs-number">0</span>);<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-type">int</span> k,string s)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">if</span>(k==n)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">check</span>(s))<span class="hljs-built_in">puts</span>(s.<span class="hljs-built_in">c_str</span>());<br>        <span class="hljs-keyword">return</span> ;<br>    &#125;<br>    <span class="hljs-type">int</span> sp=<span class="hljs-number">2</span>*k<span class="hljs-number">-1</span>;<br>    <span class="hljs-built_in">dfs</span>(k<span class="hljs-number">+1</span>,s);<br>    s[sp]=<span class="hljs-string">&#x27;+&#x27;</span>;<br>    <span class="hljs-built_in">dfs</span>(k<span class="hljs-number">+1</span>,s);<br>    s[sp]=<span class="hljs-string">&#x27;-&#x27;</span>;<br>    <span class="hljs-built_in">dfs</span>(k<span class="hljs-number">+1</span>,s);<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    cin&gt;&gt;n;<br>    string s=<span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>    &#123;<br>        s+=<span class="hljs-built_in">to_string</span>(i);<br>        <span class="hljs-keyword">if</span>(i!=n)s+=<span class="hljs-string">&#x27; &#x27;</span>;<br>    &#125;<br>    <span class="hljs-built_in">dfs</span>(<span class="hljs-number">1</span>,s);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="乱解"><a href="#乱解" class="headerlink" title="乱解"></a>乱解</h3><p>以上这些只是正解的手法。</p><p>根据我们敏锐的视觉，我们可以发现$3 \leq n \leq 9$（🤯）</p><p>根据</p><blockquote><p>打表出省一</p></blockquote><p>的理念，我们可以进行打表啊！</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    cin&gt;&gt;n;<br>    <span class="hljs-keyword">switch</span>(n)<br>    &#123;<br>        <span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:cout&lt;&lt;<span class="hljs-string">&quot;1+2-3&quot;</span>;<span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-number">4</span>:cout&lt;&lt;<span class="hljs-string">&quot;1-2-3+4&quot;</span>;<span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-number">5</span>:cout&lt;&lt;<span class="hljs-string">&quot;1 2-3-4-5&quot;</span>;<span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-number">6</span>:cout&lt;&lt;<span class="hljs-string">&quot;1 2+3-4-5-6&quot;</span>;<span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-number">7</span>:<br>cout&lt;&lt;<span class="hljs-string">&quot;1+2-3+4-5-6+7\n&quot;</span>;<br>cout&lt;&lt;<span class="hljs-string">&quot;1+2-3-4+5+6-7\n&quot;</span>;<br>cout&lt;&lt;<span class="hljs-string">&quot;1-2 3+4+5+6+7\n&quot;</span>;<br>cout&lt;&lt;<span class="hljs-string">&quot;1-2 3-4 5+6 7\n&quot;</span>;<br>cout&lt;&lt;<span class="hljs-string">&quot;1-2+3+4-5+6-7\n&quot;</span>;<br>cout&lt;&lt;<span class="hljs-string">&quot;1-2-3-4-5+6+7\n&quot;</span>;<br><span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-number">8</span>:<br>        &#123;<br>        cout&lt;&lt;<span class="hljs-string">&quot;1 2-3 4-5 6+7 8\n&quot;</span>;<br>cout&lt;&lt;<span class="hljs-string">&quot;1+2 3-4 5+6+7+8\n&quot;</span>;<br>cout&lt;&lt;<span class="hljs-string">&quot;1+2+3+4-5-6-7+8\n&quot;</span>;<br>cout&lt;&lt;<span class="hljs-string">&quot;1+2+3-4+5-6+7-8\n&quot;</span>;<br>cout&lt;&lt;<span class="hljs-string">&quot;1+2-3+4+5+6-7-8\n&quot;</span>;<br>cout&lt;&lt;<span class="hljs-string">&quot;1+2-3-4-5-6+7+8\n&quot;</span>;<br>cout&lt;&lt;<span class="hljs-string">&quot;1-2 3-4+5+6+7+8\n&quot;</span>;<br>cout&lt;&lt;<span class="hljs-string">&quot;1-2+3-4-5+6-7+8\n&quot;</span>;<br>cout&lt;&lt;<span class="hljs-string">&quot;1-2-3+4+5-6-7+8\n&quot;</span>;<br>cout&lt;&lt;<span class="hljs-string">&quot;1-2-3+4-5+6+7-8\n&quot;</span>;<br>        <span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-keyword">case</span> <span class="hljs-number">9</span>:<br>cout&lt;&lt;<span class="hljs-string">&quot;1 2+3 4-5 6-7+8+9\n&quot;</span>;<br>cout&lt;&lt;<span class="hljs-string">&quot;1 2+3+4-5-6-7+8-9\n&quot;</span>;<br>cout&lt;&lt;<span class="hljs-string">&quot;1 2+3-4 5+6+7+8+9\n&quot;</span>;<br>cout&lt;&lt;<span class="hljs-string">&quot;1 2+3-4+5-6+7-8-9\n&quot;</span>;<br>cout&lt;&lt;<span class="hljs-string">&quot;1 2-3+4+5 6-7 8+9\n&quot;</span>;<br>cout&lt;&lt;<span class="hljs-string">&quot;1 2-3+4+5+6-7-8-9\n&quot;</span>;<br>cout&lt;&lt;<span class="hljs-string">&quot;1 2-3-4-5+6-7-8+9\n&quot;</span>;<br>cout&lt;&lt;<span class="hljs-string">&quot;1 2-3-4-5-6+7+8-9\n&quot;</span>;<br>cout&lt;&lt;<span class="hljs-string">&quot;1+2-3 4-5 6+7 8+9\n&quot;</span>;<br>cout&lt;&lt;<span class="hljs-string">&quot;1-2 3-4-5 6-7+8 9\n&quot;</span>;<br>cout&lt;&lt;<span class="hljs-string">&quot;1-2-3 4+5+6+7+8+9\n&quot;</span>;<br><span class="hljs-keyword">break</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>（模拟赛上因为这个忘记加换行被肘飞了）</p><h2 id="B-FJCPC-2025-割点"><a href="#B-FJCPC-2025-割点" class="headerlink" title="B. [FJCPC 2025] 割点"></a>B. [FJCPC 2025] 割点</h2><p><a href="http://luogu.com.cn/problem/P13097">link</a></p><p>简单来说，这道题就是三个条件，让我们构造一个图，让它满足下面的条件：</p><ul><li>节点$1$必须是割点，$n$号节点不是割点。</li><li>对于中间的节点（$2$到$n-1$），给定一个$01$串指定这个节点是不是割点（第$i$个字符是$1$代表第$i$号节点是割点，反之不是）</li><li>图的度数序列需要满足从$1$到$n$为非升序。</li></ul><p>（说白了，我白说了，我不会做……）</p><p>代码就等我思考114514以后再放吧</p><h2 id="C-「C-E-L-U-01」族谱树"><a href="#C-「C-E-L-U-01」族谱树" class="headerlink" title="C.「C.E.L.U-01」族谱树"></a>C.「C.E.L.U-01」族谱树</h2><p><a href="http://luogu.com.cn/problem/P7103">link</a></p><p>求lca的方法有倍增和tarjan，因为tarjan的时间复杂度够，而倍增肯定会tle</p><p>我们在dfs时就统计答案，这样就可以$O(n)$（？）处理出每个深度的答案</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-type">int</span> u,<span class="hljs-type">int</span> fa)</span></span><br><span class="hljs-function"></span>&#123;<br>dep[u]=dep[fa]<span class="hljs-number">+1</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=head[u];i;i=nxt[i])<br><span class="hljs-built_in">dfs</span>(v[i],u),f[v[i]]=u;<span class="hljs-comment">//父亲</span><br><span class="hljs-keyword">if</span>(ans[dep[u]]==<span class="hljs-number">0</span>)ans[dep[u]]=u;<br><span class="hljs-keyword">else</span> ans[dep[u]]=<span class="hljs-built_in">find</span>(ans[dep[u]]);<br>&#125;<br></code></pre></td></tr></table></figure><p>后面两行就是求当前深度的lca</p><p><code>ans[dep[u]]==0</code>是判断这个深度是不是还没有记录答案，那就是当前节点$u$了</p><p>否则就是<code>find(ans[dep[u]])</code></p><p>注意要用上快读，不要偷懒用vector，这题卡时间的！</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// Problem:Luogu P7103 「C.E.L.U-01」族谱树</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> MAXN=<span class="hljs-number">5000010</span>;<br><span class="hljs-type">int</span> head[MAXN],nxt[MAXN],v[MAXN];<br><span class="hljs-type">int</span> f[MAXN],ans[MAXN],dep[MAXN];<br><span class="hljs-type">bool</span> vis[MAXN];<br><span class="hljs-type">int</span> n,q;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">read</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">register</span> <span class="hljs-type">int</span> x=<span class="hljs-number">0</span>,f=<span class="hljs-number">1</span>;<br><span class="hljs-type">char</span> c=<span class="hljs-built_in">getchar</span>();<br><span class="hljs-keyword">while</span>(!<span class="hljs-built_in">isdigit</span>(c))&#123;<span class="hljs-keyword">if</span>(c==<span class="hljs-string">&#x27;-&#x27;</span>)f=<span class="hljs-number">-1</span>;c=<span class="hljs-built_in">getchar</span>();&#125;<br><span class="hljs-keyword">while</span>(<span class="hljs-built_in">isdigit</span>(c))&#123;x=(x&lt;&lt;<span class="hljs-number">3</span>)+(x&lt;&lt;<span class="hljs-number">1</span>)+(c^<span class="hljs-number">48</span>);c=<span class="hljs-built_in">getchar</span>();&#125;<br><span class="hljs-keyword">return</span> x*f;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">find</span><span class="hljs-params">(<span class="hljs-keyword">register</span> <span class="hljs-type">int</span> i)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span>(f[i]==i)<span class="hljs-keyword">return</span> i;<br><span class="hljs-keyword">return</span> f[i]=<span class="hljs-built_in">find</span>(f[i]);<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-keyword">register</span> <span class="hljs-type">int</span> u,<span class="hljs-keyword">register</span> <span class="hljs-type">int</span> fa)</span></span><br><span class="hljs-function"></span>&#123;<br>dep[u]=dep[fa]<span class="hljs-number">+1</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=head[u];i;i=nxt[i])<br><span class="hljs-built_in">dfs</span>(v[i],u),f[v[i]]=u;<br><span class="hljs-keyword">if</span>(ans[dep[u]]==<span class="hljs-number">0</span>)ans[dep[u]]=u;<br><span class="hljs-keyword">else</span> ans[dep[u]]=<span class="hljs-built_in">find</span>(ans[dep[u]]);<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>n=<span class="hljs-built_in">read</span>(),q=<span class="hljs-built_in">read</span>();<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">register</span> <span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>&#123;<br>f[i]=i;<br><span class="hljs-type">int</span> u=<span class="hljs-built_in">read</span>();<br>v[i]=i,nxt[i]=head[u],head[u]=i;<br>&#125;<br><span class="hljs-built_in">dfs</span>(<span class="hljs-number">1</span>,<span class="hljs-number">0</span>);<br><span class="hljs-keyword">while</span>(q--)<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>,ans[<span class="hljs-built_in">read</span>()]);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>（其实中间的<code>register</code>没啥用处，应该是可以删掉的）</p><h2 id="D-HEOI2016-TJOI2016-树"><a href="#D-HEOI2016-TJOI2016-树" class="headerlink" title="D.[HEOI2016&#x2F;TJOI2016] 树"></a>D.[HEOI2016&#x2F;TJOI2016] 树</h2><p><a href="http://luogu.com.cn/problem/P4092">link</a></p><p>通过记录时间倒着来推</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> MAXN=<span class="hljs-number">100010</span>;<br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">option</span><br>&#123;<br><span class="hljs-type">bool</span> type;<br><span class="hljs-type">int</span> id,ans;<br>&#125;opt[MAXN];<br>vector &lt;<span class="hljs-type">int</span>&gt; g[MAXN];<br><span class="hljs-type">int</span> color[MAXN],f[MAXN],ff[MAXN];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-type">int</span> u,<span class="hljs-type">int</span> fa)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span>(color[u])f[u]=u;<br><span class="hljs-keyword">else</span> f[u]=fa;<br>ff[u]=fa;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> v:g[u])<br><span class="hljs-keyword">if</span>(v!=fa)<span class="hljs-built_in">dfs</span>(v,u);<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">find</span><span class="hljs-params">(<span class="hljs-type">int</span> i)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span>(f[i]==i)<span class="hljs-keyword">return</span> i;<br><span class="hljs-keyword">return</span> f[i]=<span class="hljs-built_in">find</span>(f[i]);<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-number">0</span>);<br>cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>),cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br><span class="hljs-type">int</span> n,m;<br>cin&gt;&gt;n&gt;&gt;m;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;n;i++)<br>&#123;<br><span class="hljs-type">int</span> u,v;<br>cin&gt;&gt;u&gt;&gt;v;<br>g[u].<span class="hljs-built_in">push_back</span>(v);<br>g[v].<span class="hljs-built_in">push_back</span>(u);<br>&#125;<br>color[<span class="hljs-number">1</span>]=<span class="hljs-number">1</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)<br>&#123;<br><span class="hljs-type">char</span> op;<br>cin&gt;&gt;op&gt;&gt;opt[i].id;<br>opt[i].type=(op==<span class="hljs-string">&#x27;C&#x27;</span>);<br><span class="hljs-keyword">if</span>(op==<span class="hljs-string">&#x27;C&#x27;</span>)color[opt[i].id]++;<br>&#125;<br><span class="hljs-built_in">dfs</span>(<span class="hljs-number">1</span>,<span class="hljs-number">0</span>);<br>ff[<span class="hljs-number">1</span>]=<span class="hljs-number">1</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=m;i&gt;=<span class="hljs-number">1</span>;i--)<br><span class="hljs-keyword">if</span>(opt[i].type)<br>&#123;<br>color[opt[i].id]--;<br><span class="hljs-keyword">if</span>(!color[opt[i].id])f[opt[i].id]=ff[opt[i].id];<br>&#125;<br><span class="hljs-keyword">else</span> opt[i].ans=<span class="hljs-built_in">find</span>(opt[i].id);<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)<br><span class="hljs-keyword">if</span>(!opt[i].type)<br>cout&lt;&lt;opt[i].ans&lt;&lt;<span class="hljs-string">&#x27;\n&#x27;</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>题解</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【题解】9/27入门组模拟</title>
    <link href="/2025/09/27/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%919-27%E5%85%A5%E9%97%A8%E7%BB%84%E6%A8%A1%E6%8B%9F/"/>
    <url>/2025/09/27/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%919-27%E5%85%A5%E9%97%A8%E7%BB%84%E6%A8%A1%E6%8B%9F/</url>
    
    <content type="html"><![CDATA[<p>虽然这次题还算<strong>简单</strong>，我认为我做的已经够了。</p><h2 id="A-COCI-2006-2007-2-ABC"><a href="#A-COCI-2006-2007-2-ABC" class="headerlink" title="A.[COCI 2006&#x2F;2007 #2] ABC"></a>A.[COCI 2006&#x2F;2007 #2] ABC</h2><p>这题在模拟前我就已经做过了，这道题是个$\text{} \color{red}{入门}$。</p><p><a href="http://luogu.com.cn/problem/P4414">link</a></p><p>直接按照题意模拟即可（这份代码是我去年昨天做的……）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> a[<span class="hljs-number">6</span>];<span class="hljs-built_in">memset</span>(a,<span class="hljs-number">0</span>,<span class="hljs-built_in">sizeof</span>(a));<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=<span class="hljs-number">3</span>;i++)cin&gt;&gt;a[i];<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=<span class="hljs-number">3</span><span class="hljs-number">-1</span>;i++)<br>&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=<span class="hljs-number">3</span>;j++)<br>&#123;<br><span class="hljs-keyword">if</span>(a[j]&lt;a[j<span class="hljs-number">+1</span>])<span class="hljs-built_in">swap</span>(a[j],a[j<span class="hljs-number">+1</span>]);<br>&#125;<span class="hljs-comment">//细节冒泡排序</span><br>&#125;<br><span class="hljs-type">int</span> A=a[<span class="hljs-number">3</span>],B=a[<span class="hljs-number">2</span>],C=a[<span class="hljs-number">1</span>];<br>string x;<br>cin&gt;&gt;x;<br><span class="hljs-keyword">if</span>(x==<span class="hljs-string">&quot;ABC&quot;</span>)<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d %d %d&quot;</span>,A,B,C);<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(x==<span class="hljs-string">&quot;ACB&quot;</span>)<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d %d %d&quot;</span>,A,C,B);<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(x==<span class="hljs-string">&quot;BCA&quot;</span>)<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d %d %d&quot;</span>,B,C,A);<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(x==<span class="hljs-string">&quot;BAC&quot;</span>)<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d %d %d&quot;</span>,B,A,C);<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(x==<span class="hljs-string">&quot;CAB&quot;</span>)<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d %d %d&quot;</span>,C,A,B);<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(x==<span class="hljs-string">&quot;CBA&quot;</span>)<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d %d %d&quot;</span>,C,B,A);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="B-USACO1-3-滑雪课程设计Ski-Course-Design"><a href="#B-USACO1-3-滑雪课程设计Ski-Course-Design" class="headerlink" title="B.[USACO1.3] 滑雪课程设计Ski Course Design"></a>B.[USACO1.3] 滑雪课程设计Ski Course Design</h2><p><a href="http://luogu.com.cn/problem/P3650">link</a></p><p>这题是个$\text{} \color{orange}{普及-}$，用枚举的方法就可解决。</p><p>就是遍历找出最低的海拔，然后枚举最低的海拔$L$即可，$n$很小的，只有$10 ^ 3$。</p><ul><li><p>若第$i$座山的海拔低于$L$，就加上$(L-a_i)^2$。</p></li><li><p>若第$i$座善的海拔与$L$的差</p></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// Problem:Luogu P3650 [USACO1.3] 滑雪课程设计Ski Course Design</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> n,a[<span class="hljs-number">1010</span>],ans=<span class="hljs-number">0x3f3f3f3f</span>;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-number">0</span>);<br>cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>),cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>cin&gt;&gt;n;<br><span class="hljs-type">int</span> maxn=<span class="hljs-number">0</span>,minn=<span class="hljs-number">0x3f3f3f3f</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>&#123;<br>cin&gt;&gt;a[i];<br><span class="hljs-keyword">if</span>(a[i]&gt;maxn)maxn=a[i];<br><span class="hljs-keyword">if</span>(a[i]&lt;minn)minn=a[i];<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> l=<span class="hljs-number">0</span>;l&lt;=maxn<span class="hljs-number">+1</span>;l++)<br>&#123;<br><span class="hljs-type">int</span> sum=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>&#123;<br><span class="hljs-keyword">if</span>(a[i]&lt;l)sum+=(l-a[i])*(l-a[i]);<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(a[i]&gt;l<span class="hljs-number">+17</span>)sum+=(a[i]-l<span class="hljs-number">-17</span>)*(a[i]-l<span class="hljs-number">-17</span>);<br>&#125;<br>ans=<span class="hljs-built_in">min</span>(ans,sum);<br>&#125;<br>cout&lt;&lt;ans;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="C-Roy-October之取石子"><a href="#C-Roy-October之取石子" class="headerlink" title="C.Roy&amp;October之取石子"></a>C.Roy&amp;October之取石子</h2><p><a href="http://luogu.com.cn/problem/P4018">link</a></p><p>通过找规律的方法我们可以知道当$n\ \text{mod}\ 6 &#x3D; 0$的时候结果就是Roy胜。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> t;<br>    cin&gt;&gt;t;<br>    <span class="hljs-keyword">while</span>(t--)<br>    &#123;<br>        <span class="hljs-type">int</span> n;<br>        cin&gt;&gt;n;<br>        <span class="hljs-keyword">if</span>(n%<span class="hljs-number">6</span>)<span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;October wins!&quot;</span>);<br>        <span class="hljs-keyword">else</span> <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Roy wins!&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="D-统计重复个数"><a href="#D-统计重复个数" class="headerlink" title="D.统计重复个数"></a>D.统计重复个数</h2><p><a href="http://luogu.com.cn/problem/P10976">link</a></p><p>这道题暴力就可以完成，但是作为一个模拟赛的题目，它只有一个测试点而且多组数据，<del>没法骗分</del></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// Problem:Luogu P10976 统计重复个数</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> ll;<br>ll n1,n2,ans;<br>string s1,s2,str1,str2;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">while</span>(cin&gt;&gt;s2&gt;&gt;n2&gt;&gt;s1&gt;&gt;n1)<br>&#123;<br>str1=str2=<span class="hljs-string">&quot;&quot;</span>;<br><span class="hljs-keyword">for</span>(ll i=<span class="hljs-number">1</span>;i&lt;=n1;i++)str1+=s1;<br>str2=s2;<br>ll len1=str<span class="hljs-number">1.</span><span class="hljs-built_in">size</span>(),len2=str<span class="hljs-number">2.</span><span class="hljs-built_in">size</span>(),j=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(ll i=<span class="hljs-number">0</span>;i&lt;len1;i++)<br><span class="hljs-keyword">if</span>(str1[i]==str2[j])<br><span class="hljs-keyword">if</span>(j<span class="hljs-number">+1</span>==len2)ans++,j=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">else</span> j++;<br>cout&lt;&lt;ans/n2&lt;&lt;<span class="hljs-string">&#x27;\n&#x27;</span>;<br>ans=<span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>题解</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【学习笔记】模板综合</title>
    <link href="/2025/09/24/%E3%80%90%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E3%80%91%E6%A8%A1%E6%9D%BF%E7%BB%BC%E5%90%88/"/>
    <url>/2025/09/24/%E3%80%90%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E3%80%91%E6%A8%A1%E6%9D%BF%E7%BB%BC%E5%90%88/</url>
    
    <content type="html"><![CDATA[<p>有一些还没有写完呢qwq</p><p>这里是记录所有学过的模板的（好像还不会背啊）</p><h1 id="Floyd"><a href="#Floyd" class="headerlink" title="Floyd"></a>Floyd</h1><p><a href="https://www.luogu.com.cn/problem/B3647">link</a></p><p>给出一张由 $n$ 个点 $m$ 条边组成的无向图。</p><p>求出所有点对 $(i,j)$ 之间的最短路径。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//Floyd</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> n,m,dis[<span class="hljs-number">110</span>][<span class="hljs-number">110</span>];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">floyd</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> k=<span class="hljs-number">1</span>;k&lt;=n;k++)<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=n;j++)<br>dis[i][j]=<span class="hljs-built_in">min</span>(dis[i][j],dis[i][k]+dis[k][j]);<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);<br><span class="hljs-built_in">memset</span>(dis,<span class="hljs-number">0x3f</span>,<span class="hljs-built_in">sizeof</span>(dis));<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)<br>&#123;<br><span class="hljs-type">int</span> u,v,w;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d%d&quot;</span>,&amp;u,&amp;v,&amp;w);<br>dis[u][v]=dis[v][u]=<span class="hljs-built_in">min</span>(dis[u][v],w);<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)dis[i][i]=<span class="hljs-number">0</span>;<br><span class="hljs-built_in">floyd</span>();<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=n;j++)<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d &quot;</span>,dis[i][j]);<br><span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;&quot;</span>);<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="缩点"><a href="#缩点" class="headerlink" title="缩点"></a>缩点</h1><p><a href="https://www.luogu.com.cn/problem/P3387">link</a></p><p>给定一个 $n$ 个点 $m$ 条边有向图，每个点有一个权值，求一条路径，使路径经过的点权值之和最大。你只需要求出这个权值和。</p><p>允许多次经过一条边或者一个点，但是，重复经过的点，权值只计算一次。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//缩点</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> MAXN=<span class="hljs-number">10010</span>,MAXM=<span class="hljs-number">100010</span>;<br><span class="hljs-type">int</span> n,m;<br>pair &lt;<span class="hljs-type">int</span>,<span class="hljs-type">int</span>&gt; edge[MAXM];<br>vector &lt;<span class="hljs-type">int</span>&gt; g[MAXN],g1[MAXN];<br><span class="hljs-type">int</span> dfn[MAXN],low[MAXN],idx,stk[MAXN],top,scc[MAXN],w[MAXN];<br><span class="hljs-type">bool</span> instk[MAXN];<br><span class="hljs-type">int</span> indeg[MAXN],dp[MAXN],ans;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">tarjan</span><span class="hljs-params">(<span class="hljs-type">int</span> u)</span></span><br><span class="hljs-function"></span>&#123;<br>dfn[u]=low[u]=++idx;<br>stk[++top]=u;<br>instk[u]=<span class="hljs-number">1</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> v:g[u])<br>&#123;<br><span class="hljs-keyword">if</span>(!dfn[v])<br><span class="hljs-built_in">tarjan</span>(v),low[u]=<span class="hljs-built_in">min</span>(low[u],low[v]);<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(instk[v])low[u]=<span class="hljs-built_in">min</span>(low[u],dfn[v]);<br>&#125;<br><span class="hljs-keyword">if</span>(dfn[u]==low[u])<br>&#123;<br><span class="hljs-keyword">do</span><br>&#123;<br>instk[stk[top]]=<span class="hljs-number">0</span>;<br>scc[stk[top]]=u;<br><span class="hljs-keyword">if</span>(stk[top]!=u)w[u]+=w[stk[top]];<br>&#125;<span class="hljs-keyword">while</span>(stk[top--]!=u);<br>&#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">topo</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>queue &lt;<span class="hljs-type">int</span>&gt; q;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br><span class="hljs-keyword">if</span>(i==scc[i]&amp;&amp;indeg[i]==<span class="hljs-number">0</span>)<br>q.<span class="hljs-built_in">push</span>(i),dp[i]=w[i];<br><span class="hljs-keyword">while</span>(!q.<span class="hljs-built_in">empty</span>())<br>&#123;<br><span class="hljs-type">int</span> u=q.<span class="hljs-built_in">front</span>();<br>q.<span class="hljs-built_in">pop</span>();<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> v:g1[u])<br>&#123;<br>dp[v]=<span class="hljs-built_in">max</span>(dp[v],dp[u]+w[v]);<br>indeg[v]--;<br><span class="hljs-keyword">if</span>(indeg[v]==<span class="hljs-number">0</span>)q.<span class="hljs-built_in">push</span>(v);<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;w[i]);<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)<br>&#123;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d&quot;</span>,&amp;edge[i].first,&amp;edge[i].second);<br>g[edge[i].first].<span class="hljs-built_in">push_back</span>(edge[i].second);<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br><span class="hljs-keyword">if</span>(!dfn[i])<span class="hljs-built_in">tarjan</span>(i);<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)<br>&#123;<br><span class="hljs-type">int</span> u=scc[edge[i].first],v=scc[edge[i].second];<br><span class="hljs-keyword">if</span>(u!=v)<br>g1[u].<span class="hljs-built_in">push_back</span>(v),indeg[v]++;<br>&#125;<br><span class="hljs-built_in">topo</span>();<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>ans=<span class="hljs-built_in">max</span>(ans,dp[i]);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,ans);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="ST-表-RMQ-问题"><a href="#ST-表-RMQ-问题" class="headerlink" title="ST 表 &amp; RMQ 问题"></a>ST 表 &amp; RMQ 问题</h1><p><a href="https://www.luogu.com.cn/problem/P3865">link</a></p><p>给定一个长度为 $N$ 的数列，和 $ M $ 次询问，求出每一次询问的区间内数字的最大值。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//ST表</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> lg[<span class="hljs-number">100010</span>],f[<span class="hljs-number">100010</span>][<span class="hljs-number">30</span>],n,m;<br><span class="hljs-function"><span class="hljs-keyword">inline</span> <span class="hljs-type">int</span> <span class="hljs-title">read</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> x=<span class="hljs-number">0</span>,f=<span class="hljs-number">1</span>;<span class="hljs-type">char</span> ch=<span class="hljs-built_in">getchar</span>();<br><span class="hljs-keyword">while</span> (ch&lt;<span class="hljs-string">&#x27;0&#x27;</span>||ch&gt;<span class="hljs-string">&#x27;9&#x27;</span>)&#123;<span class="hljs-keyword">if</span> (ch==<span class="hljs-string">&#x27;-&#x27;</span>) f=<span class="hljs-number">-1</span>;ch=<span class="hljs-built_in">getchar</span>();&#125;<br><span class="hljs-keyword">while</span> (ch&gt;=<span class="hljs-string">&#x27;0&#x27;</span>&amp;&amp;ch&lt;=<span class="hljs-string">&#x27;9&#x27;</span>)&#123;x=x*<span class="hljs-number">10</span>+ch<span class="hljs-number">-48</span>;ch=<span class="hljs-built_in">getchar</span>();&#125;<br><span class="hljs-keyword">return</span> x*f;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>n=<span class="hljs-built_in">read</span>(),m=<span class="hljs-built_in">read</span>();<br>lg[<span class="hljs-number">1</span>]=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">2</span>;i&lt;=n;i++)lg[i]=lg[i/<span class="hljs-number">2</span>]<span class="hljs-number">+1</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>f[i][<span class="hljs-number">0</span>]=<span class="hljs-built_in">read</span>();<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=lg[n];j++)<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n-(<span class="hljs-number">1</span>&lt;&lt;j)<span class="hljs-number">+1</span>;i++)<br>f[i][j]=<span class="hljs-built_in">max</span>(f[i][j<span class="hljs-number">-1</span>],f[i+(<span class="hljs-number">1</span>&lt;&lt;(j<span class="hljs-number">-1</span>))][j<span class="hljs-number">-1</span>]);<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)<br>&#123;<br><span class="hljs-type">int</span> l=<span class="hljs-built_in">read</span>(),r=<span class="hljs-built_in">read</span>(),k=lg[r-l<span class="hljs-number">+1</span>];<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>,<span class="hljs-built_in">max</span>(f[l][k],f[r-(<span class="hljs-number">1</span>&lt;&lt;k)<span class="hljs-number">+1</span>][k]));<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="负环"><a href="#负环" class="headerlink" title="负环"></a>负环</h1><p><a href="http://luogu.com.cn/problem/P3385">link</a></p><p>给定一个 $n$ 个点的有向图，请求出图中是否存在<strong>从顶点 $1$ 出发能到达</strong>的负环。</p><p>负环的定义是：一条边权之和为负数的回路。</p><p>输入的第一行是一个整数 $T$，表示测试数据的组数。对于每组数据的格式如下：</p><p>第一行有两个整数，分别表示图的点数 $n$ 和接下来给出边信息的条数 $m$。</p><p>接下来 $m$ 行，每行三个整数 $u, v, w$。</p><ul><li>若 $w \geq 0$，则表示存在一条从 $u$ 至 $v$ 边权为 $w$ 的边，还存在一条从 $v$ 至 $u$ 边权为 $w$ 的边。</li><li>若 $w &lt; 0$，则只表示存在一条从 $u$ 至 $v$ 边权为 $w$ 的边。</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//SPFA</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> MAXN=<span class="hljs-number">2010</span>;<br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">edge</span><br>&#123;<br><span class="hljs-type">int</span> v,w;<br>&#125;;<br>vector &lt;edge&gt; g[MAXN];<br><span class="hljs-type">int</span> cnt[MAXN],dis[MAXN],n,m;<br><span class="hljs-type">bool</span> inq[MAXN];<br>queue &lt;<span class="hljs-type">int</span>&gt; q;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">spfa</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">while</span>(!q.<span class="hljs-built_in">empty</span>())q.<span class="hljs-built_in">pop</span>();<br><span class="hljs-built_in">memset</span>(cnt,<span class="hljs-number">0</span>,<span class="hljs-built_in">sizeof</span>(cnt));<br><span class="hljs-built_in">memset</span>(dis,<span class="hljs-number">0x3f</span>,<span class="hljs-built_in">sizeof</span>(dis));<br><span class="hljs-built_in">memset</span>(inq,<span class="hljs-number">0</span>,<span class="hljs-built_in">sizeof</span>(inq));<br>dis[<span class="hljs-number">1</span>]=<span class="hljs-number">0</span>;<br>inq[<span class="hljs-number">1</span>]=<span class="hljs-number">1</span>;<br>cnt[<span class="hljs-number">1</span>]=<span class="hljs-number">1</span>;<br>q.<span class="hljs-built_in">push</span>(<span class="hljs-number">1</span>);<br><span class="hljs-keyword">while</span>(!q.<span class="hljs-built_in">empty</span>())<br>&#123;<br><span class="hljs-type">int</span> u=q.<span class="hljs-built_in">front</span>();<br>q.<span class="hljs-built_in">pop</span>();<br>inq[u]=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> tmp:g[u])<br>&#123;<br><span class="hljs-type">int</span> v=tmp.v,w=tmp.w;<br><span class="hljs-keyword">if</span>(dis[v]&gt;dis[u]+w)<br>&#123;<br>dis[v]=dis[u]+w;<br><span class="hljs-keyword">if</span>(!inq[v])<br>&#123;<br>cnt[v]++;<br><span class="hljs-keyword">if</span>(cnt[v]&gt;n)<br>&#123;<br><span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;YES&quot;</span>);<br><span class="hljs-keyword">return</span> ;<br>&#125;<br>q.<span class="hljs-built_in">push</span>(v);<br>inq[v]=<span class="hljs-number">1</span>;<br>&#125;<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;NO&quot;</span>);<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> t;<br>cin&gt;&gt;t;<br><span class="hljs-keyword">while</span>(t--)<br>&#123;<br>cin&gt;&gt;n&gt;&gt;m;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)g[i].<span class="hljs-built_in">clear</span>();<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)<br>&#123;<br><span class="hljs-type">int</span> u,v,w;<br>cin&gt;&gt;u&gt;&gt;v&gt;&gt;w;<br>g[u].<span class="hljs-built_in">push_back</span>(&#123;v,w&#125;);<br><span class="hljs-keyword">if</span>(w&gt;=<span class="hljs-number">0</span>)g[v].<span class="hljs-built_in">push_back</span>(&#123;u,w&#125;);<br>&#125;<br><span class="hljs-built_in">spfa</span>();<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="快速幂"><a href="#快速幂" class="headerlink" title="快速幂"></a>快速幂</h1><p><a href="https://www.luogu.com.cn/problem/P1226">link</a></p><p>给你三个整数 $a,b,p$，求 $a^b \bmod p$。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//快速幂</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-type">int</span> p;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">qpow</span><span class="hljs-params">(<span class="hljs-type">int</span> a,<span class="hljs-type">int</span> b)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> ans=<span class="hljs-number">1</span>,ba=a;<br><span class="hljs-keyword">while</span>(b)<br>&#123;<br><span class="hljs-keyword">if</span>(b&amp;<span class="hljs-number">1</span>)ans*=ba;<br>ba*=ba;<br>ans%=p,ba%=p;<br>b&gt;&gt;=<span class="hljs-number">1</span>;<br>&#125;<br><span class="hljs-keyword">return</span> ans;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> a,b;<br>cin&gt;&gt;a&gt;&gt;b&gt;&gt;p;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d^%d mod %d=%d&quot;</span>,a,b,p,<span class="hljs-built_in">qpow</span>(a,b)%p);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="并查集"><a href="#并查集" class="headerlink" title="并查集"></a>并查集</h1><p><a href="https://www.luogu.com.cn/problem/P3367">link</a></p><p>第一行包含两个整数 $N,M$ ,表示共有 $N$ 个元素和 $M$ 个操作。</p><p>接下来 $M$ 行，每行包含三个整数 $Z_i,X_i,Y_i$ 。</p><p>当 $Z_i&#x3D;1$ 时，将 $X_i$ 与 $Y_i$ 所在的集合合并。</p><p>当 $Z_i&#x3D;2$ 时，输出 $X_i$ 与 $Y_i$ 是否在同一集合内，是的输出  <code>Y</code> ；否则输出 <code>N</code> 。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//并查集</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> MAXN=<span class="hljs-number">2e5</span>;<br><span class="hljs-type">int</span> f[MAXN],n,q;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">init</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>f[i]=i;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">find</span><span class="hljs-params">(<span class="hljs-type">int</span> i)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span>(f[i]==i)<span class="hljs-keyword">return</span> i;<br><span class="hljs-keyword">return</span> f[i]=<span class="hljs-built_in">find</span>(f[i]);<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">merge</span><span class="hljs-params">(<span class="hljs-type">int</span> i,<span class="hljs-type">int</span> j)</span></span><br><span class="hljs-function"></span>&#123;<br>f[<span class="hljs-built_in">find</span>(j)]=<span class="hljs-built_in">find</span>(i);<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">read</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> x=<span class="hljs-number">0</span>,f=<span class="hljs-number">1</span>;<br><span class="hljs-type">char</span> c=<span class="hljs-built_in">getchar</span>();<br><span class="hljs-keyword">while</span>(c&lt;<span class="hljs-string">&#x27;0&#x27;</span>||c&gt;<span class="hljs-string">&#x27;9&#x27;</span>)<br>&#123;<br><span class="hljs-keyword">if</span>(c==<span class="hljs-string">&#x27;-&#x27;</span>)f=<span class="hljs-number">-1</span>;<br>c=<span class="hljs-built_in">getchar</span>();<br>&#125;<br><span class="hljs-keyword">while</span>(c&gt;=<span class="hljs-string">&#x27;0&#x27;</span>&amp;&amp;c&lt;=<span class="hljs-string">&#x27;9&#x27;</span>)<br>&#123;<br>x=x*<span class="hljs-number">10</span>+c-<span class="hljs-string">&#x27;0&#x27;</span>;<br>c=<span class="hljs-built_in">getchar</span>();<br>&#125;<br><span class="hljs-keyword">return</span> x*f;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>n=<span class="hljs-built_in">read</span>(),q=<span class="hljs-built_in">read</span>();<br><span class="hljs-built_in">init</span>();<br><span class="hljs-keyword">while</span>(q--)<br>&#123;<br><span class="hljs-type">int</span> z=<span class="hljs-built_in">read</span>(),x=<span class="hljs-built_in">read</span>(),y=<span class="hljs-built_in">read</span>();<br><span class="hljs-keyword">if</span>(z==<span class="hljs-number">1</span>)<span class="hljs-built_in">merge</span>(x,y);<br><span class="hljs-keyword">else</span> <br><span class="hljs-keyword">if</span>(<span class="hljs-built_in">find</span>(x)==<span class="hljs-built_in">find</span>(y))<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Y\n&quot;</span>);<br><span class="hljs-keyword">else</span> <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;N\n&quot;</span>);<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="割点"><a href="#割点" class="headerlink" title="割点"></a>割点</h1><p><a href="https://www.luogu.com.cn/problem/P3388">link</a></p><p>给出一个 $n$ 个点，$m$ 条边的无向图，求图的割点。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//割点</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> MAXN=<span class="hljs-number">20010</span>;<br><span class="hljs-type">int</span> low[MAXN],dfn[MAXN],root,cnt,idx,n,m;<br><span class="hljs-type">bool</span> cut[MAXN];<br>vector &lt;<span class="hljs-type">int</span>&gt; g[MAXN];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">tarjan</span><span class="hljs-params">(<span class="hljs-type">int</span> u)</span></span><br><span class="hljs-function"></span>&#123;<br>dfn[u]=low[u]=++idx;<br><span class="hljs-type">int</span> son=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> v:g[u])<br>&#123;<br><span class="hljs-keyword">if</span>(!dfn[v])<br>&#123;<br><span class="hljs-built_in">tarjan</span>(v);<br>low[u]=<span class="hljs-built_in">min</span>(low[u],low[v]);<br><span class="hljs-keyword">if</span>(low[v]&gt;=dfn[u]&amp;&amp;root!=u)<br>&#123;<br>cnt+=!cut[u];<br>cut[u]=<span class="hljs-number">1</span>;<br>&#125;<br><span class="hljs-keyword">if</span>(u==root)son++;<br>&#125;<br><span class="hljs-keyword">else</span> low[u]=<span class="hljs-built_in">min</span>(low[u],dfn[v]);<br>&#125;<br><span class="hljs-keyword">if</span>(u==root&amp;&amp;son&gt;=<span class="hljs-number">2</span>)<br>&#123;<br>cnt+=!cut[u];<br>cut[u]=<span class="hljs-number">1</span>;<br>&#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>cin&gt;&gt;n&gt;&gt;m;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)<br>&#123;<br><span class="hljs-type">int</span> u,v;<br>cin&gt;&gt;u&gt;&gt;v;<br>g[u].<span class="hljs-built_in">push_back</span>(v);<br>g[v].<span class="hljs-built_in">push_back</span>(u);<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br><span class="hljs-keyword">if</span>(!dfn[i])<br>root=i,<span class="hljs-built_in">tarjan</span>(i);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>,cnt);<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br><span class="hljs-keyword">if</span>(cut[i])<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d &quot;</span>,i);<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="最小生成树"><a href="#最小生成树" class="headerlink" title="最小生成树"></a>最小生成树</h1><p><a href="https://www.luogu.com.cn/problem/P3366">link</a></p><p>给出一个无向图，求出最小生成树，如果该图不连通，则输出 <code>orz</code>。</p><h2 id="prim"><a href="#prim" class="headerlink" title="prim"></a>prim</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//最小生成树prim</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> MAXN=<span class="hljs-number">5010</span>;<br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">edge</span><br>&#123;<br><span class="hljs-type">int</span> v,w;<br>&#125;;<br>vector&lt;edge&gt; g[MAXN];<br><span class="hljs-type">bool</span> vis[MAXN];<br><span class="hljs-type">int</span> n,m,cnt,len,dis[MAXN];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">prim</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-built_in">memset</span>(dis,<span class="hljs-number">0x3f</span>,<span class="hljs-built_in">sizeof</span>(dis));<br>dis[<span class="hljs-number">1</span>]=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>&#123;<br><span class="hljs-type">int</span> now=<span class="hljs-number">-1</span>,minn=<span class="hljs-number">0x3f3f3f3f</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=n;j++)<br>&#123;<br><span class="hljs-keyword">if</span>(!vis[j]&amp;&amp;dis[j]&lt;minn)<br>&#123;<br>minn=dis[j];<br>now=j;<br>&#125;<br>&#125;<br><span class="hljs-keyword">if</span>(now==<span class="hljs-number">-1</span>)<span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>vis[now]=<span class="hljs-number">1</span>;<br>len+=dis[now];<br>cnt++;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;g[now].<span class="hljs-built_in">size</span>();j++)<br>&#123;<br><span class="hljs-type">int</span> v=g[now][j].v,w=g[now][j].w;<br><span class="hljs-keyword">if</span>(!vis[v]&amp;&amp;w&lt;dis[v])<br>dis[v]=w;<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> (cnt==n)?len:<span class="hljs-number">-1</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)<br>&#123;<br><span class="hljs-type">int</span> u,v,w;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d%d&quot;</span>,&amp;u,&amp;v,&amp;w);<br>g[u].<span class="hljs-built_in">push_back</span>(edge&#123;v,w&#125;);<br>g[v].<span class="hljs-built_in">push_back</span>(edge&#123;u,w&#125;);<br>&#125;<br><span class="hljs-type">int</span> res=<span class="hljs-built_in">prim</span>();<br><span class="hljs-keyword">if</span>(res==<span class="hljs-number">-1</span>)cout&lt;&lt;<span class="hljs-string">&quot;orz&quot;</span>;<br><span class="hljs-keyword">else</span> cout&lt;&lt;res;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="kruscal"><a href="#kruscal" class="headerlink" title="kruscal"></a>kruscal</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//最小生成树kruscal</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> MAXN=<span class="hljs-number">5010</span>;<br><span class="hljs-type">int</span> f[MAXN],n,m,cnt,len;<br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">edge</span><br>&#123;<br><span class="hljs-type">int</span> u,v,w;<br>&#125;e[<span class="hljs-number">200010</span>];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">find</span><span class="hljs-params">(<span class="hljs-type">int</span> i)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span>(f[i]==i)<span class="hljs-keyword">return</span> i;<br><span class="hljs-keyword">return</span> f[i]=<span class="hljs-built_in">find</span>(f[i]);<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">merge</span><span class="hljs-params">(<span class="hljs-type">int</span> i,<span class="hljs-type">int</span> j)</span></span><br><span class="hljs-function"></span>&#123;<br>f[<span class="hljs-built_in">find</span>(j)]=<span class="hljs-built_in">find</span>(i);<br>&#125;<br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">cmp</span><span class="hljs-params">(edge a,edge b)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">return</span> a.w&lt;b.w;<span class="hljs-comment">//!</span><br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">kruscal</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-built_in">sort</span>(e<span class="hljs-number">+1</span>,e<span class="hljs-number">+1</span>+m,cmp);<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)<br>&#123;<br><span class="hljs-type">int</span> fu=<span class="hljs-built_in">find</span>(e[i].u),fv=<span class="hljs-built_in">find</span>(e[i].v);<br><span class="hljs-keyword">if</span>(fu==fv)<span class="hljs-keyword">continue</span>;<br><span class="hljs-built_in">merge</span>(e[i].u,e[i].v);<br>cnt++;<br>len+=e[i].w;<br><span class="hljs-keyword">if</span>(cnt==n<span class="hljs-number">-1</span>)<span class="hljs-keyword">return</span> len;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>cin&gt;&gt;n&gt;&gt;m;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)f[i]=i;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)<br>&#123;<br><span class="hljs-type">int</span> u,v,w;<br>cin&gt;&gt;u&gt;&gt;v&gt;&gt;w;<br>e[i]=(edge)&#123;u,v,w&#125;;<br>&#125;<br><span class="hljs-type">int</span> res=<span class="hljs-built_in">kruscal</span>();<br><span class="hljs-keyword">if</span>(res==<span class="hljs-number">-1</span>)cout&lt;&lt;<span class="hljs-string">&quot;orz&quot;</span>;<br><span class="hljs-keyword">else</span> cout&lt;&lt;len;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="单源最短路径"><a href="#单源最短路径" class="headerlink" title="单源最短路径"></a>单源最短路径</h1><p><a href="https://www.luogu.com.cn/problem/P3371">lnk</a></p><p>如题，给出一个有向图，请输出从某一点出发到所有点的最短路径长度。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//单源最短路径</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> MAXN=<span class="hljs-number">10010</span>;<br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">edge</span><br>&#123;<br><span class="hljs-type">int</span> v,w;<br>&#125;;<br>vector &lt;edge&gt; g[MAXN];<br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">node</span><br>&#123;<br><span class="hljs-type">int</span> u,dis;<br><span class="hljs-type">bool</span> <span class="hljs-keyword">operator</span> &lt;(<span class="hljs-type">const</span> node a)<span class="hljs-type">const</span><br>&#123;<br><span class="hljs-keyword">return</span> dis&gt;a.dis;<br>&#125;<br>&#125;;<br>priority_queue &lt;node&gt; q;<br><span class="hljs-type">int</span> dis[MAXN],n,m,s;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">dijkstra</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-built_in">memset</span>(dis,<span class="hljs-number">0x3f</span>,<span class="hljs-built_in">sizeof</span>(dis));<br>dis[s]=<span class="hljs-number">0</span>;<br>q.<span class="hljs-built_in">push</span>((node)&#123;s,<span class="hljs-number">0</span>&#125;);<br><span class="hljs-keyword">while</span>(!q.<span class="hljs-built_in">empty</span>())<br>&#123;<br>node front=q.<span class="hljs-built_in">top</span>();<br><span class="hljs-type">int</span> u=front.u;<br>q.<span class="hljs-built_in">pop</span>();<br><span class="hljs-keyword">if</span>(dis[u]!=front.dis)<span class="hljs-keyword">continue</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;g[u].<span class="hljs-built_in">size</span>();i++)<br>&#123;<br><span class="hljs-type">int</span> v=g[u][i].v,w=g[u][i].w;<br><span class="hljs-keyword">if</span>(dis[v]&gt;dis[u]+w)<br>&#123;<br>dis[v]=dis[u]+w;<br>q.<span class="hljs-built_in">push</span>((node)&#123;v,dis[v]&#125;);<br>&#125;<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>cin&gt;&gt;n&gt;&gt;m&gt;&gt;s;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)<br>&#123;<br><span class="hljs-type">int</span> u,v,w;<br>cin&gt;&gt;u&gt;&gt;v&gt;&gt;w;<br>g[u].<span class="hljs-built_in">push_back</span>((edge)&#123;v,w&#125;);<br>&#125;<br><span class="hljs-built_in">dijkstra</span>();<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br><span class="hljs-keyword">if</span>(dis[i]==<span class="hljs-number">0x3f3f3f3f</span>)cout&lt;&lt;INT_MAX&lt;&lt;<span class="hljs-string">&quot; &quot;</span>;<br><span class="hljs-keyword">else</span> cout&lt;&lt;dis[i]&lt;&lt;<span class="hljs-string">&quot; &quot;</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="LCA"><a href="#LCA" class="headerlink" title="LCA"></a>LCA</h1><p><a href="https://www.luogu.com.cn/problem/P3379">lnk</a></p><p>给定一棵有根多叉树，请求出指定两个点直接最近的公共祖先。</p><h2 id="倍增"><a href="#倍增" class="headerlink" title="倍增"></a>倍增</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//倍增LCA</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> MAXN=<span class="hljs-number">500005</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> MAXLOG=<span class="hljs-number">25</span>;<br><span class="hljs-type">int</span> de[MAXN],anc[MAXN][MAXLOG];<br>vector &lt;<span class="hljs-type">int</span>&gt; g[MAXN];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-type">int</span> x,<span class="hljs-type">int</span> fa)</span></span><br><span class="hljs-function"></span>&#123;<br>de[x]=de[fa]<span class="hljs-number">+1</span>;<br>anc[x][<span class="hljs-number">0</span>]=fa;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;MAXLOG;i++)anc[x][i]=anc[anc[x][i<span class="hljs-number">-1</span>]][i<span class="hljs-number">-1</span>];<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;g[x].<span class="hljs-built_in">size</span>();i++)<br>&#123;<br><span class="hljs-keyword">if</span>(g[x][i]!=fa)<span class="hljs-built_in">dfs</span>(g[x][i],x);<br>&#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">lca</span><span class="hljs-params">(<span class="hljs-type">int</span> x,<span class="hljs-type">int</span> y)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span>(de[x]&lt;de[y])<span class="hljs-built_in">swap</span>(x,y);<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=MAXLOG<span class="hljs-number">-1</span>;~i;i--)<br>&#123;<br><span class="hljs-keyword">if</span>(de[anc[x][i]]&gt;=de[y])x=anc[x][i];<br>&#125;<br><span class="hljs-keyword">if</span>(x==y)<span class="hljs-keyword">return</span> x;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=MAXLOG<span class="hljs-number">-1</span>;~i;i--)<br>&#123;<br><span class="hljs-keyword">if</span>(anc[x][i]!=anc[y][i])x=anc[x][i],y=anc[y][i];<br>&#125;<br><span class="hljs-keyword">return</span> anc[x][<span class="hljs-number">0</span>];<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> n,m,s;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d%d&quot;</span>,&amp;n,&amp;m,&amp;s);<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;n;i++)<br>&#123;<br><span class="hljs-type">int</span> u,v;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d&quot;</span>,&amp;u,&amp;v);<br>g[u].<span class="hljs-built_in">push_back</span>(v);<br>g[v].<span class="hljs-built_in">push_back</span>(u);<br>&#125;<br><span class="hljs-built_in">dfs</span>(s,s);<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)<br>&#123;<br><span class="hljs-type">int</span> a,b;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d&quot;</span>,&amp;a,&amp;b);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>,<span class="hljs-built_in">lca</span>(a,b));<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="tarjan"><a href="#tarjan" class="headerlink" title="tarjan"></a>tarjan</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//tarjan LCA</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> MAXN=<span class="hljs-number">500010</span>;<br><span class="hljs-type">int</span> f[MAXN],vis[MAXN],ans[MAXN];<br>vector &lt;<span class="hljs-type">int</span>&gt; g[MAXN];<br>vector &lt;<span class="hljs-type">int</span>&gt; query[MAXN],query_id[MAXN];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">find</span><span class="hljs-params">(<span class="hljs-type">int</span> i)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span>(f[i]==i)<span class="hljs-keyword">return</span> i;<br><span class="hljs-keyword">return</span> f[i]=<span class="hljs-built_in">find</span>(f[i]);<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">tarjan</span><span class="hljs-params">(<span class="hljs-type">int</span> u)</span></span><br><span class="hljs-function"></span>&#123;<br>vis[u]=<span class="hljs-number">1</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;g[u].<span class="hljs-built_in">size</span>();i++)<br>&#123;<br><span class="hljs-type">int</span> v=g[u][i];<br><span class="hljs-keyword">if</span>(vis[v])<span class="hljs-keyword">continue</span>;<br><span class="hljs-built_in">tarjan</span>(v);<br>f[v]=u;<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;query[u].<span class="hljs-built_in">size</span>();i++)<br>&#123;<br><span class="hljs-type">int</span> v=query[u][i],id=query_id[u][i];<br><span class="hljs-keyword">if</span>(u==v)ans[id]=u;<br><span class="hljs-keyword">if</span>(vis[v]==<span class="hljs-number">2</span>)ans[id]=<span class="hljs-built_in">find</span>(v);<br>&#125;<br>vis[u]=<span class="hljs-number">2</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> n,m,s;<br>cin&gt;&gt;n&gt;&gt;m&gt;&gt;s;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)f[i]=i;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;n;i++)<br>&#123;<br><span class="hljs-type">int</span> u,v;<br>cin&gt;&gt;u&gt;&gt;v;<br>g[u].<span class="hljs-built_in">push_back</span>(v);<br>g[v].<span class="hljs-built_in">push_back</span>(u);<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)<br>&#123;<br><span class="hljs-type">int</span> u,v;<br>cin&gt;&gt;u&gt;&gt;v;<br>query[u].<span class="hljs-built_in">push_back</span>(v);<br>query[v].<span class="hljs-built_in">push_back</span>(u);<br>query_id[u].<span class="hljs-built_in">push_back</span>(i);<br>query_id[v].<span class="hljs-built_in">push_back</span>(i);<br>&#125;<br><span class="hljs-built_in">tarjan</span>(s);<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)cout&lt;&lt;ans[i]&lt;&lt;endl;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="topo排序"><a href="#topo排序" class="headerlink" title="topo排序"></a>topo排序</h1><p><a href="https://www.luogu.com.cn/problem/B3644">lnk</a></p><p>给出一个DAG，从入读为0的点开始，依次删去，求删除的序列</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//topo sort</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> n;<br><span class="hljs-type">bool</span> vis[<span class="hljs-number">110</span>];<br>vector &lt;<span class="hljs-type">int</span>&gt; g[<span class="hljs-number">110</span>];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-type">int</span> u)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;g[u].<span class="hljs-built_in">size</span>();i++)<br><span class="hljs-keyword">if</span>(!vis[g[u][i]])<br><span class="hljs-built_in">dfs</span>(g[u][i]);<br>vis[u]=<span class="hljs-number">1</span>;<br>cout&lt;&lt;u&lt;&lt;<span class="hljs-string">&quot; &quot;</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>cin&gt;&gt;n;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>&#123;<br><span class="hljs-type">int</span> tmp;<br><span class="hljs-keyword">while</span>(cin&gt;&gt;tmp&amp;&amp;tmp)<br>g[tmp].<span class="hljs-built_in">push_back</span>(i);<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br><span class="hljs-keyword">if</span>(!vis[i])<br><span class="hljs-built_in">dfs</span>(i);<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="线段树"><a href="#线段树" class="headerlink" title="线段树"></a>线段树</h1><h2 id="区间修改（加、乘）、区间查询（和）"><a href="#区间修改（加、乘）、区间查询（和）" class="headerlink" title="区间修改（加、乘）、区间查询（和）"></a>区间修改（加、乘）、区间查询（和）</h2><p><a href="https://www.luogu.com.cn/problem/P3373">link</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//区间修改（加、乘）、区间查询（和）</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> ll;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> MAXN=<span class="hljs-number">1000010</span>;<br>ll n,q,m,a[MAXN],sum[MAXN&lt;&lt;<span class="hljs-number">2</span>],mul_tag[MAXN&lt;&lt;<span class="hljs-number">2</span>],add_tag[MAXN&lt;&lt;<span class="hljs-number">2</span>];<br><span class="hljs-function"><span class="hljs-keyword">inline</span> ll <span class="hljs-title">ls</span><span class="hljs-params">(<span class="hljs-type">int</span> k)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">return</span> k&lt;&lt;<span class="hljs-number">1</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">inline</span> ll <span class="hljs-title">rs</span><span class="hljs-params">(<span class="hljs-type">int</span> k)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">return</span> k&lt;&lt;<span class="hljs-number">1</span>|<span class="hljs-number">1</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">inline</span> <span class="hljs-type">void</span> <span class="hljs-title">pushup</span><span class="hljs-params">(ll k)</span></span><br><span class="hljs-function"></span>&#123;<br>sum[k]=(sum[<span class="hljs-built_in">ls</span>(k)]+sum[<span class="hljs-built_in">rs</span>(k)])%m;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">build</span><span class="hljs-params">(ll l,ll r,ll k)</span></span><br><span class="hljs-function"></span>&#123;<br>mul_tag[k]=<span class="hljs-number">1</span>;<br>add_tag[k]=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">if</span>(l==r)<br>&#123;<br>sum[k]=a[l]%m;<br><span class="hljs-keyword">return</span>;<br>&#125;<br>ll mid=l+((r-l)&gt;&gt;<span class="hljs-number">1</span>);<br><span class="hljs-built_in">build</span>(l,mid,<span class="hljs-built_in">ls</span>(k));<br><span class="hljs-built_in">build</span>(mid<span class="hljs-number">+1</span>,r,<span class="hljs-built_in">rs</span>(k));<br><span class="hljs-built_in">pushup</span>(k);<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">inline</span> <span class="hljs-type">void</span> <span class="hljs-title">pushdown</span><span class="hljs-params">(ll l,ll r,ll k)</span></span><br><span class="hljs-function"></span>&#123;<br>ll mid=(l+r)&gt;&gt;<span class="hljs-number">1</span>;<br>sum[<span class="hljs-built_in">ls</span>(k)]=(sum[<span class="hljs-built_in">ls</span>(k)]*mul_tag[k]+add_tag[k]*(mid-l<span class="hljs-number">+1</span>))%m;<br>mul_tag[<span class="hljs-built_in">ls</span>(k)]=(mul_tag[<span class="hljs-built_in">ls</span>(k)]*mul_tag[k])%m;<br>add_tag[<span class="hljs-built_in">ls</span>(k)]=(add_tag[<span class="hljs-built_in">ls</span>(k)]*mul_tag[k]+add_tag[k])%m;<br>sum[<span class="hljs-built_in">rs</span>(k)]=(sum[<span class="hljs-built_in">rs</span>(k)]*mul_tag[k]+add_tag[k]*(r-mid))%m;<br>mul_tag[<span class="hljs-built_in">rs</span>(k)]=(mul_tag[<span class="hljs-built_in">rs</span>(k)]*mul_tag[k])%m;<br>add_tag[<span class="hljs-built_in">rs</span>(k)]=(add_tag[<span class="hljs-built_in">rs</span>(k)]*mul_tag[k]+add_tag[k])%m;<br>mul_tag[k]=<span class="hljs-number">1</span>;<br>add_tag[k]=<span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">update_mul</span><span class="hljs-params">(ll nl,ll nr,ll l,ll r,ll k,ll val)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span>(nl&lt;=l&amp;&amp;nr&gt;=r)<br>&#123;<br>sum[k]=(sum[k]*val)%m;<br>mul_tag[k]=(mul_tag[k]*val)%m;<br>add_tag[k]=(add_tag[k]*val)%m;<br><span class="hljs-keyword">return</span>;<br>&#125;<br><span class="hljs-built_in">pushdown</span>(l,r,k);<br>ll mid=l+((r-l)&gt;&gt;<span class="hljs-number">1</span>);<br><span class="hljs-keyword">if</span>(nl&lt;=mid)<span class="hljs-built_in">update_mul</span>(nl,nr,l,mid,<span class="hljs-built_in">ls</span>(k),val);<br><span class="hljs-keyword">if</span>(nr&gt;mid)<span class="hljs-built_in">update_mul</span>(nl,nr,mid<span class="hljs-number">+1</span>,r,<span class="hljs-built_in">rs</span>(k),val);<br><span class="hljs-built_in">pushup</span>(k);<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">update_add</span><span class="hljs-params">(ll nl,ll nr,ll l,ll r,ll k,ll val)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span>(nl&lt;=l&amp;&amp;nr&gt;=r)<br>&#123;<br>sum[k]=(sum[k]+val*(r-l<span class="hljs-number">+1</span>))%m;<br>add_tag[k]=(add_tag[k]+val)%m;<br><span class="hljs-keyword">return</span>;<br>&#125;<br><span class="hljs-built_in">pushdown</span>(l,r,k);<br>ll mid=l+((r-l)&gt;&gt;<span class="hljs-number">1</span>);<br><span class="hljs-keyword">if</span>(nl&lt;=mid)<span class="hljs-built_in">update_add</span>(nl,nr,l,mid,<span class="hljs-built_in">ls</span>(k),val);<br><span class="hljs-keyword">if</span>(nr&gt;mid)<span class="hljs-built_in">update_add</span>(nl,nr,mid<span class="hljs-number">+1</span>,r,<span class="hljs-built_in">rs</span>(k),val);<br><span class="hljs-built_in">pushup</span>(k);<br>&#125;<br><span class="hljs-function">ll <span class="hljs-title">query</span><span class="hljs-params">(ll ql,ll qr,ll l,ll r,ll k)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span>(ql&lt;=l&amp;&amp;qr&gt;=r)<span class="hljs-keyword">return</span> sum[k];<br><span class="hljs-built_in">pushdown</span>(l,r,k);<br>ll mid=(l+r)&gt;&gt;<span class="hljs-number">1</span>,res=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">if</span>(ql&lt;=mid)res=(res+<span class="hljs-built_in">query</span>(ql,qr,l,mid,<span class="hljs-built_in">ls</span>(k)))%m;<br><span class="hljs-keyword">if</span>(qr&gt;mid)res=(res+<span class="hljs-built_in">query</span>(ql,qr,mid<span class="hljs-number">+1</span>,r,<span class="hljs-built_in">rs</span>(k)))%m;<br><span class="hljs-keyword">return</span> res;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-number">0</span>);<br>cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>cin&gt;&gt;n&gt;&gt;q&gt;&gt;m;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>&#123;<br>cin&gt;&gt;a[i];<br>a[i]%=m;<br>&#125;<br><span class="hljs-built_in">build</span>(<span class="hljs-number">1</span>,n,<span class="hljs-number">1</span>);<br><span class="hljs-keyword">while</span>(q--)<br>&#123;<br><span class="hljs-type">int</span> opt;<br>cin&gt;&gt;opt;<br>ll x,y,k;<br><span class="hljs-keyword">switch</span>(opt)<br>&#123;<br><span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>cin&gt;&gt;x&gt;&gt;y&gt;&gt;k;<br>k%=m;<br><span class="hljs-built_in">update_mul</span>(x,y,<span class="hljs-number">1</span>,n,<span class="hljs-number">1</span>,k);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>cin&gt;&gt;x&gt;&gt;y&gt;&gt;k;<br>k%=m;<br><span class="hljs-built_in">update_add</span>(x,y,<span class="hljs-number">1</span>,n,<span class="hljs-number">1</span>,k);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:<br>cin&gt;&gt;x&gt;&gt;y;<br>cout&lt;&lt;<span class="hljs-built_in">query</span>(x,y,<span class="hljs-number">1</span>,n,<span class="hljs-number">1</span>)%m&lt;&lt;<span class="hljs-string">&#x27;\n&#x27;</span>;<br><span class="hljs-keyword">break</span>;<br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="区间修改（加）、区间查询（和）"><a href="#区间修改（加）、区间查询（和）" class="headerlink" title="区间修改（加）、区间查询（和）"></a>区间修改（加）、区间查询（和）</h2><p><a href="https://www.luogu.com.cn/problem/P3372">link</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//区间修改（加）、区间查询（和）</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> MAXN=<span class="hljs-number">1000010</span>;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> ll;<br>ll n,m,a[MAXN],sum[MAXN&lt;&lt;<span class="hljs-number">2</span>],tag[MAXN&lt;&lt;<span class="hljs-number">2</span>];<br><span class="hljs-function"><span class="hljs-keyword">inline</span> ll <span class="hljs-title">ls</span><span class="hljs-params">(<span class="hljs-type">int</span> k)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">return</span> k&lt;&lt;<span class="hljs-number">1</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">inline</span> ll <span class="hljs-title">rs</span><span class="hljs-params">(<span class="hljs-type">int</span> k)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">return</span> k&lt;&lt;<span class="hljs-number">1</span>|<span class="hljs-number">1</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">inline</span> <span class="hljs-type">void</span> <span class="hljs-title">pushup</span><span class="hljs-params">(ll k)</span></span><br><span class="hljs-function"></span>&#123;<br>sum[k]=sum[<span class="hljs-built_in">ls</span>(k)]+sum[<span class="hljs-built_in">rs</span>(k)];<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">build</span><span class="hljs-params">(ll l,ll r,ll k)</span></span><br><span class="hljs-function"></span>&#123;<br>tag[k]=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">if</span>(l==r)<br>&#123;<br>sum[k]=a[l];<br><span class="hljs-keyword">return</span> ;<br>&#125;<br>ll mid=l+((r-l)&gt;&gt;<span class="hljs-number">1</span>);<br><span class="hljs-built_in">build</span>(l,mid,<span class="hljs-built_in">ls</span>(k));<br><span class="hljs-built_in">build</span>(mid<span class="hljs-number">+1</span>,r,<span class="hljs-built_in">rs</span>(k));<br><span class="hljs-built_in">pushup</span>(k);<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">inline</span> <span class="hljs-type">void</span> <span class="hljs-title">f</span><span class="hljs-params">(ll l,ll r,ll k,ll val)</span></span><br><span class="hljs-function"></span>&#123;<br>tag[k]+=val;<br>sum[k]+=val*(r-l<span class="hljs-number">+1</span>);<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">inline</span> <span class="hljs-type">void</span> <span class="hljs-title">pushdown</span><span class="hljs-params">(ll l,ll r,ll k)</span></span><br><span class="hljs-function"></span>&#123;<br>ll mid=(l+r)&gt;&gt;<span class="hljs-number">1</span>;<br><span class="hljs-built_in">f</span>(l,mid,<span class="hljs-built_in">ls</span>(k),tag[k]);<br><span class="hljs-built_in">f</span>(mid<span class="hljs-number">+1</span>,r,<span class="hljs-built_in">rs</span>(k),tag[k]);<br>tag[k]=<span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">inline</span> <span class="hljs-type">void</span> <span class="hljs-title">update</span><span class="hljs-params">(ll nl,ll nr,ll l,ll r,ll k,ll add)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span>(nl&lt;=l&amp;&amp;nr&gt;=r)<br>&#123;<br>sum[k]+=add*(r-l<span class="hljs-number">+1</span>);<br>tag[k]+=add;<br><span class="hljs-keyword">return</span> ;<br>&#125;<br><span class="hljs-built_in">pushdown</span>(l,r,k);<br>ll mid=l+((r-l)&gt;&gt;<span class="hljs-number">1</span>);<br><span class="hljs-keyword">if</span>(nl&lt;=mid)<span class="hljs-built_in">update</span>(nl,nr,l,mid,<span class="hljs-built_in">ls</span>(k),add);<br><span class="hljs-keyword">if</span>(nr&gt;mid)<span class="hljs-built_in">update</span>(nl,nr,mid<span class="hljs-number">+1</span>,r,<span class="hljs-built_in">rs</span>(k),add);<br><span class="hljs-built_in">pushup</span>(k);<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">inline</span> ll <span class="hljs-title">query</span><span class="hljs-params">(ll ql,ll qr,ll l,ll r,ll k)</span></span><br><span class="hljs-function"></span>&#123;<br>ll res=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">if</span>(ql&lt;=l&amp;&amp;qr&gt;=r)<span class="hljs-keyword">return</span> sum[k];<br><span class="hljs-built_in">pushdown</span>(l,r,k);<br>ll mid=(l+r)&gt;&gt;<span class="hljs-number">1</span>;<br><span class="hljs-keyword">if</span>(ql&lt;=mid)res+=<span class="hljs-built_in">query</span>(ql,qr,l,mid,<span class="hljs-built_in">ls</span>(k));<br><span class="hljs-keyword">if</span>(qr&gt;mid)res+=<span class="hljs-built_in">query</span>(ql,qr,mid<span class="hljs-number">+1</span>,r,<span class="hljs-built_in">rs</span>(k));<br><span class="hljs-keyword">return</span> res;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>cin&gt;&gt;n&gt;&gt;m;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)cin&gt;&gt;a[i];<br><span class="hljs-built_in">build</span>(<span class="hljs-number">1</span>,n,<span class="hljs-number">1</span>);<br><span class="hljs-keyword">while</span>(m--)<br>&#123;<br><span class="hljs-type">int</span> opt;<br>cin&gt;&gt;opt;<br>ll x,y,k;<br><span class="hljs-keyword">switch</span>(opt)<br>&#123;<br><span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>cin&gt;&gt;x&gt;&gt;y&gt;&gt;k;<br><span class="hljs-built_in">update</span>(x,y,<span class="hljs-number">1</span>,n,<span class="hljs-number">1</span>,k);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>cin&gt;&gt;x&gt;&gt;y;<br>cout&lt;&lt;<span class="hljs-built_in">query</span>(x,y,<span class="hljs-number">1</span>,n,<span class="hljs-number">1</span>)&lt;&lt;<span class="hljs-string">&#x27;\n&#x27;</span>;<br><span class="hljs-keyword">break</span>;<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="树状数组"><a href="#树状数组" class="headerlink" title="树状数组"></a>树状数组</h1><h2 id="单点修改（加），区间查询（和）"><a href="#单点修改（加），区间查询（和）" class="headerlink" title="单点修改（加），区间查询（和）"></a>单点修改（加），区间查询（和）</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//单点修改（加），区间查询（和）</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> MAXN=<span class="hljs-number">500010</span>;<br><span class="hljs-type">int</span> n,a[MAXN],q;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">lowbit</span><span class="hljs-params">(<span class="hljs-type">int</span> x)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">return</span> x&amp;(-x);<br>&#125;<br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">treearray</span><br>&#123;<br><span class="hljs-type">int</span> c[MAXN];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">add</span><span class="hljs-params">(<span class="hljs-type">int</span> u,<span class="hljs-type">int</span> val)</span></span><br><span class="hljs-function"></span>&#123;<br>a[u]+=val;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=u;i&lt;=n;i+=<span class="hljs-built_in">lowbit</span>(i))<br>c[i]+=val;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">sum</span><span class="hljs-params">(<span class="hljs-type">int</span> u)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> ans=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=u;i&gt;<span class="hljs-number">0</span>;i-=<span class="hljs-built_in">lowbit</span>(i))<br>ans+=c[i];<br><span class="hljs-keyword">return</span> ans;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">init</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-built_in">memset</span>(c,<span class="hljs-number">0</span>,<span class="hljs-built_in">sizeof</span>(c));<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>&#123;<br>c[i]+=a[i];<br><span class="hljs-type">int</span> j=i+<span class="hljs-built_in">lowbit</span>(i);<br><span class="hljs-keyword">if</span>(j&lt;=n)<br>c[j]+=c[i];<br>&#125;<br>&#125;<br>&#125;t;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>cin&gt;&gt;n&gt;&gt;q;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>cin&gt;&gt;a[i];<br>t.<span class="hljs-built_in">init</span>();<br><span class="hljs-keyword">while</span>(q--)<br>&#123;<br><span class="hljs-type">int</span> opt,u,v;<br>cin&gt;&gt;opt&gt;&gt;u&gt;&gt;v;<br><span class="hljs-keyword">if</span>(opt==<span class="hljs-number">1</span>)<br>t.<span class="hljs-built_in">add</span>(u,v);<br><span class="hljs-keyword">else</span><br>cout&lt;&lt;t.<span class="hljs-built_in">sum</span>(v)-t.<span class="hljs-built_in">sum</span>(u<span class="hljs-number">-1</span>)&lt;&lt;<span class="hljs-string">&#x27;\n&#x27;</span>;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="区间修改（加），单点查询（值）"><a href="#区间修改（加），单点查询（值）" class="headerlink" title="区间修改（加），单点查询（值）"></a>区间修改（加），单点查询（值）</h2><p><a href="https://www.luogu.com.cn/problem/P3368">lnk</a></p><p>咕着</p><h1 id="字典树"><a href="#字典树" class="headerlink" title="字典树"></a>字典树</h1><p><a href="https://www.luogu.com.cn/problem/P8306">lnk</a></p><p>给定 $n$ 个模式串 $s_1, s_2, \dots, s_n$ 和 $q$ 次询问，每次询问给定一个文本串 $t_i$，请回答 $s_1 \sim s_n$ 中有多少个字符串 $s_j$ 满足 $t_i$ 是 $s_j$ 的<strong>前缀</strong>。</p><p>一个字符串 $t$ 是 $s$ 的前缀当且仅当从 $s$ 的末尾删去若干个（可以为 0 个）连续的字符后与 $t$ 相同。</p><p>输入的字符串大小敏感。例如，字符串 <code>Fusu</code> 和字符串 <code>fusu</code> 不同。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//字典树</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> n,m,idx,cnt[<span class="hljs-number">3000010</span>],trie[<span class="hljs-number">3000010</span>][<span class="hljs-number">65</span>];<br>map &lt;<span class="hljs-type">char</span>,<span class="hljs-type">int</span>&gt; mp;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">insert</span><span class="hljs-params">(<span class="hljs-type">char</span> *s)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> p=<span class="hljs-number">0</span>,len=<span class="hljs-built_in">strlen</span>(s<span class="hljs-number">+1</span>);<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=len;i++)<br>&#123;<br><span class="hljs-keyword">if</span>(!trie[p][mp[s[i]]])<br>trie[p][mp[s[i]]]=++idx;<br>p=trie[p][mp[s[i]]],cnt[p]++;<br>&#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">query</span><span class="hljs-params">(<span class="hljs-type">char</span> *s)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> p=<span class="hljs-number">0</span>,len=<span class="hljs-built_in">strlen</span>(s<span class="hljs-number">+1</span>);<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=len;i++)<br>&#123;<br><span class="hljs-keyword">if</span>(!trie[p][mp[s[i]]])<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>p=trie[p][mp[s[i]]];<br>&#125;<br><span class="hljs-keyword">return</span> cnt[p];<br>&#125;<br><span class="hljs-type">char</span> s[<span class="hljs-number">3000010</span>];<br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> id=<span class="hljs-number">0</span>,t;<br>cin&gt;&gt;t;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">char</span> i=<span class="hljs-string">&#x27;a&#x27;</span>;i&lt;=<span class="hljs-string">&#x27;z&#x27;</span>;i++)mp[i]=++id;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">char</span> i=<span class="hljs-string">&#x27;A&#x27;</span>;i&lt;=<span class="hljs-string">&#x27;Z&#x27;</span>;i++)mp[i]=++id;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">char</span> i=<span class="hljs-string">&#x27;0&#x27;</span>;i&lt;=<span class="hljs-string">&#x27;9&#x27;</span>;i++)mp[i]=++id;<br><span class="hljs-keyword">while</span>(t--)<br>&#123;<br>cin&gt;&gt;n&gt;&gt;m;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;=idx;i++)<br>&#123;<br>cnt[i]=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;=<span class="hljs-number">62</span>;j++)<br> trie[i][j]=<span class="hljs-number">0</span>;<br>&#125;<br>idx=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>&#123;<br>cin&gt;&gt;(s<span class="hljs-number">+1</span>);<br><span class="hljs-built_in">insert</span>(s);<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)<br>&#123;<br>cin&gt;&gt;(s<span class="hljs-number">+1</span>);<br>cout&lt;&lt;<span class="hljs-built_in">query</span>(s)&lt;&lt;<span class="hljs-string">&#x27;\n&#x27;</span>;<br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="滑动窗口-单调队列"><a href="#滑动窗口-单调队列" class="headerlink" title="滑动窗口&#x2F;单调队列"></a>滑动窗口&#x2F;单调队列</h1><p><a href="https://www.luogu.com.cn/problem/P1886">lnk</a></p><p>有一个长为 $n$ 的序列 $a$，以及一个大小为 $k$ 的窗口。现在这个窗口从左边开始向右滑动，每次滑动一个单位，求出每次滑动后窗口中的最小值和最大值。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//单调队列</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> n,k;<br><span class="hljs-type">int</span> maxn[<span class="hljs-number">1000010</span>],minn[<span class="hljs-number">1000010</span>],a[<span class="hljs-number">1000010</span>];<br><span class="hljs-type">int</span> head1=<span class="hljs-number">1</span>,tail1,head2=<span class="hljs-number">1</span>,tail2;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    cin&gt;&gt;n&gt;&gt;k;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>        cin&gt;&gt;a[i];<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>    &#123;<br>        <span class="hljs-keyword">while</span>(head2&lt;=tail2&amp;&amp;a[minn[tail2]]&gt;=a[i])tail2--;<br>        tail2++,minn[tail2]=i;<br>        <span class="hljs-keyword">while</span>(i-minn[head2]&gt;=k)head2++;<br>        <span class="hljs-keyword">if</span>(i&gt;=k)cout&lt;&lt;a[minn[head2]]&lt;&lt;<span class="hljs-string">&quot; &quot;</span>;<br>    &#125;<span class="hljs-built_in">putchar</span>(<span class="hljs-string">&#x27;\n&#x27;</span>);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>    &#123;<br>        <span class="hljs-keyword">while</span>(head1&lt;=tail1&amp;&amp;a[maxn[tail1]]&lt;=a[i])tail1--;<br>        tail1++,maxn[tail1]=i;<br>        <span class="hljs-keyword">while</span>(i-maxn[head1]&gt;=k)head1++;<br>        <span class="hljs-keyword">if</span>(i&gt;=k)cout&lt;&lt;a[maxn[head1]]&lt;&lt;<span class="hljs-string">&quot; &quot;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="强连通分量"><a href="#强连通分量" class="headerlink" title="强连通分量"></a>强连通分量</h1><p><a href="https://www.luogu.com.cn/problem/B3609">lnk</a></p><p>给定一张 $n$ 个点 $m$ 条边的有向图，求出其所有的强连通分量。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//强连通分量</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-meta">#<span class="hljs-keyword">define</span> MAXN 10010</span><br>vector&lt;<span class="hljs-type">int</span>&gt; g[MAXN],ans[MAXN];<br><span class="hljs-type">int</span> n,m,cnt,f[MAXN],b[MAXN],s[MAXN],len,dfn[MAXN],low[MAXN],idx;<br><span class="hljs-type">bool</span> instack[MAXN];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">tarjan</span><span class="hljs-params">(<span class="hljs-type">int</span> u)</span></span><br><span class="hljs-function"></span>&#123;<br>dfn[u]=low[u]=++idx;<br>s[++len]=u;<br>instack[u]=<span class="hljs-number">1</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;g[u].<span class="hljs-built_in">size</span>();i++)<br>&#123;<br><span class="hljs-type">int</span> v=g[u][i];<br><span class="hljs-keyword">if</span>(!dfn[v])<br>&#123;<br><span class="hljs-built_in">tarjan</span>(v);<br>low[u]=<span class="hljs-built_in">min</span>(low[u],low[v]);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(instack[v])low[u]=<span class="hljs-built_in">min</span>(low[u],dfn[v]);<br>&#125;<br><span class="hljs-keyword">if</span>(dfn[u]==low[u])<br>&#123;<br>cnt++;<br><span class="hljs-keyword">while</span>(s[len]!=u)<br>&#123;<br>b[s[len]]=cnt;<br>instack[s[len]]=<span class="hljs-number">0</span>;<br>ans[cnt].<span class="hljs-built_in">push_back</span>(s[len]);<br>len--;<br>&#125;<br>b[u]=cnt;<br>ans[cnt].<span class="hljs-built_in">push_back</span>(u);<br>len--;<br>instack[u]=<span class="hljs-number">0</span>;<br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>cin&gt;&gt;n&gt;&gt;m;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)<br>&#123;<br><span class="hljs-type">int</span> u,v;<br>cin&gt;&gt;u&gt;&gt;v;<br>g[u].<span class="hljs-built_in">push_back</span>(v);<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<span class="hljs-keyword">if</span>(!dfn[i])<span class="hljs-built_in">tarjan</span>(i);<br>cout&lt;&lt;cnt&lt;&lt;endl;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=cnt;i++)<span class="hljs-built_in">sort</span>(ans[i].<span class="hljs-built_in">begin</span>(),ans[i].<span class="hljs-built_in">end</span>());<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>&#123;<br><span class="hljs-keyword">if</span>(f[b[i]])<span class="hljs-keyword">continue</span>;<br>f[b[i]]=<span class="hljs-number">1</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;ans[b[i]].<span class="hljs-built_in">size</span>();j++)<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d &quot;</span>,ans[b[i]][j]);<br>cout&lt;&lt;endl;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="边双连通分量"><a href="#边双连通分量" class="headerlink" title="边双连通分量"></a>边双连通分量</h1><p><a href="https://www.luogu.com.cn/problem/P8436">lnk</a></p><p>对于一个 $n$ 个节点 $m$ 条无向边的图，请输出其边双连通分量的个数，并且输出每个边双连通分量。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//边双</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span> </span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">e</span><br>&#123;<br><span class="hljs-type">int</span> next,to;<br><span class="hljs-type">bool</span> f;<br>&#125;edge[<span class="hljs-number">4000005</span>];<br><span class="hljs-type">int</span> idx,cnt=<span class="hljs-number">1</span>,dcc,n,m,low[<span class="hljs-number">2000005</span>],dfn[<span class="hljs-number">2000005</span>],head[<span class="hljs-number">2000005</span>];<br><span class="hljs-type">bool</span> vis[<span class="hljs-number">2000005</span>];<br>vector&lt;<span class="hljs-type">int</span>&gt;d[<span class="hljs-number">2000005</span>];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">add_edge</span><span class="hljs-params">(<span class="hljs-type">int</span> u,<span class="hljs-type">int</span> v)</span></span><br><span class="hljs-function"></span>&#123;<br>cnt++;<br>edge[cnt].to=v;<br>edge[cnt].f=<span class="hljs-literal">false</span>;<br>edge[cnt].next=head[u];<br>head[u]=cnt;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">tarjan</span><span class="hljs-params">(<span class="hljs-type">int</span> x,<span class="hljs-type">int</span> in)</span></span><br><span class="hljs-function"></span>&#123;<br>dfn[x]=low[x]=++idx;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=head[x];i;i=edge[i].next)<br>&#123;<br><span class="hljs-type">int</span> y=edge[i].to;<br><span class="hljs-keyword">if</span>(!dfn[y])<br>&#123;<br><span class="hljs-built_in">tarjan</span>(y,i);<br>low[x]=<span class="hljs-built_in">min</span>(low[x],low[y]);<br><span class="hljs-keyword">if</span>(dfn[x]&lt;low[y])edge[i].f=edge[i^<span class="hljs-number">1</span>].f=<span class="hljs-literal">true</span>;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(i!=(in^<span class="hljs-number">1</span>))low[x]=<span class="hljs-built_in">min</span>(low[x],dfn[y]);<br>&#125; <br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-type">int</span> x)</span></span><br><span class="hljs-function"></span>&#123;<br>d[dcc].<span class="hljs-built_in">push_back</span>(x); vis[x]=<span class="hljs-literal">true</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=head[x];i;i=edge[i].next)<br>&#123;<br><span class="hljs-type">int</span> v=edge[i].to;<br><span class="hljs-keyword">if</span>(vis[v]||edge[i].f)<span class="hljs-keyword">continue</span>;<br><span class="hljs-built_in">dfs</span>(v);<br>&#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>cin&gt;&gt;n&gt;&gt;m;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)<br>&#123;<br><span class="hljs-type">int</span> u,v;<br>cin&gt;&gt;u&gt;&gt;v;<br><span class="hljs-built_in">add_edge</span>(u,v);<br><span class="hljs-built_in">add_edge</span>(v,u);<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<span class="hljs-keyword">if</span>(!dfn[i])<span class="hljs-built_in">tarjan</span>(i,<span class="hljs-number">0</span>);<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>&#123;<br><span class="hljs-keyword">if</span>(!vis[i])<br>&#123;<br>dcc++;<br><span class="hljs-built_in">dfs</span>(i);<br>&#125;<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>,dcc);<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=dcc;i++)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d &quot;</span>,d[i].<span class="hljs-built_in">size</span>());<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;d[i].<span class="hljs-built_in">size</span>();j++)<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d &quot;</span>,d[i][j]);<br><span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;&quot;</span>);<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125; <br></code></pre></td></tr></table></figure><h1 id="点双连通分量"><a href="#点双连通分量" class="headerlink" title="点双连通分量"></a>点双连通分量</h1><p><a href="https://www.luogu.com.cn/problem/P8435">lnk</a></p><p>对于一个 $n$ 个节点 $m$ 条无向边的图，请输出其点双连通分量的个数，并且输出每个点双连通分量。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//点双</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> MAXN=<span class="hljs-number">500010</span>;<br><span class="hljs-type">int</span> low[MAXN],dfn[MAXN],stk[MAXN];<br><span class="hljs-type">int</span> n,m,idx,cnt,top;<br>vector &lt;<span class="hljs-type">int</span>&gt; g[MAXN],ans[MAXN];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">tarjan</span><span class="hljs-params">(<span class="hljs-type">int</span> u,<span class="hljs-type">int</span> fa)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> son=<span class="hljs-number">0</span>;<br>low[u]=dfn[u]=++idx;<br>stk[++top]=u;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;g[u].<span class="hljs-built_in">size</span>();i++)<br>&#123;<br><span class="hljs-type">int</span> v=g[u][i];<br><span class="hljs-keyword">if</span>(!dfn[v])<br>&#123;<br>son++;<br><span class="hljs-built_in">tarjan</span>(v,u);<br>low[u]=<span class="hljs-built_in">min</span>(low[u],low[v]);<br><span class="hljs-keyword">if</span>(low[v]&gt;=dfn[u])<br>&#123;<br>cnt++;<br><span class="hljs-keyword">while</span>(stk[top<span class="hljs-number">+1</span>]!=v)<br>ans[cnt].<span class="hljs-built_in">push_back</span>(stk[top--]);<br>ans[cnt].<span class="hljs-built_in">push_back</span>(u);<br>&#125;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(v!=fa)low[u]=<span class="hljs-built_in">min</span>(low[u],dfn[v]);<br>&#125;<br><span class="hljs-keyword">if</span>(fa==<span class="hljs-number">0</span>&amp;&amp;son==<span class="hljs-number">0</span>)<br>ans[++cnt].<span class="hljs-built_in">push_back</span>(u);<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>cin&gt;&gt;n&gt;&gt;m;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)<br>&#123;<br><span class="hljs-type">int</span> u,v;<br>cin&gt;&gt;u&gt;&gt;v;<br>g[u].<span class="hljs-built_in">push_back</span>(v);<br>g[v].<span class="hljs-built_in">push_back</span>(u);<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>&#123;<br><span class="hljs-keyword">if</span>(dfn[i])<span class="hljs-keyword">continue</span>;<br>top=<span class="hljs-number">0</span>;<br><span class="hljs-built_in">tarjan</span>(i,<span class="hljs-number">0</span>);<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>,cnt);<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=cnt;i++)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d &quot;</span>,ans[i].<span class="hljs-built_in">size</span>());<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> v:ans[i])<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d &quot;</span>,v);<br><span class="hljs-built_in">putchar</span>(<span class="hljs-string">&#x27;\n&#x27;</span>);<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="线性筛"><a href="#线性筛" class="headerlink" title="线性筛"></a>线性筛</h1><p><a href="https://www.luogu.com.cn/problem/P3383">lnk</a></p><p>如题，给定一个范围 $n$，有 $q$个询问，每次输出第 $k$ 小的素数。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//线性筛</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> MAXN=<span class="hljs-number">1e8</span><span class="hljs-number">+10</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> MAXP=<span class="hljs-number">6e6</span><span class="hljs-number">+10</span>;<br><span class="hljs-type">int</span> n,q,cnt=<span class="hljs-number">0</span>;<br><span class="hljs-type">int</span> prime[MAXP];<br><span class="hljs-type">bool</span> isprime[MAXN];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">getprime</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">memset</span>(isprime,<span class="hljs-literal">true</span>,<span class="hljs-built_in">sizeof</span>(isprime));<br>    isprime[<span class="hljs-number">1</span>]=<span class="hljs-literal">false</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">2</span>;i&lt;=n;++i)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(isprime[i])prime[++cnt]=i;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=cnt&amp;&amp;i*prime[j]&lt;=n;++j)<br>        &#123;<br>            isprime[i*prime[j]]=<span class="hljs-literal">false</span>;<br>            <span class="hljs-keyword">if</span>(i%prime[j]==<span class="hljs-number">0</span>)<span class="hljs-keyword">break</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-literal">nullptr</span>);<br>    cin&gt;&gt;n&gt;&gt;q;<br>    <span class="hljs-built_in">getprime</span>();<br>    <span class="hljs-keyword">while</span>(q--)<br>    &#123;<br>        <span class="hljs-type">int</span> k;<br>        cin&gt;&gt;k;<br>        cout&lt;&lt;prime[k]&lt;&lt;<span class="hljs-string">&#x27;\n&#x27;</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>学习笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【百科】福州杨桥中学</title>
    <link href="/2025/09/04/%E3%80%90%E7%99%BE%E7%A7%91%E3%80%91%E7%A6%8F%E5%B7%9E%E6%9D%A8%E6%A1%A5%E4%B8%AD%E5%AD%A6/"/>
    <url>/2025/09/04/%E3%80%90%E7%99%BE%E7%A7%91%E3%80%91%E7%A6%8F%E5%B7%9E%E6%9D%A8%E6%A1%A5%E4%B8%AD%E5%AD%A6/</url>
    
    <content type="html"><![CDATA[<h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><p><img src="https://t15.baidu.com/it/u=3728413180,732842230&fm=224&app=112&f=JPEG?w=500&h=500"></p><p>​    福建省福州杨桥中学位于福州市中心，学校始建于1985年，占地面积18074平方米，建筑总面积14205平方米，学校规划布局合理，配套齐全。学校现有教职工132人，其中特级教师1人、高级教师12人、中级教师39人。具有本科学历的73人，专科学历40人；持有教师资格证书120人，全校共有省市级骨干教师35人；在校生1810人。学校以“三个代表”重要思想和邓小平“三个面向”为课程改革的指导思想，根据实际，提出“两全”、“两为”的办学理念，“两全”即面向全体学生，全面提高学生的整体素质；“两为”即领导为教师服务，教师为学生服务。提出争创“知名学校、省级达标”的办学目标。</p><table><thead><tr><th>中文名</th><th align="left">福建省福州杨桥中学</th><th>校训</th><th>仁、毅、智、诚</th></tr></thead><tbody><tr><td>简称</td><td align="left">福州杨桥中学</td><td>地址</td><td>鼓楼区学院路56号</td></tr><tr><td>所在地</td><td align="left">福建省福州市</td><td>主要奖项</td><td>福建省普通初中示范学校</td></tr><tr><td>创办时间</td><td align="left">1985年</td><td></td><td>国家安全教育示范校</td></tr><tr><td>办学性质</td><td align="left">公立中学</td><td>占地面积</td><td>$16903 m^2$</td></tr><tr><td>主管部门</td><td align="left">福州市鼓楼区教育</td><td>建筑面积</td><td>$15877m^2$</td></tr></tbody></table><h2 id="办学历史"><a href="#办学历史" class="headerlink" title="办学历史"></a>办学历史</h2><p>2001届为初中<a href="https://baike.baidu.com/item/%E4%BC%98%E7%A7%80%E7%8E%87/0?fromModule=lemma_inlink">优秀率</a>、巩固率、及格率是福州十三所达标中学中的一所。当年巩固率为99.6%，及格率98.7%（含保送）、优秀率为38.6%、高分率为13.3%。 [1]</p><p>2002届为初中巩固率、优秀率均达标的四所中学中的一所。当年巩固率为99.08%、及格率为93.58%、优秀率为39.53%、高分率为14.2%。</p><p>2003届巩固率为99.14%、及格率为92.07%、优秀率为40%、高分率为13.1%。</p><p>2004届巩固率为99.48%、及格率为93.21%、优秀率为47.3%、高分率为15.65%。</p><p>2002-2004学年以来，师生获奖情况：省级16人次、市级23人次、区级30人次。</p><p>2002-2004学年以来，教师论文获奖及发表情况：全国级有25篇，省级有10篇，市级有19篇，区级有24篇，另该校自行汇编了《探索》、《论文集》四本，《英语论文集》两本。</p><p>2002-2004，开展综合实践活动成果</p><p>在2003年底进行的省级综合实践活动评选中，罗清兰老师的一篇论文和一篇案例均获一等奖；刘政君老师的课例获一等奖论文获三等奖，俞繁老师的案例获省级三等奖。在2004年5月全国综合实验课例评比中获得可喜成绩：腾蓉老师的一篇课例获一等奖另一篇论文获二等奖；罗清兰老师的一篇课例获一等奖另一篇案例和两篇论文均获二等奖；刘政君老师的一篇课例获二等奖；郑宁老师的一篇论文获三等奖；杨明老师的一篇课例获省级三等奖。另罗清兰老师的论文《让学生成为实践活动课中真正的主体》一文发表在CN刊物上。</p><h2 id="文化传统"><a href="#文化传统" class="headerlink" title="文化传统"></a>文化传统</h2><p>学校秉持“尊重孩子发展的个体差异、尊重孩子独立成长的需要”的教育理念和“仁、毅、智、诚”校训认真办学 。校内设有剪纸社、合唱团、机器人社、信息学奥赛培训班等特色社团，还有读书月、合唱节、体育节、艺术节等活动平台，促进学生健康人格塑造和全面发展 。</p><h2 id="所获荣誉"><a href="#所获荣誉" class="headerlink" title="所获荣誉"></a>所获荣誉</h2><p>学校：连续二年获得“区教科研论文团体优胜奖”。还获得“市张思中教学先进实验校光荣称号”，“2001-2003年区科研先进单位”称号，由于近来教科研工作成绩显著，学校被推荐为“市课改先进实验校。”</p><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p><img src="https://picx.zhimg.com/v2-74028fe84c3fb9f54b180bbd420d405f_r.jpg?source=2c26e567"></p>]]></content>
    
    
    
    <tags>
      
      <tag>休闲娱乐</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【题解】洛谷P12085</title>
    <link href="/2025/08/31/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91%E6%B4%9B%E8%B0%B7P12085/"/>
    <url>/2025/08/31/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91%E6%B4%9B%E8%B0%B7P12085/</url>
    
    <content type="html"><![CDATA[<p><a href="http://luogu.com.cn/problem/P12085">题目传送门</a></p><p>借鉴这篇<a href="http://luogu.com.cn/article/nhijvm3v">题解</a>，dalao%%%</p><p>如果我们真的模拟的话肯定过不了的（<a href="https://www.luogu.com.cn/record/226752537">记录</a>）。</p><p>所以我们可以使用链表+优先队列的方式，来记录这个数列。</p><p>其中的删除操作也不是让我们真的删去，用版本（version）的方式记录当前数据能不能用，不能用就弹出。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> MAXN=<span class="hljs-number">500010</span>;<br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-type">int</span> n,k;<br><span class="hljs-type">int</span> a[MAXN];<br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">LIST</span><br>&#123;<br><span class="hljs-type">int</span> pre,nxt;<br>&#125;lst[MAXN];<br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">node</span><br>&#123;<br><span class="hljs-type">int</span> id;<br><span class="hljs-type">int</span> val;<br><span class="hljs-type">int</span> ver;<br><span class="hljs-type">bool</span> <span class="hljs-keyword">operator</span> &lt;(<span class="hljs-type">const</span> node &amp;a)<span class="hljs-type">const</span><br>&#123;<br><span class="hljs-keyword">if</span>(val==a.val)<span class="hljs-keyword">return</span> id&gt;a.id;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> val&gt;a.val;<br>&#125;<br>&#125;;<br>priority_queue &lt;node&gt; q;<br><span class="hljs-type">int</span> v[MAXN];<br><span class="hljs-type">bool</span> isdel[MAXN];<span class="hljs-comment">//是否删除</span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">read</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> x=<span class="hljs-number">0</span>,f=<span class="hljs-number">1</span>;<br><span class="hljs-type">char</span> c=<span class="hljs-built_in">getchar</span>();<br><span class="hljs-keyword">while</span>(!<span class="hljs-built_in">isdigit</span>(c))<br>&#123;<br><span class="hljs-keyword">if</span>(c==<span class="hljs-string">&#x27;-&#x27;</span>)f=<span class="hljs-number">-1</span>;<br>c=<span class="hljs-built_in">getchar</span>();<br>&#125;<br><span class="hljs-keyword">while</span>(<span class="hljs-built_in">isdigit</span>(c))<br>&#123;<br>x=x*<span class="hljs-number">10</span>+c-<span class="hljs-string">&#x27;0&#x27;</span>;<br>c=<span class="hljs-built_in">getchar</span>();<br>&#125;<br><span class="hljs-keyword">return</span> x*f;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">print</span><span class="hljs-params">(<span class="hljs-type">int</span> x)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span>(x&lt;<span class="hljs-number">0</span>)x=-x;<br><span class="hljs-keyword">if</span>(x&lt;<span class="hljs-number">10</span>)<span class="hljs-built_in">putchar</span>(x+<span class="hljs-string">&#x27;0&#x27;</span>);<br><span class="hljs-keyword">else</span> <span class="hljs-built_in">print</span>(x/<span class="hljs-number">10</span>),<span class="hljs-built_in">putchar</span>(x%<span class="hljs-number">10</span>+<span class="hljs-string">&#x27;0&#x27;</span>);<br>&#125;<br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>n=<span class="hljs-built_in">read</span>(),k=<span class="hljs-built_in">read</span>();<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>&#123;<br>a[i]=<span class="hljs-built_in">read</span>();<br>q.<span class="hljs-built_in">push</span>(&#123;i,a[i],<span class="hljs-number">0</span>&#125;);<br>lst[i]=&#123;i<span class="hljs-number">-1</span>,i<span class="hljs-number">+1</span>&#125;;<span class="hljs-comment">//链表</span><br>&#125;<br>lst[<span class="hljs-number">1</span>].pre=lst[n].nxt=<span class="hljs-number">-1</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> vers=<span class="hljs-number">1</span>;vers&lt;=k;vers++)<br>&#123;<br><span class="hljs-keyword">while</span>(!q.<span class="hljs-built_in">empty</span>()&amp;&amp;q.<span class="hljs-built_in">top</span>().ver!=v[q.<span class="hljs-built_in">top</span>().id])q.<span class="hljs-built_in">pop</span>();<span class="hljs-comment">//过期的数据弹出</span><br>node front=q.<span class="hljs-built_in">top</span>();<br>q.<span class="hljs-built_in">pop</span>();<br><span class="hljs-type">int</span> id=front.id;<br>isdel[id]=<span class="hljs-number">1</span>;<br><span class="hljs-type">int</span> val=front.val;<br><span class="hljs-type">int</span> pre=lst[id].pre,nxt=lst[id].nxt;<br><span class="hljs-keyword">if</span>(pre!=<span class="hljs-number">-1</span>)<br>&#123;<br>lst[pre].nxt=nxt;<br>a[pre]+=val;<br>q.<span class="hljs-built_in">push</span>(&#123;pre,a[pre],vers&#125;);<br>v[pre]=vers;<br>&#125;<br><span class="hljs-keyword">if</span>(nxt!=<span class="hljs-number">-1</span>)<br>&#123;<br>lst[nxt].pre=pre;<br>a[nxt]+=val;<br>q.<span class="hljs-built_in">push</span>(&#123;nxt,a[nxt],vers&#125;);<br>v[nxt]=vers;<br>&#125;<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br><span class="hljs-keyword">if</span>(!isdel[i])<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%lld &quot;</span>,a[i]);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>题解</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【题解】洛谷P2829</title>
    <link href="/2025/08/24/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91%E6%B4%9B%E8%B0%B7P2829/"/>
    <url>/2025/08/24/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91%E6%B4%9B%E8%B0%B7P2829/</url>
    
    <content type="html"><![CDATA[<p><a href="http://luogu.com.cn/problem/p2829">题目传送门</a></p><p>这道题和<a href="https://j27egu.github.io/2025/08/23/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91%E6%B4%9B%E8%B0%B7P2865/">P2865</a>一样，都是最短路。</p><p>只是在读入时统计度数，更新时增加判断：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">if</span>(v!=<span class="hljs-number">1</span>&amp;&amp;v!=n&amp;&amp;deg[v]&lt;k)<span class="hljs-keyword">continue</span>;<br></code></pre></td></tr></table></figure><p>这道题就过了。</p><p>文章最短的一次……</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> MAXN=<span class="hljs-number">5010</span>,inf=<span class="hljs-number">0x3f3f3f3f</span>;<br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">edge</span><br>&#123;<br>    <span class="hljs-type">int</span> v,w;<br>&#125;;<br>vector &lt;edge&gt; g[MAXN];<br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">node</span><br>&#123;<br>    <span class="hljs-type">int</span> u,dis;<br>    <span class="hljs-type">bool</span> <span class="hljs-keyword">operator</span> &lt;(<span class="hljs-type">const</span> node a)<span class="hljs-type">const</span> <br>    &#123;<br>        <span class="hljs-keyword">return</span> dis&gt;a.dis;<br>    &#125;<br>&#125;;<br><span class="hljs-type">int</span> dis[MAXN],ldis[MAXN],deg[MAXN],n,m,k;<br><span class="hljs-type">bool</span> vis[MAXN][MAXN];<br>priority_queue &lt;node&gt; q;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">dijkstra</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">memset</span>(dis,inf,<span class="hljs-built_in">sizeof</span>(dis));<br>    <span class="hljs-built_in">memset</span>(ldis,inf,<span class="hljs-built_in">sizeof</span>(ldis));<br>    dis[<span class="hljs-number">1</span>]=<span class="hljs-number">0</span>;<br>    q.<span class="hljs-built_in">push</span>(&#123;<span class="hljs-number">1</span>,<span class="hljs-number">0</span>&#125;);<br>    <span class="hljs-keyword">while</span>(!q.<span class="hljs-built_in">empty</span>())<br>    &#123;<br>        node front=q.<span class="hljs-built_in">top</span>();<br>        q.<span class="hljs-built_in">pop</span>();<br>        <span class="hljs-type">int</span> u=front.u;<br>        <span class="hljs-keyword">if</span>(front.dis&gt;ldis[u]) <span class="hljs-keyword">continue</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;g[u].<span class="hljs-built_in">size</span>();i++)<br>        &#123;<br>            <span class="hljs-type">int</span> v=g[u][i].v,w=g[u][i].w;<br>            <span class="hljs-keyword">if</span>(v!=<span class="hljs-number">1</span>&amp;&amp;v!=n&amp;&amp;deg[v]&lt;k)<span class="hljs-keyword">continue</span>;<span class="hljs-comment">//这里增加判断！！！</span><br>            <span class="hljs-keyword">if</span>(front.dis+w&lt;dis[v])<br>            &#123;<br>                ldis[v]=dis[v];<br>                dis[v]=front.dis+w;<br>                q.<span class="hljs-built_in">push</span>(&#123;v,dis[v]&#125;);<br>            &#125;<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(front.dis+w&gt;dis[v]&amp;&amp;front.dis+w&lt;ldis[v])<br>            &#123;<br>                ldis[v]=front.dis+w;<br>                q.<span class="hljs-built_in">push</span>(&#123;v,ldis[v]&#125;);<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-number">0</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>),cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    cin&gt;&gt;n&gt;&gt;m&gt;&gt;k;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)<br>    &#123;<br>        <span class="hljs-type">int</span> u,v,w;<br>        cin&gt;&gt;u&gt;&gt;v&gt;&gt;w;<br>        g[u].<span class="hljs-built_in">push_back</span>(&#123;v,w&#125;);<br>        g[v].<span class="hljs-built_in">push_back</span>(&#123;u,w&#125;);<br>        <span class="hljs-keyword">if</span>(!vis[u][v])<br>        &#123;<span class="hljs-comment">//这里统计度数</span><br>            <span class="hljs-comment">//vis记录这个边是否有记录过，防止重边</span><br>            vis[u][v]=vis[v][u]=<span class="hljs-number">1</span>;<br>            deg[u]++,deg[v]++;<br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">dijkstra</span>();<br>    <span class="hljs-keyword">if</span>(ldis[n]==inf)cout&lt;&lt;<span class="hljs-number">-1</span>;<br>    <span class="hljs-keyword">else</span> cout&lt;&lt;ldis[n];<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>题解</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【题解】洛谷P2865</title>
    <link href="/2025/08/23/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91%E6%B4%9B%E8%B0%B7P2865/"/>
    <url>/2025/08/23/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91%E6%B4%9B%E8%B0%B7P2865/</url>
    
    <content type="html"><![CDATA[<p><a href="http://luogu.com.cn/problem/P2865">题目传送门</a></p><p>我们可以用1次dijkstra解决这个问题。</p><p>每次读入队首进行更新时有三种情况：</p><p>1.更新最短路、次短路。</p><p>2.能更新次短路，但不能更新最短路。</p><p>3.啥也不能更新。</p><p>用dis代表最短路，ldis代表次短路。</p><p>在<code>q.top().dis+w&lt;dis[v]</code>时可以更新最短路和次短路：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cpp">ldis[v]=dis[v];<br>dis[v]=q.<span class="hljs-built_in">top</span>().dis+w;<br></code></pre></td></tr></table></figure><p>在<code>q.top().dis+w&gt;dis[v]&amp;&amp;q.top().dis+w&lt;ldis[v]</code>时可以更新次短路：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp">ldis[v]=q.<span class="hljs-built_in">top</span>().dis+w;<br></code></pre></td></tr></table></figure><p>哦，还有判断队首节点是否要继续更新的条件也要改成</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp">front.dis&gt;ldis[u]<br></code></pre></td></tr></table></figure><p>不然就会跳过更新次短路。</p><p>以下是代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> MAXN=<span class="hljs-number">5010</span>,inf=<span class="hljs-number">0x3f3f3f3f</span>;<br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">edge</span><br>&#123;<br><span class="hljs-type">int</span> v,w;<br>&#125;;<br>vector &lt;edge&gt; g[MAXN];<br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">node</span><br>&#123;<br><span class="hljs-type">int</span> u,dis;<br><span class="hljs-type">bool</span> <span class="hljs-keyword">operator</span> &lt;(<span class="hljs-type">const</span> node a)<span class="hljs-type">const</span> <br>&#123;<br><span class="hljs-keyword">return</span> dis&gt;a.dis;<br>&#125;<br>&#125;;<br><span class="hljs-type">int</span> dis[MAXN],ldis[MAXN],n,m;<br>priority_queue &lt;node&gt; q;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">dijkstra</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-built_in">memset</span>(dis,inf,<span class="hljs-built_in">sizeof</span>(dis));<br><span class="hljs-built_in">memset</span>(ldis,inf,<span class="hljs-built_in">sizeof</span>(ldis));<br>dis[<span class="hljs-number">1</span>]=<span class="hljs-number">0</span>;<br>q.<span class="hljs-built_in">push</span>(&#123;<span class="hljs-number">1</span>,<span class="hljs-number">0</span>&#125;);<br><span class="hljs-keyword">while</span>(!q.<span class="hljs-built_in">empty</span>())<br>&#123;<br>node front=q.<span class="hljs-built_in">top</span>();<br>q.<span class="hljs-built_in">pop</span>();<br><span class="hljs-type">int</span> u=front.u;<br><span class="hljs-keyword">if</span>(front.dis&gt;ldis[u])<span class="hljs-keyword">continue</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;g[u].<span class="hljs-built_in">size</span>();i++)<br>&#123;<br><span class="hljs-type">int</span> v=g[u][i].v,w=g[u][i].w;<br><span class="hljs-keyword">if</span>(front.dis+w&lt;dis[v])<br>&#123;<br>ldis[v]=dis[v];<br>dis[v]=front.dis+w;<br>q.<span class="hljs-built_in">push</span>(&#123;v,dis[v]&#125;);<br>&#125;<br><span class="hljs-keyword">if</span>(front.dis+w&gt;dis[v]&amp;&amp;front.dis+w&lt;ldis[v])<br>&#123;<br>ldis[v]=front.dis+w;<br>q.<span class="hljs-built_in">push</span>(&#123;v,ldis[v]&#125;);<br>&#125;<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-number">0</span>);<br>cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>),cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>cin&gt;&gt;n&gt;&gt;m;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=m;i++)<br>&#123;<br><span class="hljs-type">int</span> u,v,w;<br>cin&gt;&gt;u&gt;&gt;v&gt;&gt;w;<br>g[u].<span class="hljs-built_in">push_back</span>(&#123;v,w&#125;);<br>g[v].<span class="hljs-built_in">push_back</span>(&#123;u,w&#125;);<br>&#125;<br><span class="hljs-built_in">dijkstra</span>();<br>cout&lt;&lt;ldis[n];<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>题解</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【题解】洛谷P2704</title>
    <link href="/2025/08/21/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91%E6%B4%9B%E8%B0%B7P2704/"/>
    <url>/2025/08/21/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91%E6%B4%9B%E8%B0%B7P2704/</url>
    
    <content type="html"><![CDATA[<p><a href="http://luogu.com.cn/problem/P2704">题目传送门</a></p><p>考虑到地形可以用二进制01表示，使用状压dp。</p><p>状压dp是采用十进制数字表示二进制的状态，实现状态的压缩。</p><p>如何设计状态，dp[层数][当前行的放置炮兵的情况][上一行放置炮兵的情况。</p><p>判断炮兵的放置情况要判断下面的情况是否合法：</p><ul><li>左移右移一位两位相与的结果要为0</li><li>放置情况与地形相与的结果要为0</li></ul><p>我们可以通过下面的代码来实现记录地形（grd数组）。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=m;j++)<br>    &#123;<br>        <span class="hljs-type">char</span> tmp;<br>        cin&gt;&gt;tmp;<br>        grd[i]=(grd[i]&lt;&lt;<span class="hljs-number">1</span>)+(tmp==<span class="hljs-string">&#x27;H&#x27;</span>);<br>    &#125;<br></code></pre></td></tr></table></figure><p>为了不误伤友军，我们需要通过二进制的左移和右移来判断是否会误伤。</p><p>我们用以下的代码，通过can数组来记录这个状态是否可用。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;(<span class="hljs-number">1</span>&lt;&lt;m);i++)<br><span class="hljs-keyword">if</span>(!(i&amp;(i&lt;&lt;<span class="hljs-number">1</span>))&amp;&amp;!(i&amp;(i&lt;&lt;<span class="hljs-number">2</span>))&amp;&amp;!(i&amp;i&gt;&gt;<span class="hljs-number">1</span>)&amp;&amp;!(i&amp;i&gt;&gt;<span class="hljs-number">2</span>))<br>&#123;<br>can[i]=<span class="hljs-number">1</span>;<br><span class="hljs-keyword">if</span>((i&amp;grd[<span class="hljs-number">1</span>])==<span class="hljs-number">0</span>)dp[<span class="hljs-number">1</span>][i][<span class="hljs-number">0</span>]=<span class="hljs-built_in">res</span>(i);<br>&#125;<br></code></pre></td></tr></table></figure><p>我们还可以顺便把dp的第一层给搞定。</p><p>res(i)是用来计算i在二进制下1的个数。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">res</span><span class="hljs-params">(<span class="hljs-type">int</span> i)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> cnt=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">while</span>(i)<br>&#123;<br><span class="hljs-keyword">if</span>(i&amp;<span class="hljs-number">1</span>)cnt++;<br>i&gt;&gt;=<span class="hljs-number">1</span>;<br>&#125;<br><span class="hljs-keyword">return</span> cnt;<br>&#125;<br></code></pre></td></tr></table></figure><p>同理，我们通过枚举上一行和当前行的状态来进行dp。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">//对第二行进行dp</span><br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> A=<span class="hljs-number">0</span>;A&lt;(<span class="hljs-number">1</span>&lt;&lt;m);A++)<br><span class="hljs-keyword">if</span>(can[A]&amp;&amp;(A&amp;grd[<span class="hljs-number">1</span>])==<span class="hljs-number">0</span>)<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> B=<span class="hljs-number">0</span>;B&lt;(<span class="hljs-number">1</span>&lt;&lt;m);B++)<br><span class="hljs-keyword">if</span>(can[B]&amp;&amp;(B&amp;grd[<span class="hljs-number">2</span>])==<span class="hljs-number">0</span>&amp;&amp;(A&amp;B)==<span class="hljs-number">0</span>)<br>dp[<span class="hljs-number">2</span>][B][A]=dp[<span class="hljs-number">1</span>][A][<span class="hljs-number">0</span>]+<span class="hljs-built_in">res</span>(B);<br><span class="hljs-comment">//对3~n行进行dp</span><br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">3</span>;i&lt;=n;i++)<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> A=<span class="hljs-number">0</span>;A&lt;(<span class="hljs-number">1</span>&lt;&lt;m);A++)<br><span class="hljs-keyword">if</span>(can[A]&amp;&amp;(A&amp;grd[i<span class="hljs-number">-2</span>])==<span class="hljs-number">0</span>)<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> B=<span class="hljs-number">0</span>;B&lt;(<span class="hljs-number">1</span>&lt;&lt;m);B++)<br><span class="hljs-keyword">if</span>(can[B]&amp;&amp;(B&amp;grd[i<span class="hljs-number">-1</span>])==<span class="hljs-number">0</span>&amp;&amp;(A&amp;B)==<span class="hljs-number">0</span>)<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> C=<span class="hljs-number">0</span>;C&lt;(<span class="hljs-number">1</span>&lt;&lt;m);C++)<br><span class="hljs-keyword">if</span>(can[C]&amp;&amp;(C&amp;grd[i])==<span class="hljs-number">0</span>&amp;&amp;(C&amp;A)==<span class="hljs-number">0</span>&amp;&amp;(C&amp;B)==<span class="hljs-number">0</span>)<br>dp[i][C][B]=<span class="hljs-built_in">max</span>(dp[i][C][B],dp[i<span class="hljs-number">-1</span>][B][A]+<span class="hljs-built_in">res</span>(C));<br></code></pre></td></tr></table></figure><p>后面用ans统计答案。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;(<span class="hljs-number">1</span>&lt;&lt;m);j++)<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> k=<span class="hljs-number">0</span>;k&lt;(<span class="hljs-number">1</span>&lt;&lt;m);k++)<br>ans=<span class="hljs-built_in">max</span>(ans,dp[i][j][k]);<br></code></pre></td></tr></table></figure><p>相信大家的拼装能力肯定不错，能够把上面这些零件拼起来的。</p><h2 id="完整答案："><a href="#完整答案：" class="headerlink" title="完整答案："></a>完整答案：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> n,m,grd[<span class="hljs-number">110</span>],dp[<span class="hljs-number">110</span>][(<span class="hljs-number">1</span>&lt;&lt;<span class="hljs-number">10</span>)][(<span class="hljs-number">1</span>&lt;&lt;<span class="hljs-number">10</span>)];<br><span class="hljs-type">bool</span> can[(<span class="hljs-number">1</span>&lt;&lt;<span class="hljs-number">10</span>)];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">res</span><span class="hljs-params">(<span class="hljs-type">int</span> i)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> cnt=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">while</span>(i)<br>&#123;<br><span class="hljs-keyword">if</span>(i&amp;<span class="hljs-number">1</span>)cnt++;<br>i&gt;&gt;=<span class="hljs-number">1</span>;<br>&#125;<br><span class="hljs-keyword">return</span> cnt;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-number">0</span>);<br>cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>),cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>cin&gt;&gt;n&gt;&gt;m;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=m;j++)<br>&#123;<br><span class="hljs-type">char</span> tmp;<br>cin&gt;&gt;tmp;<br>grd[i]=(grd[i]&lt;&lt;<span class="hljs-number">1</span>)+(tmp==<span class="hljs-string">&#x27;H&#x27;</span>);<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;(<span class="hljs-number">1</span>&lt;&lt;m);i++)<br><span class="hljs-keyword">if</span>(!(i&amp;(i&lt;&lt;<span class="hljs-number">1</span>))&amp;&amp;!(i&amp;(i&lt;&lt;<span class="hljs-number">2</span>))&amp;&amp;!(i&amp;i&gt;&gt;<span class="hljs-number">1</span>)&amp;&amp;!(i&amp;i&gt;&gt;<span class="hljs-number">2</span>))<br>&#123;<br>can[i]=<span class="hljs-number">1</span>;<br><span class="hljs-keyword">if</span>((i&amp;grd[<span class="hljs-number">1</span>])==<span class="hljs-number">0</span>)dp[<span class="hljs-number">1</span>][i][<span class="hljs-number">0</span>]=<span class="hljs-built_in">res</span>(i);<br>&#125;<br><br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> A=<span class="hljs-number">0</span>;A&lt;(<span class="hljs-number">1</span>&lt;&lt;m);A++)<br><span class="hljs-keyword">if</span>(can[A]&amp;&amp;(A&amp;grd[<span class="hljs-number">1</span>])==<span class="hljs-number">0</span>)<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> B=<span class="hljs-number">0</span>;B&lt;(<span class="hljs-number">1</span>&lt;&lt;m);B++)<br><span class="hljs-keyword">if</span>(can[B]&amp;&amp;(B&amp;grd[<span class="hljs-number">2</span>])==<span class="hljs-number">0</span>&amp;&amp;(A&amp;B)==<span class="hljs-number">0</span>)<br>dp[<span class="hljs-number">2</span>][B][A]=dp[<span class="hljs-number">1</span>][A][<span class="hljs-number">0</span>]+<span class="hljs-built_in">res</span>(B);<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">3</span>;i&lt;=n;i++)<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> A=<span class="hljs-number">0</span>;A&lt;(<span class="hljs-number">1</span>&lt;&lt;m);A++)<br><span class="hljs-keyword">if</span>(can[A]&amp;&amp;(A&amp;grd[i<span class="hljs-number">-2</span>])==<span class="hljs-number">0</span>)<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> B=<span class="hljs-number">0</span>;B&lt;(<span class="hljs-number">1</span>&lt;&lt;m);B++)<br><span class="hljs-keyword">if</span>(can[B]&amp;&amp;(B&amp;grd[i<span class="hljs-number">-1</span>])==<span class="hljs-number">0</span>&amp;&amp;(A&amp;B)==<span class="hljs-number">0</span>)<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> C=<span class="hljs-number">0</span>;C&lt;(<span class="hljs-number">1</span>&lt;&lt;m);C++)<br><span class="hljs-keyword">if</span>(can[C]&amp;&amp;(C&amp;grd[i])==<span class="hljs-number">0</span>&amp;&amp;(C&amp;A)==<span class="hljs-number">0</span>&amp;&amp;(C&amp;B)==<span class="hljs-number">0</span>)<br>dp[i][C][B]=<span class="hljs-built_in">max</span>(dp[i][C][B],dp[i<span class="hljs-number">-1</span>][B][A]+<span class="hljs-built_in">res</span>(C));<br><span class="hljs-type">int</span> ans=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;(<span class="hljs-number">1</span>&lt;&lt;m);j++)<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> k=<span class="hljs-number">0</span>;k&lt;(<span class="hljs-number">1</span>&lt;&lt;m);k++)<br>ans=<span class="hljs-built_in">max</span>(ans,dp[i][j][k]);<br>cout&lt;&lt;ans;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>; <br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>题解</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【学习笔记】树上差分</title>
    <link href="/2025/07/29/%E3%80%90%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E3%80%91%E6%A0%91%E4%B8%8A%E5%B7%AE%E5%88%86/"/>
    <url>/2025/07/29/%E3%80%90%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E3%80%91%E6%A0%91%E4%B8%8A%E5%B7%AE%E5%88%86/</url>
    
    <content type="html"><![CDATA[<h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>1.点差分</p><p>2.边差分</p><h2 id="边差分"><a href="#边差分" class="headerlink" title="边差分"></a>边差分</h2><p>对差分和差分数组的理解一般都是停留再数组这种线性结构上，这可能会导致学习树上差分的时候无法理解这个概念。</p><p>树上差分一般应用于在树上的路径统计。</p><p>对于一棵树，可以设置差分数组表示经过边$i$（边$i$的定义是连接$i$到$i$父亲的这条边）的次数。</p><p>进行边差分是一般是从叶子节点向根节点进行差分。</p><p>若要在$(u,v)$的路径上进行加$i$，那我们要在差分数组进行下面操作。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs cpp">d[u]+=i,d[v]+=i,d[<span class="hljs-built_in">lca</span>(u,v)]-=<span class="hljs-number">2</span>i;<br><span class="hljs-comment">//反之</span><br>d[u]-=i,d[v]-=i,d[<span class="hljs-built_in">lca</span>(u,v)]+=<span class="hljs-number">2</span>i;<br></code></pre></td></tr></table></figure><p>任意两点之间有且只有一条简单路径。</p><p>如果是一棵无根树，那么确定根节点后，出根节点外每个点有且只有一个父节点。</p><h2 id="点差分"><a href="#点差分" class="headerlink" title="点差分"></a>点差分</h2><p>对于图上的问题，有一些问题是带边权的，有一些问题则是带点权的。</p><p>对于这些问题，可以把两种权值相互转化，即边权转点权、点权转边权等操作。</p><p>但是其实有时候完全没有必要，点的差分数组比较好定义：</p><p>$d_i$表示$i$点一共被经过几次。那么对于路径$(u,v)$，就有以下的操作。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs cpp">d[u]+=i,d[v]+=i,d[<span class="hljs-built_in">lca</span>(u,v)]-=i,d[fa[<span class="hljs-built_in">lca</span>(u,v)]]-=i;<br><span class="hljs-comment">//反之</span><br>d[u]-=i,d[v]-=i,d[<span class="hljs-built_in">lca</span>(u,v)]+=i,d[fa[<span class="hljs-built_in">lca</span>(u,v)]]+=i;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>学习笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【学习笔记】子树和</title>
    <link href="/2025/07/29/%E3%80%90%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E3%80%91%E5%AD%90%E6%A0%91%E5%92%8C/"/>
    <url>/2025/07/29/%E3%80%90%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E3%80%91%E5%AD%90%E6%A0%91%E5%92%8C/</url>
    
    <content type="html"><![CDATA[<h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>在数据结构中存在一种叫“树”的结构。</p><p>树的定义：树是由$n$个节点（或元素）组成的有限集合（记为$T$）。</p><ul><li><p>如果$n&#x3D;0$，它是一棵空树。</p></li><li><p>如果$n&gt;0$，这个n个节点有且仅有一个节点作为树的根节点，简称为跟，其余节点可分为$m(m\leq 0)$个互不相干的有限集合$T1,T2\cdots$，其中，每个自己不呢神是一棵符合定义的树，成为根节点的子树。</p></li></ul><h2 id="求二叉树的最大子树和"><a href="#求二叉树的最大子树和" class="headerlink" title="求二叉树的最大子树和"></a>求二叉树的最大子树和</h2><p><a href="http://luogu.com.cn/problem/P1122">p_lnk</a></p><p>通过递归树形dp，求以$u$为根的最大值。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> MAXN=<span class="hljs-number">100010</span>;<br>vector &lt;<span class="hljs-type">int</span>&gt; g[MAXN];<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> ll;<br>ll w[MAXN],dp[MAXN];<br><span class="hljs-type">int</span> n;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">dfs</span><span class="hljs-params">(<span class="hljs-type">int</span> u,<span class="hljs-type">int</span> fa)</span></span><br><span class="hljs-function"></span>&#123;<br>dp[u]=w[u];<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> v:g[u])<br>&#123;<br><span class="hljs-keyword">if</span>(v==fa)<span class="hljs-keyword">continue</span>;<br><span class="hljs-built_in">dfs</span>(v,u);<br>dp[u]+=<span class="hljs-built_in">max</span>(dp[v],<span class="hljs-number">0LL</span>);<br>&#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>cin&gt;&gt;n;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)cin&gt;&gt;w[i];<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;n;i++)<br>&#123;<br><span class="hljs-type">int</span> u,v;<br>cin&gt;&gt;u&gt;&gt;v;<br>g[u].<span class="hljs-built_in">push_back</span>(v);<br>g[v].<span class="hljs-built_in">push_back</span>(u);<br>&#125;<br><span class="hljs-built_in">dfs</span>(<span class="hljs-number">1</span>,<span class="hljs-number">0</span>);<br>cout&lt;&lt;*<span class="hljs-built_in">max_element</span>(dp<span class="hljs-number">+1</span>,dp+n<span class="hljs-number">+1</span>);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>学习笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【学习笔记】单源次短路径</title>
    <link href="/2025/07/27/%E3%80%90%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E3%80%91%E5%8D%95%E6%BA%90%E6%AC%A1%E7%9F%AD%E8%B7%AF%E5%BE%84/"/>
    <url>/2025/07/27/%E3%80%90%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E3%80%91%E5%8D%95%E6%BA%90%E6%AC%A1%E7%9F%AD%E8%B7%AF%E5%BE%84/</url>
    
    <content type="html"><![CDATA[<h2 id="算法思想"><a href="#算法思想" class="headerlink" title="算法思想"></a>算法思想</h2><p>通过改进dijkstra的更新逻辑来实现单源次短路径。</p><p>当我们从队首得到一个新的点$u$和$s$到$u$的距离$d$时，会有以下三种情况：</p><p>其中的$d_i$表示$s$到$i$的最短路径，$ld_i$表示$s$到$i$的次短路径。</p><ul><li>$dis &lt; d_u$，可以更新最短路和次短路，那么次短路更新成原来的最短路，然后更新最短路。</li><li>$d_i &lt; dis &lt; ld_i$，可以更新次短路，直接更新。</li><li>$dis &gt; ld_i$，都更新不了。</li></ul><p>根据这个逻辑，我们就能够做好啦！</p><p><a href="http://j27egu.github.io/2025/08/23/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91%E6%B4%9B%E8%B0%B7P2865">代码+例题</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>学习笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【题解】洛谷P1729</title>
    <link href="/2025/07/25/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91%E6%B4%9B%E8%B0%B7P1729/"/>
    <url>/2025/07/25/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91%E6%B4%9B%E8%B0%B7P1729/</url>
    
    <content type="html"><![CDATA[<p><a href="http://luogu.com.cn/problem/P1729">题目传送门</a></p><p>由于我不会写高精度，只好打表。</p><p><a href="https://www.cnblogs.com/Xsmyy/p/13458500.html">lnk</a></p><p>（正好有一篇博客就是记录$e$的$10000$位，直接ctrl+c，ctrl+v！）</p><p>可谓：</p><blockquote><p>小巧玲珑，短小精悍。</p></blockquote><p>代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>string s=<span class="hljs-string">&quotquot;</span>;<br><span class="hljs-type">int</span> n;<br>cin&gt;&gt;n;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;2.\n&quot;</span>);<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>&#123;<br>cout&lt;&lt;s[i<span class="hljs-number">-1</span>];<br><span class="hljs-keyword">if</span>(i%<span class="hljs-number">50</span>==<span class="hljs-number">0</span>)<span class="hljs-built_in">putchar</span>(<span class="hljs-string">&#x27;\n&#x27;</span>);<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(i%<span class="hljs-number">10</span>==<span class="hljs-number">0</span>)<span class="hljs-built_in">putchar</span>(<span class="hljs-string">&#x27; &#x27;</span>);<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>非常不推荐这种做法，<del>（但是我还是赛时用了o(<em>￣▽￣</em>)ブ）</del></p>]]></content>
    
    
    
    <tags>
      
      <tag>休闲娱乐</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【学习笔记】线段树</title>
    <link href="/2025/07/25/%E3%80%90%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E3%80%91%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    <url>/2025/07/25/%E3%80%90%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E3%80%91%E7%BA%BF%E6%AE%B5%E6%A0%91/</url>
    
    <content type="html"><![CDATA[<p>线段树是一种二叉搜索树，它将一个区间划分成一些单元区间，每个单元区间对应线段树中的一个叶子节点。</p><p>使用线段树可以快速的查找某一个节点在若干条线段中出现的次数，时间复杂度未$O(\log n)$。而未优化的空间复杂度为$2N$，实际应用是一般还要开$4N$，的数组以免越界，因此有时需要离散化让空间压缩。</p><p>树的形态一般如下：（引用自OI-WIKI）</p><img src="https://oi-wiki.org/ds/images/segt1.svg" style="zoom:50%;" /><p>对于线段树中的每一个非叶子节点$[a,b]$，它的左儿子表示区间为$[a,\frac{a+b}{2}]$，它的右儿子表示的区间为$[\frac{a+b}{2}+1,b]$。因此线段树是平衡二叉树，最后的子节点数目为$N$，即整个线段区间的长度。</p><p>使用线段树可以快速查找某一个节点在若干条线段中出现的次数，时间复杂度为$O(\log 2n)$。而为优化的空间复杂度为$T(2N)$，因此有时需要离散化进行空间压缩。</p><p>图片举例（引用自CSDN la_alweq）</p><p>每个节点存什么，节点下标是什么，如何建树？</p><p><a href="https://i-blog.csdnimg.cn/blog_migrate/8e64e93c7a590efe8490c43c052406df.png">pic_lnk</a></p><img src="https://i-blog.csdnimg.cn/blog_migrate/8e64e93c7a590efe8490c43c052406df.png" style="zoom:50%;" /><p>该数组为$a&#x3D;{1,8,6,4,3,5}$，红色代表节点存储的区间，蓝色表示该区间内的最大值。</p><p>每个叶子节点的值，就是数组的值，每个非叶子节点的度都为二，且左右两个孩子分别存储父亲一般的区间。</p><p>每个父亲存储的值也就是两个孩子存储的值的最大值。</p><p>如何快速找到非叶子节点的孩子以及非根节点的父亲？</p><p>对于一个区间$[l,r]$来说，最重要的数据当然就是区间的做右端点$l$和$r$，但是大部分的情况我们并不会去存储这两个数值，而是通过递归的传参方式进行传递。</p><p>这种方式用指针很好实现，定义两个左右子树递归即可，但是指针表示过于繁琐，而且不方便各种操作，大部分线段树都是使用数组进行表示，快速使用下标找到左右子树。</p><p>图片举例（引用自CSDN la_alweq）</p><p><a href="https://i-blog.csdnimg.cn/blog_migrate/3e23057c9052f59c9a96cb7373d71b37.png">pic_lnk</a></p><img src="https://i-blog.csdnimg.cn/blog_migrate/3e23057c9052f59c9a96cb7373d71b37.png" style="zoom:50%;" /><p>其中的绿色是下表编号。</p><p>在最下排的编号从$9$直接到$12$，中间其实有两个空间。虽然没有使用，但还是存在。所以无优化的线段树开到$4N$才能防止RE。</p><p>每个父亲和孩子下标的关系如下：</p><ul><li>每个左子树的下标都是偶数，右子树的下标都是奇数。</li><li>父亲节点是儿子节点的一半，向下取整。</li><li>儿子节点是父亲节点的两倍，或加一。</li></ul><p>把线段树看作一个完全二叉树，空节点也当作使用。</p><p>根据奇怪的规律<del>（不支持md所以省略）</del>很简单就得到右子树节点为左子树节点数加一。</p><p><del>（这一段是什么用处呢？）</del></p><p>因为左子树都是偶数，所以我们常用位运算来寻寻找左右子树。</p><ul><li>k&lt;&lt;1，节点$k$的左子树下标。</li><li>k&lt;&lt;1|1，节点$k$的右子树下标。</li></ul><p>假如要修改$a[3]$，则包含此值的节点都需要更新。</p><p>根据二叉树的性质，$\log k$个节点都需要进行更新，这也正是为什么每次更新的时间复杂度为$O(\log n)$。</p><p>可以发现无论更新那个叶子节点，最终都会回到根节点，而把这个往上推的过程逆过来就是从根节点进行递归处理。</p><p>以下面的图为例（引用自CSDN la_alweq）</p><p><a href="https://i-blog.csdnimg.cn/blog_migrate/f2de351965c5ecdab7a635025be5de68.png">pic_lnk</a></p><img src="https://i-blog.csdnimg.cn/blog_migrate/f2de351965c5ecdab7a635025be5de68.png" style="zoom:50%;" /><p>线段树的每个节点存储的都是一段区间的信息，如果刚好要查询这个节点，那么则直接返回这个节点的信息即可，比如直接查询$[1,6]$这个区间的最值，那么直接返回根节点信息$13$。</p><p>若要查询区间$[2,5]$，那我们只需要查询$[2,2]，[3,3]，[4,5]$，三个区间。$[4,4]，[5,5]$不需要查找，包含在$[4,5]$中了。</p><p>$[2,5]$一共五个区间，而且发现$[4,5]$这个区间已经包含了$[4,4]，[5,5]$两个子树的信息，所以需要查询的区间只有三个，是$[2,2]，[3,3]，[4,5]$。</p><p>可以通过更新的思路想出来查询的思路，从根节点开始往下递归，时间复杂度$O(\log n)$。</p><p>线段树的区间更新使用差分的思想。</p><p>传统上，对于区间$[l,r]$，可能每次都更新区间中的每个值，更新的复杂度将会是$O(n\log n)$，造成浪费。</p><p>在进行区间更新是，引用lazy标记，提高更新的效率。</p><p>如果当前区间被需要修改的目标区间完全覆盖，则在被更新节点上打lazy标记，此区间不向下传导，这样的搭配使区间更新的操作和区间查询类似，复杂度为$O(\log n)$。</p>]]></content>
    
    
    
    <tags>
      
      <tag>学习笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【题解】洛谷P7775</title>
    <link href="/2025/07/23/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91%E6%B4%9B%E8%B0%B7P7775/"/>
    <url>/2025/07/23/%E3%80%90%E9%A2%98%E8%A7%A3%E3%80%91%E6%B4%9B%E8%B0%B7P7775/</url>
    
    <content type="html"><![CDATA[<p>感谢@<a href="https://www.luogu.com.cn/user/1392775">xiejinghan</a><del>在赛时</del>给我分享思路。</p><p><a href="http://luogu.com.cn/problem/P7775">题目传送门</a></p><h2 id="题意简述"><a href="#题意简述" class="headerlink" title="题意简述"></a>题意简述</h2><p>在一个二维矩阵上面，从<code>V</code>到<code>J</code>的路径中，求离<code>+</code>的最短距离。</p><h2 id="解题步骤"><a href="#解题步骤" class="headerlink" title="解题步骤"></a>解题步骤</h2><p>题目中写<code>离它最近的树的距离的最小值</code>，很明显就能想到二分。</p><p>在读入数据时，用<code>startx</code>和<code>starty</code>标记起点的坐标。</p><p>同时，用<code>endx</code>和<code>endy</code>标记窝的坐标。</p><p>这里$dtt_{i,j}$表示$i,j$到树的最短距离</p><p>接着，使用bfs的方式，对$dtt$进行处理。</p><p>（顾名思义，$dtt_{i,j}$就是坐标$i,j$的点到最近的一棵树的最短距离）</p><p>然后特判，如果起点和窝的位置重合，就直接输出$dtt_{startx,starty}$。</p><p>接下来使用二分的技巧，$l&#x3D;0,r&#x3D;1000$，然后while循环二分查找直到$l \geq r$。</p><p>如何查找？</p><p>就是用双向广搜，也就是从起点和窝同时进行广搜。</p><p>在进行双向bfs的过程中，vis的状态变成了$0,1,2$。</p><p>其中的$0$表示没有访问到，$1$表示这是起点过来访问到的，$2$表示窝过来访问到的。</p><p>bfs直到下一个点的状态（$vis_{nx,ny}$）与当前点的状态（$vis_{x,y}$）不相同，返回$1$。</p><p>（在这之前一定要判断$vis_{nx,ny} \neq 0$）</p><p>否则返回$0$。</p><h2 id="代码部分"><a href="#代码部分" class="headerlink" title="代码部分"></a>代码部分</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> MAXN=<span class="hljs-number">510</span>;<br><span class="hljs-type">int</span> n,m,dis_to_tree[MAXN][MAXN],startx,starty,endx,endy;<br><span class="hljs-type">int</span> vis[MAXN][MAXN];<br><span class="hljs-type">char</span> mp[MAXN][MAXN];<br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">node</span><br>&#123;<br><span class="hljs-type">int</span> x,y,to_tree_dis,type;<br>&#125;;<br><span class="hljs-type">int</span> dx[<span class="hljs-number">4</span>]=&#123;<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">-1</span>&#125;,dy[<span class="hljs-number">4</span>]=&#123;<span class="hljs-number">1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>&#125;;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">search1</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-built_in">memset</span>(dis_to_tree,<span class="hljs-number">-1</span>,<span class="hljs-built_in">sizeof</span>(dis_to_tree));<br><span class="hljs-built_in">memset</span>(vis,<span class="hljs-number">0</span>,<span class="hljs-built_in">sizeof</span>(vis));<br>queue&lt;node&gt; q;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=m;j++)<br>&#123;<br><span class="hljs-keyword">if</span>(mp[i][j]==<span class="hljs-string">&#x27;+&#x27;</span>)<br>&#123;<br>dis_to_tree[i][j]=<span class="hljs-number">0</span>;<br>vis[i][j]=<span class="hljs-number">1</span>;<br>q.<span class="hljs-built_in">push</span>(&#123;i,j,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>&#125;);<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-keyword">while</span>(!q.<span class="hljs-built_in">empty</span>())<br>&#123;<br>node top=q.<span class="hljs-built_in">front</span>();<br>q.<span class="hljs-built_in">pop</span>();<br><span class="hljs-type">int</span> x=top.x,y=top.y;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">4</span>;i++)<br>&#123;<br><span class="hljs-type">int</span> nx=x+dx[i],ny=y+dy[i];<br><span class="hljs-keyword">if</span>(nx&gt;=<span class="hljs-number">1</span>&amp;&amp;ny&gt;=<span class="hljs-number">1</span>&amp;&amp;nx&lt;=n&amp;&amp;ny&lt;=m&amp;&amp;!vis[nx][ny])<br>&#123;<br>dis_to_tree[nx][ny]=top.to_tree_dis<span class="hljs-number">+1</span>;<br>vis[nx][ny]=<span class="hljs-number">1</span>;<br>q.<span class="hljs-built_in">push</span>(&#123;nx,ny,dis_to_tree[nx][ny],<span class="hljs-number">0</span>&#125;);<br>&#125;<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">solve</span><span class="hljs-params">(<span class="hljs-type">int</span> dis)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span>(dis==<span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br><span class="hljs-built_in">memset</span>(vis,<span class="hljs-number">0</span>,<span class="hljs-built_in">sizeof</span>(vis));<br>queue&lt;node&gt; q;<br><span class="hljs-keyword">if</span>(dis_to_tree[startx][starty]&lt;dis||dis_to_tree[endx][endy]&lt;dis) <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>q.<span class="hljs-built_in">push</span>(&#123;startx,starty,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>&#125;);<br>q.<span class="hljs-built_in">push</span>(&#123;endx,endy,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>&#125;);<br>vis[startx][starty]=<span class="hljs-number">1</span>;<br>vis[endx][endy]=<span class="hljs-number">2</span>;<br><span class="hljs-keyword">while</span>(!q.<span class="hljs-built_in">empty</span>())<br>&#123;<br>node top=q.<span class="hljs-built_in">front</span>();<br>q.<span class="hljs-built_in">pop</span>();<br><span class="hljs-type">int</span> x=top.x,y=top.y;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">4</span>;i++)<br>&#123;<br><span class="hljs-type">int</span> nx=x+dx[i],ny=y+dy[i];<br><span class="hljs-keyword">if</span>(nx&lt;<span class="hljs-number">1</span>||ny&lt;<span class="hljs-number">1</span>||nx&gt;n||ny&gt;m) <span class="hljs-keyword">continue</span>;<br><span class="hljs-keyword">if</span>(dis_to_tree[nx][ny]&lt;dis) <span class="hljs-keyword">continue</span>;<br><span class="hljs-keyword">if</span>(!vis[nx][ny])<br>&#123;<br>vis[nx][ny]=top.type;<br>q.<span class="hljs-built_in">push</span>(&#123;nx,ny,<span class="hljs-number">0</span>,top.type&#125;);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(vis[nx][ny]!=top.type)<br>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>cin&gt;&gt;n&gt;&gt;m;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)<br>&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=m;j++)<br>&#123;<br>cin&gt;&gt;mp[i][j];<br><span class="hljs-keyword">if</span>(mp[i][j]==<span class="hljs-string">&#x27;V&#x27;</span>) startx=i,starty=j;<br><span class="hljs-keyword">if</span>(mp[i][j]==<span class="hljs-string">&#x27;J&#x27;</span>) endx=i,endy=j;<br>&#125;<br>&#125;<br><span class="hljs-built_in">search1</span>();<br><span class="hljs-keyword">if</span>(startx==endx&amp;&amp;starty==endy)<br>&#123;<br>cout&lt;&lt;dis_to_tree[startx][starty]&lt;&lt;endl;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-type">int</span> l=<span class="hljs-number">0</span>,r=<span class="hljs-number">1000</span>;<br><span class="hljs-keyword">while</span>(l&lt;r)<br>&#123;<br><span class="hljs-type">int</span> mid=(l+r<span class="hljs-number">+1</span>)&gt;&gt;<span class="hljs-number">1</span>;<br><span class="hljs-keyword">if</span>(<span class="hljs-built_in">solve</span>(mid)) l=mid;<br><span class="hljs-keyword">else</span> r=mid<span class="hljs-number">-1</span>;<br>&#125;<br>cout&lt;&lt;l&lt;&lt;endl;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>题解</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
